<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-07-09T09:36:20.403Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rplidarA1-gmapping</title>
    <link href="http://example.com/2023/06/30/rplidarA1-gmapping/"/>
    <id>http://example.com/2023/06/30/rplidarA1-gmapping/</id>
    <published>2023-06-30T07:35:47.000Z</published>
    <updated>2023-07-09T09:36:20.403Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>所参考的大佬教程如下 <br><a class="link"   href="https://blog.csdn.net/qq_43961980/article/details/118113609" >大佬1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a class="link"   href="https://blog.csdn.net/weixin_46781669/article/details/107738966?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242" >大佬2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a class="link"   href="https://blog.csdn.net/VampireWolf/article/details/90042517" >大佬3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="前情介绍"><a href="#前情介绍" class="headerlink" title="前情介绍"></a>前情介绍</h1><blockquote><p>任务背景为：要使用思岚A1M8激光雷达实现建图及避障、导航等功能<br>本次为实现建图</p></blockquote><blockquote><p>Gmapping是基于滤波SLAM框架的常用开源SLAM算法，在ROS中使用Gmapping建图需要提供 Odometry(里程计信息)和laser(激光数据)，但是只用一个激光雷达也可以进行Gmapping建图</p><blockquote><p>其实我们是有双目相机T265可以提供姿态信息的，但受限于当前知识水平，暂且使用较为方便的Gmapping算法进行操作</p></blockquote></blockquote><blockquote><p>采用的方法就是使用 laser_scan_matcher 功能包，其为增量激光扫描配准工具。该软件包允许扫描连续的 sensor_msgs &#x2F; LaserScan 消息之间的匹配，并将估计的激光位置发布为 geometry_msgs &#x2F; Pose2D 或 tf 变换。该包可以在没有其他传感器提供的任何测距估计的情况下使用。因此，它可以作为独立的里程计算器估算器。</p></blockquote><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><h2 id="创建工作空间"><a href="#创建工作空间" class="headerlink" title="创建工作空间"></a>创建工作空间</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据自己习惯创建工作空间</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/rplidar_ws/src &amp;&amp; <span class="built_in">cd</span> ~/rplidar_ws/src</span><br></pre></td></tr></table></figure></div><h2 id="下载所需的功能包"><a href="#下载所需的功能包" class="headerlink" title="下载所需的功能包"></a>下载所需的功能包</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Slamtec/rplidar_ros.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/CCNYRoboticsLab/scan_tools.git</span><br></pre></td></tr></table></figure></div><h2 id="获取gmapping功能包"><a href="#获取gmapping功能包" class="headerlink" title="获取gmapping功能包"></a>获取gmapping功能包</h2><blockquote><p>网址为：<a class="link"   href="https://github.com/CCNYRoboticsLab/scan_tools.git" >https://github.com/CCNYRoboticsLab/scan_tools.git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <br>下载或克隆仓库后将其中的gmapping文件夹复制到工作空间下的src中（比如我的就是<code>~/rplidar_ws/src</code>）</p></blockquote><h2 id="接着下载必要功能包"><a href="#接着下载必要功能包" class="headerlink" title="接着下载必要功能包"></a>接着下载必要功能包</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将melodic替换为自己的ros版本</span></span><br><span class="line">sudo apt-get install ros-melodic-csm</span><br><span class="line">sudo apt-get install ros-melodic-gmapping</span><br></pre></td></tr></table></figure></div><h2 id="编译工作空间"><a href="#编译工作空间" class="headerlink" title="编译工作空间"></a>编译工作空间</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入工作空间</span></span><br><span class="line"><span class="built_in">cd</span> ~/rplidar_ws</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure></div><h2 id="修改启动launch文件"><a href="#修改启动launch文件" class="headerlink" title="修改启动launch文件"></a>修改启动launch文件</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/rplidar_ws/src/scan_tools-indigo/laser_scan_matcher/demo</span><br></pre></td></tr></table></figure></div><blockquote><p>这里原先的<code>demo_gmapping.launch</code>文件则为启动launch文件，这里要做的就是修改它以实行自己的设备<br>这里提供我的launch文件</p></blockquote><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Example launch file: uses laser_scan_matcher together with</span></span><br><span class="line"><span class="comment">slam_gmapping </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  #### set up data playback from bag #############################</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;/use_sim_time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;flase&quot;</span>/&gt;</span><span class="comment">&lt;!-- 因为Gmapping 的simulation 时间是True, 改为false  网上查到的--&gt;</span></span><br><span class="line"></span><br><span class="line">  #### rplidar_a2 ################################################</span><br><span class="line">  <span class="comment">&lt;!--激光雷达的启动文件--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;rplidarNode&quot;</span>          <span class="attr">pkg</span>=<span class="string">&quot;rplidar_ros&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;rplidarNode&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_port&quot;</span>         <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/ttyUSB0&quot;</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_baudrate&quot;</span>     <span class="attr">type</span>=<span class="string">&quot;int&quot;</span>    <span class="attr">value</span>=<span class="string">&quot;115200&quot;</span>/&gt;</span> <span class="comment">&lt;!-- A1波特率 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;frame_id&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;laser&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;inverted&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;angle_compensate&quot;</span>    <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_mode&quot;</span>           <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Sensitivity&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  #### publish an example base_link -&gt; laser transform ###########</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;base_link_to_laser&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">args</span>=<span class="string">&quot;0.0 0.0 0.0 0.0 0.0 0.0 /base_link /laser 40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  #### start rviz ################################################</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">type</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rviz&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">args</span>=<span class="string">&quot;-d $(find laser_scan_matcher)/demo/demo_gmapping.rviz&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  #### start the laser scan_matcher ##############################</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;laser_scan_matcher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;laser_scan_matcher_node&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">&quot;laser_scan_matcher_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;fixed_frame&quot;</span> <span class="attr">value</span> = <span class="string">&quot;odom&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;max_iterations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;base_frame&quot;</span> <span class="attr">value</span> = <span class="string">&quot;base_link&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;use_odom&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;publy_pose&quot;</span> <span class="attr">value</span> = <span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;publy_tf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  #### start gmapping ############################################</span><br><span class="line"><span class="comment">&lt;!--前三个param必须设置修改，要不然tf_tree不完整--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;gmapping&quot;</span> <span class="attr">type</span>=<span class="string">&quot;slam_gmapping&quot;</span> <span class="attr">name</span>=<span class="string">&quot;slam_gmapping&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;base_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/base_link&quot;</span>/&gt;</span> <span class="comment">&lt;!--***机器人的坐标系--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;odom_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/odom&quot;</span> /&gt;</span> <span class="comment">&lt;!--***世界坐标系--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/map&quot;</span> /&gt;</span> <span class="comment">&lt;!--***地图坐标系--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_udpate_interval&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;maxUrange&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;sigma&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;kernelSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lstep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;astep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;iterations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lsigma&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ogain&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lskip&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;srr&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;srt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;stt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;linearUpdate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;angularUpdate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;temporalUpdate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.4&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;resampleThreshold&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;particles&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;xmin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;-5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ymin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;-5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;xmax&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ymax&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;delta&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.02&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;llsamplerange&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.01&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;llsamplestep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lasamplerange&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lasamplestep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>其中 重点修改的为</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;rplidarNode&quot;</span>          <span class="attr">pkg</span>=<span class="string">&quot;rplidar_ros&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;rplidarNode&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_port&quot;</span>         <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/ttyUSB0&quot;</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_baudrate&quot;</span>     <span class="attr">type</span>=<span class="string">&quot;int&quot;</span>    <span class="attr">value</span>=<span class="string">&quot;115200&quot;</span>/&gt;</span> <span class="comment">&lt;!-- A1波特率 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;frame_id&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;laser&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;inverted&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;angle_compensate&quot;</span>    <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_mode&quot;</span>           <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Sensitivity&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>第一行的<code>rplidarNode</code>及<code>rplidar_ros</code>需要按照自己的激光雷达启动节点而定<br>第三行的波特率数值需要根据雷达而定 如我的A1M8为115200</p></blockquote><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><blockquote><p>以下需要在同一终端中进行</p></blockquote><h2 id="刷新环境变量"><a href="#刷新环境变量" class="headerlink" title="刷新环境变量"></a>刷新环境变量</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/rplidar_ws/devel/setup.bash</span><br></pre></td></tr></table></figure></div><h2 id="给串口权限"><a href="#给串口权限" class="headerlink" title="给串口权限"></a>给串口权限</h2><p>可以使用</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /dev/*</span><br></pre></td></tr></table></figure></div><p>进行查询，如我的是<code>ttyUSB0</code><br>则输入</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure></div><h2 id="运行launch文件"><a href="#运行launch文件" class="headerlink" title="运行launch文件"></a>运行launch文件</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch  laser_scan_matcher demo_gmapping.launch</span><br></pre></td></tr></table></figure></div><blockquote><p>其中<code>demo_gmapping.launch</code>可以根据自己修改的launch文件而修改</p></blockquote>]]></content>
    
    
    <summary type="html">基于Jetson平台，使用思岚A1激光雷达运行gmapping进行建图</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
    <category term="rplidarA1" scheme="http://example.com/tags/rplidarA1/"/>
    
    <category term="Slam" scheme="http://example.com/tags/Slam/"/>
    
    <category term="Gmapping" scheme="http://example.com/tags/Gmapping/"/>
    
  </entry>
  
  <entry>
    <title>acfly-mavros</title>
    <link href="http://example.com/2023/06/28/acfly-mavros/"/>
    <id>http://example.com/2023/06/28/acfly-mavros/</id>
    <published>2023-06-28T02:37:24.000Z</published>
    <updated>2023-06-30T08:21:54.374Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此为为Jetson配置Intel T265，以此为acfly飞控提供定位<br>官方参考教程：<a class="link"   href="https://github.com/IntelRealSense/realsense-ros" >realsense-ros <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>     <a class="link"   href="https://github.com/CGC12123/acfly-mavros" >acfly-mavros <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="ROS-Wrapper"><a href="#ROS-Wrapper" class="headerlink" title="ROS Wrapper"></a>ROS Wrapper</h1><blockquote><p>T265使用所需的packages</p></blockquote><h2 id="安装-ROS"><a href="#安装-ROS" class="headerlink" title="安装 ROS"></a>安装 ROS</h2><blockquote><p>Install <a class="link"   href="http://wiki.ros.org/kinetic/Installation/Ubuntu" >ROS Kinetic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 16.04, <a class="link"   href="http://wiki.ros.org/melodic/Installation/Ubuntu" >ROS Melodic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 18.04, <a class="link"   href="http://wiki.ros.org/noetic/Installation/Ubuntu" >ROS Noetic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 20.04.<br><a class="link"   href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html" >可参考autolabor的安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="安装realsense2-camera"><a href="#安装realsense2-camera" class="headerlink" title="安装realsense2_camera"></a>安装realsense2_camera</h2><p>realsense2_camera 可作为 ROS 发行版的 debian 软件包使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-$ROS_DISTRO-realsense2-camera</span><br></pre></td></tr></table></figure></div><h1 id="安装mavros"><a href="#安装mavros" class="headerlink" title="安装mavros"></a>安装mavros</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-catkin-tools python-rosinstall-generator -y</span><br><span class="line"># 如果用的ROS版本是Noetic则使用</span><br><span class="line"># sudo apt install python3-catkin-tools python3-rosinstall-generator python3-osrf-pycommon -y</span><br><span class="line"></span><br><span class="line"># 需要替换你的ROS版本，且以下指令需要在同一个终端执行</span><br><span class="line">source /opt/ros/$&#123;你的ROS版本&#125;/setup.bash</span><br><span class="line"></span><br><span class="line"># 因为acfly增加了自定义mavlink信息，若之前有通过二进制安装过mavros则需要卸载，没有则跳过</span><br><span class="line">sudo apt purge ros-$&#123;ROS_DISTRO&#125;-mavlink ros-$&#123;ROS_DISTRO&#125;-mavros</span><br><span class="line"></span><br><span class="line"># 构建ROS工作空间，可以自行修改路径</span><br><span class="line">mkdir -p ~/acfly_ws/src &amp;&amp; cd ~/acfly_ws</span><br><span class="line">catkin init</span><br><span class="line"></span><br><span class="line"># 下载mavlink和acfly-mavros</span><br><span class="line">cd src</span><br><span class="line">git clone -b release/$&#123;ROS_DISTRO&#125;/mavlink/2022.1.5-1 https://gitee.com/LauZanMo/mavlink</span><br><span class="line">git clone -b acfly-develop https://gitee.com/LauZanMo/acfly-mavros</span><br><span class="line"># 以下两个为非官方文档中提供</span><br><span class="line">git clone https://github.com/thien94/vision_to_mavros.git</span><br><span class="line">git clone https://github.com/IntelRealSense/librealsense.git</span><br><span class="line"></span><br><span class="line"># 安装依赖，如果rosdep update没执行则需要执行成功才能继续</span><br><span class="line">cd .. &amp;&amp; rosdep install --from-paths src --ignore-src -y</span><br><span class="line"></span><br><span class="line"># 安装GeographicLib:</span><br><span class="line">./src/acfly-mavros/mavros/scripts/install_geographiclib_datasets.sh</span><br><span class="line"># 注意此处可能会报需要root权限（不会标error）出现后在前方加sudo即可</span><br><span class="line"></span><br><span class="line"># 第一次编译请执行acfly提供的脚本</span><br><span class="line">./src/acfly-mavros/update_custom_msg.sh</span><br><span class="line"># 后续更改mavros源码只需要执行catkin build</span><br><span class="line"></span><br><span class="line"># 每一次开启终端都需要设置环境变量</span><br><span class="line">source devel/setup.bash</span><br></pre></td></tr></table></figure></div><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 第一个终端</span><br><span class="line"># 打开t265</span><br><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br><span class="line"></span><br><span class="line"># 第二个终端</span><br><span class="line"># 添加权限</span><br><span class="line">sudo chmod 777 /dev/ttyAMA0</span><br><span class="line">roslaunch mavros acfly.launch fcu_url:=/dev/ttyUSB0:57600</span><br><span class="line"></span><br><span class="line"># 第三个终端</span><br><span class="line"># 此处需要先source前一步安装mavros工作空间中的setup.bash</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch vision_to_mavros t265_tf_to_mavros.launch</span><br></pre></td></tr></table></figure></div><h1 id="其他-使用指南"><a href="#其他-使用指南" class="headerlink" title="其他 使用指南"></a>其他 使用指南</h1><blockquote><p>acfly-mavros 作者提供了使用指南及二次开发指南<br><a class="link"   href="https://github.com/LauZanMo/acfly-mavros/blob/acfly-develop/acfly-mavros%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.md" >使用指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://github.com/LauZanMo/acfly-mavros/blob/acfly-develop/acfly-mavros%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97.md" >二次开发指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="关于自启动"><a href="#关于自启动" class="headerlink" title="关于自启动"></a>关于自启动</h1><a href="/2023/05/08/Ubuntu%E8%87%AA%E5%8A%A8%E8%84%9A%E6%9C%AC/" title="Ubuntu自启动脚本">自启动可看这篇</a>]]></content>
    
    
    <summary type="html">基于Jetson平台，使用Intel T265为acfly飞控提供定位</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="无人机" scheme="http://example.com/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    <category term="双目相机" scheme="http://example.com/tags/%E5%8F%8C%E7%9B%AE%E7%9B%B8%E6%9C%BA/"/>
    
    <category term="T265" scheme="http://example.com/tags/T265/"/>
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
  </entry>
  
  <entry>
    <title>vnc远程连接jetson</title>
    <link href="http://example.com/2023/05/10/vnc%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5jetson/"/>
    <id>http://example.com/2023/05/10/vnc%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5jetson/</id>
    <published>2023-05-10T13:55:24.000Z</published>
    <updated>2023-05-10T14:16:52.615Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>事件背景为使用 <code>windows</code> 端的 <code>vnc viewer</code> 远程连接 <code>jetson orin nano</code></p></blockquote><h1 id="在nano端安装-vncserver"><a href="#在nano端安装-vncserver" class="headerlink" title="在nano端安装 vncserver"></a>在<code>nano端</code>安装 <code>vncserver</code></h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vncserver</span><br></pre></td></tr></table></figure></div><h1 id="开启vncserver"><a href="#开启vncserver" class="headerlink" title="开启vncserver"></a>开启vncserver</h1><p>在<code>nano</code>终端使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver</span><br></pre></td></tr></table></figure></div><p>或</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -geometry 1366x768 :1 </span><br><span class="line"># geometry设置vnc屏幕的大小，1为端口</span><br></pre></td></tr></table></figure></div><p>按照要求设置好密码后，会出现如下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/nano/server%20start.jpg"                                     ></p><blockquote><p>图示为在端口1开启</p></blockquote><p>使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -i vnc</span><br></pre></td></tr></table></figure></div><p>即可查询在使用vnc的进程</p><h1 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h1><p>打开 <code>windows</code> 端的 <code>vnc</code>，在上方输入 <code>ip:端口号</code> ，如<code>192.168.1.1:1</code></p><h1 id="出现的问题一"><a href="#出现的问题一" class="headerlink" title="出现的问题一"></a>出现的问题一</h1><h2 id="报错如下"><a href="#报错如下" class="headerlink" title="报错如下"></a>报错如下</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The connection was refused by the computer</span><br></pre></td></tr></table></figure></div><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><blockquote><p>原因为nano端的vncserver没开，在终端输入</p></blockquote><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver</span><br></pre></td></tr></table></figure></div><p>或</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -geometry 1366x768 :1 </span><br><span class="line"># geometry设置vnc屏幕的大小，1为端口</span><br></pre></td></tr></table></figure></div><p>重启 <code>windows</code> 的 <code>vnc</code> 即可</p><h1 id="出现问题二"><a href="#出现问题二" class="headerlink" title="出现问题二"></a>出现问题二</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>屏幕显示灰色并且鼠标是×型符号 下方出现<code>unencrypted connection</code></p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><h3 id="关闭端口"><a href="#关闭端口" class="headerlink" title="关闭端口"></a>关闭端口</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -kill :1</span><br><span class="line"># kill 端口为1的进程，注意:1前面要加空格</span><br></pre></td></tr></table></figure></div><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开配置文件</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/.vnc/xstartup</span><br><span class="line"># 打开配置文件</span><br></pre></td></tr></table></figure></div><p>修改配置文件为</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># Uncomment the following two lines for normal desktop:</span><br><span class="line"># unset SESSION_MANAGER</span><br><span class="line"># exec /etc/X11/xinit/xinitrc</span><br><span class="line"></span><br><span class="line">[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup</span><br><span class="line">[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources</span><br><span class="line">xsetroot -solid grey</span><br><span class="line">vncconfig -iconic &amp;</span><br><span class="line">x-terminal-emulator -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP Desktop&quot; &amp;</span><br><span class="line">x-window-manager &amp;</span><br><span class="line"></span><br><span class="line">#gnome-terminal &amp;</span><br><span class="line"></span><br><span class="line">sesion-manager &amp; xfdesktop &amp; xfce4-panel &amp;</span><br><span class="line">xfce4-menu-plugin &amp;</span><br><span class="line">xfsettingsd &amp;</span><br><span class="line">xfconfd &amp;</span><br><span class="line">xfwm4 &amp;</span><br></pre></td></tr></table></figure></div><p>之后再打开vnc即可解决</p>]]></content>
    
    
    <summary type="html">使用VNC远程连接JetsonOrin Nano</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Jetson Orin Nano" scheme="http://example.com/tags/Jetson-Orin-Nano/"/>
    
    <category term="VNC" scheme="http://example.com/tags/VNC/"/>
    
    <category term="远程连接" scheme="http://example.com/tags/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu自启动脚本</title>
    <link href="http://example.com/2023/05/08/Ubuntu%E8%87%AA%E5%8A%A8%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2023/05/08/Ubuntu%E8%87%AA%E5%8A%A8%E8%84%9A%E6%9C%AC/</id>
    <published>2023-05-08T10:16:30.000Z</published>
    <updated>2023-05-10T14:41:21.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h1><p>任务背景为在Jetson Orin Nano上使用t265时，需要同时按序开启并执行三个不同终端<br>如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">添加权限</span><br><span class="line">sudo chmod 777 /dev/ttyAMA0</span><br><span class="line">roslaunch mavros acfly.launch fcu_url:=/dev/ttyUSB0:57600</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开t265文件夹，打开终端</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch vision_to_mavros t265_tf_to_mavros.launch</span><br></pre></td></tr></table></figure></div><h1 id="脚本的写法"><a href="#脚本的写法" class="headerlink" title="脚本的写法"></a>脚本的写法</h1><p>使用</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sh1 = <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_1.sh&quot;</span></span><br><span class="line">subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh1, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line"><span class="comment"># sh1为需要在该终端执行的命令</span></span><br></pre></td></tr></table></figure></div><p>其中sh1为事先写好的bash脚本，例如</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br></pre></td></tr></table></figure></div><p>若有若干命令需要在同一终端中执行，则为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sh2s = [<span class="string">&quot;echo 123456 | sudo -S chmod +x /home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sudo chmod 777 /dev/ttyUSB0&quot;</span>, </span><br><span class="line">        <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>]</span><br><span class="line">sh2 = <span class="string">&quot;bash -c &#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;; &quot;</span>.join(sh2s))</span><br><span class="line">subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh2, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br></pre></td></tr></table></figure></div><blockquote><p>需要注意的是：<br>在一个终端中执行的需要放在同一个中，不能使用 <code>os.system</code> ，使用  <code>os.system</code> 则会回到最初始的终端中执行<br><code>subprocess.Popen</code> 创建的终端，若终端执行结束或出现报错，则该终端会被杀死消失，可使用 <code>--hold</code> 使其保持开启</p></blockquote><p>所以我的最终启动脚本为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">T265_Start</span>():</span><br><span class="line">    sh1 = <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_1.sh&quot;</span></span><br><span class="line">    sh2s = [<span class="string">&quot;echo 123456 | sudo -S chmod +x /home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>,</span><br><span class="line">            <span class="string">&quot;sudo chmod 777 /dev/ttyUSB0&quot;</span>, </span><br><span class="line">            <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>]</span><br><span class="line">    sh2 = <span class="string">&quot;bash -c &#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;; &quot;</span>.join(sh2s))</span><br><span class="line">    sh3 = <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_3.sh&quot;</span></span><br><span class="line"></span><br><span class="line">    subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh1, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh2, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh3, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><h1 id="自启动的设置"><a href="#自启动的设置" class="headerlink" title="自启动的设置"></a>自启动的设置</h1>]]></content>
    
    
    <summary type="html">在Jetson Orin Nano - Ubuntu20.04中设置开启开机自启动，且该脚本适用于开启多终端任务场景</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Jetson Orin Nano" scheme="http://example.com/tags/Jetson-Orin-Nano/"/>
    
  </entry>
  
  <entry>
    <title>git的安装配置</title>
    <link href="http://example.com/2023/04/10/git%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/04/10/git%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</id>
    <published>2023-04-10T13:10:28.000Z</published>
    <updated>2023-04-10T13:49:41.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>可在官方网站上下载，网站：<a class="link"   href="https://git-scm.com//" >https://git-scm.com/\ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>也可在国内镜像源下载，网站：<a class="link"   href="http://npm.taobao.org/mirrors/git-for-windows" >http://npm.taobao.org/mirrors/git-for-windows <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></div><h1 id="github账号的注册"><a href="#github账号的注册" class="headerlink" title="github账号的注册"></a>github账号的注册</h1><p>进入github，注册账号，网站：<a class="link"   href="https://github.com/" >https://github.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><blockquote><p>在此处要注意记住你注册时的用户名和邮箱</p></blockquote><h1 id="git的配置"><a href="#git的配置" class="headerlink" title="git的配置"></a>git的配置</h1><h2 id="找到git命令行输入处"><a href="#找到git命令行输入处" class="headerlink" title="找到git命令行输入处"></a>找到git命令行输入处</h2><h3 id="方法1-Windows"><a href="#方法1-Windows" class="headerlink" title="方法1-Windows"></a>方法1-Windows</h3><p>在文件夹中右键，点击 <code>git bash</code> ，没有也没关系，很可能会没有</p><h3 id="方法2-Windows"><a href="#方法2-Windows" class="headerlink" title="方法2-Windows"></a>方法2-Windows</h3><p>按 <code>win+r</code> 后输入 <code>cmd</code> （在默认路径下呼出）<br>或 在你的目标文件夹下点击上面的框，输入 <code>cmd</code> 然后回车可以在当前路径下呼出 <code>cmd</code> </p><h3 id="方法3-Ubuntu"><a href="#方法3-Ubuntu" class="headerlink" title="方法3-Ubuntu"></a>方法3-Ubuntu</h3><p>直接在终端中输入 <code>git</code> 命令即可</p><h2 id="配置用户名"><a href="#配置用户名" class="headerlink" title="配置用户名"></a>配置用户名</h2><p>在命令行中输入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br></pre></td></tr></table></figure></div><blockquote><p>此处 <code>username</code> 是自己的用户名</p></blockquote><h2 id="配置邮箱"><a href="#配置邮箱" class="headerlink" title="配置邮箱"></a>配置邮箱</h2><p>在命令行中输入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;username@email.com&quot;</span><br></pre></td></tr></table></figure></div><blockquote><p>此处 <code>username@email.com</code> 是自己的邮箱</p></blockquote><h2 id="验证配置"><a href="#验证配置" class="headerlink" title="验证配置"></a>验证配置</h2><p>在命令行中输入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list </span><br></pre></td></tr></table></figure></div><blockquote><p>输出内容可以检查你的配置信息是否争取，如有误可以回到前面的配置步骤进行更改</p></blockquote><p>至此，git下载及配置完成</p><h1 id="git常用命令的学习"><a href="#git常用命令的学习" class="headerlink" title="git常用命令的学习"></a>git常用命令的学习</h1><p>推荐一个教程网站：<a class="link"   href="https://learngitbranching.js.org/?locale=zh_CN" >https://learngitbranching.js.org/?locale=zh_CN <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">git的安装配置及github账号的注册</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>启动virtualbox虚拟机发生错误警告</title>
    <link href="http://example.com/2023/04/10/%E5%90%AF%E5%8A%A8virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E8%AD%A6%E5%91%8A/"/>
    <id>http://example.com/2023/04/10/%E5%90%AF%E5%8A%A8virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E8%AD%A6%E5%91%8A/</id>
    <published>2023-04-10T11:40:40.000Z</published>
    <updated>2023-04-16T11:17:36.557Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>部分问题解决参考自 <a class="link"   href="https://blog.csdn.net/m0_53688587/article/details/125074012" >https://blog.csdn.net/m0_53688587/article/details/125074012 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>启动virtualbox虚拟机显示Attempted to kill the idle task错误 如下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/ubuntu/problem.jpg"                                     ></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>这个问题我出现过两次</p><h2 id="第一次"><a href="#第一次" class="headerlink" title="第一次"></a>第一次</h2><p>第一次出现这个问题是在刚装 <code>WSL2</code> 后的一段时间，突然的改变让我意识到可能是 <code>WSL2</code> 的安装出了问题</p><p>排除 <code>WSL2</code> 或虚拟机本身问题后<br>查了很多问题 最后发现<br>大部分问题原因出在 <code>hyper-v</code> 的设置上<br>只需启动或关闭 <code>hyper-v</code> 服务即可解决问题</p><blockquote><p>在“控制面板”中，打开“程序和功能” <br>选择“启用或关闭 Windows 功能” <br>展开 Hyper-V ，展开 Hyper-V 平台 ，然后清除“Hyper-V 虚拟机监控程序” 复选框。</p></blockquote><h2 id="第二次"><a href="#第二次" class="headerlink" title="第二次"></a>第二次</h2><p>当我第二次发现这个问题时，距离上次使用虚拟机已经过去和很长时间了，于是我按照第一次的经验，熟练的进行操作<br>耶？竟然不管用<br>于是，我有又开始疯狂查，最后，发现似乎是分配到cpu和内存资源不够<br>解决的操作如下</p><blockquote><p>在 <code>virtualbox</code> 界面下，进入设置，找到系统设置中的处理器分配，把处理器数量加到2及以上，为了放心，我还在下方的显示窗口中将显存分配提高到32以上，至此，问题解决。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/ubuntu/sulution1.jpg"                                     ></p></blockquote><blockquote><p>虽然感觉可能问题的解决是在我先前关闭 <code>hyper-v</code> 有关，但增加处理器数和显存分配大小确实解决了我的问题<br> 如果只进行了一般的操作，问题还是没解决，可用参考我的两次经历来回试试看</p></blockquote>]]></content>
    
    
    <summary type="html">启动virtualbox虚拟机显示Attempted to kill the idle task错误</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu20.04" scheme="http://example.com/tags/Ubuntu20-04/"/>
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Ubuntu22.04" scheme="http://example.com/tags/Ubuntu22-04/"/>
    
    <category term="虚拟机" scheme="http://example.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="virtualbox" scheme="http://example.com/tags/virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22.04换源</title>
    <link href="http://example.com/2023/04/09/Ubuntu22.04%E6%8D%A2%E6%BA%90/"/>
    <id>http://example.com/2023/04/09/Ubuntu22.04%E6%8D%A2%E6%BA%90/</id>
    <published>2023-04-09T08:27:31.000Z</published>
    <updated>2023-04-10T11:41:42.189Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此为由20.04直接copy而来 未经验证</p></blockquote><h1 id="备份环境变量文件"><a href="#备份环境变量文件" class="headerlink" title="备份环境变量文件"></a>备份环境变量文件</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure></div><blockquote><p>sources.list 即储存环境变量的文件</p></blockquote><h1 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></div><blockquote><p>进入文件后按<code>i</code>或<code>insert</code>启动输入模式 删除原有内容</p></blockquote><blockquote><p>可在进入输入模式前在航首按<code>dd</code>删除当前行 或<code>dG</code>删除光标以后所有内容</p></blockquote><p>删除内容后使用新源进行替换</p><p><strong>阿里源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>清华源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>中科大源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>网易163源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>还源完成后</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></div><p>让计算机根据源进行更新</p>]]></content>
    
    
    <summary type="html">Ubuntu22.04更换国内源，提高速度</summary>
    
    
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Ubuntu22.04" scheme="http://example.com/tags/Ubuntu22-04/"/>
    
  </entry>
  
  <entry>
    <title>在树莓派上安装Ros</title>
    <link href="http://example.com/2023/04/09/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E5%AE%89%E8%A3%85Ros/"/>
    <id>http://example.com/2023/04/09/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E5%AE%89%E8%A3%85Ros/</id>
    <published>2023-04-09T07:05:31.000Z</published>
    <updated>2023-07-09T09:36:26.562Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考自<a class="link"   href="https://blog.csdn.net/Kevin555666888/article/details/107207719" >https://blog.csdn.net/Kevin555666888/article/details/107207719 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><blockquote><p>若源可用或源没问题可不换</p></blockquote><h2 id="更换源信息"><a href="#更换源信息" class="headerlink" title="更换源信息"></a>更换源信息</h2><blockquote><p>以下为中科大源</p></blockquote><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure></div><h2 id="设置key"><a href="#设置key" class="headerlink" title="设置key"></a>设置key</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu.com:80&#x27; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure></div><h2 id="进行更新"><a href="#进行更新" class="headerlink" title="进行更新"></a>进行更新</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></div><h1 id="安装ROS"><a href="#安装ROS" class="headerlink" title="安装ROS"></a>安装ROS</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure></div><blockquote><p>若在此处报错可能是源出了问题 可不断使用<code>sudo apt-get update</code> 和 <code>sudo apt-get upgrade</code>进行更新或更换网络</p></blockquote><h1 id="安装ROS依赖"><a href="#安装ROS依赖" class="headerlink" title="安装ROS依赖"></a>安装ROS依赖</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure></div><blockquote><p>若显示rosdep不是内部命令 则</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosdep update</span><br></pre></td></tr></table></figure></div></blockquote><hr><p>我在安装此处的时候出现的比较诡异的报错</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR: cannot download default sources list from:</span><br><span class="line">https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list</span><br><span class="line">Website may be down.</span><br></pre></td></tr></table></figure></div><p>看过别人的解决(来自<a class="link"   href="https://mp.weixin.qq.com/s/VGs8oWdhHH6XsHcx21lN4Q)/" >https://mp.weixin.qq.com/s/VGs8oWdhHH6XsHcx21lN4Q)\ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>方法如下<br>安装</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install rosdepc</span><br></pre></td></tr></table></figure></div><p>若没有显示pip则可尝试</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip </span><br></pre></td></tr></table></figure></div><p>如果还是没有 则</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip </span><br><span class="line">sudo pip install rosdepc</span><br></pre></td></tr></table></figure></div><p>在这之后再次运行 应该可用解决</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdepc init</span><br><span class="line">rosdepc update</span><br></pre></td></tr></table></figure></div><blockquote><p>和前面的差别是<code>rosdep</code>换成了<code>rosdepc</code><br>是一个国内大佬做的</p><p>至此 完美解决问题</p></blockquote><h1 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></div><h1 id="安装便利工具"><a href="#安装便利工具" class="headerlink" title="安装便利工具"></a>安装便利工具</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br></pre></td></tr></table></figure></div><h1 id="验证安装——运行实例"><a href="#验证安装——运行实例" class="headerlink" title="验证安装——运行实例"></a>验证安装——运行实例</h1><blockquote><p>打开第一个终端 输入：<code>roscore</code><br>打开第二个终端 输入：<code>rosrun turtlesim turtlesim_node</code><br>此时会打开一个有一个乌龟的窗口<br>打开第三个终端 输入：<code>rosrun turtlesim turtle_teleop_key</code><br>选择第三个终端 然后按键盘上的方向键就可以控制小乌龟运动了。</p></blockquote><blockquote><p>如果此时乌龟动起来了 表明安装成功</p></blockquote>]]></content>
    
    
    <summary type="html">在树莓派上进行Ros安装</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
    <category term="树莓派" scheme="http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Yolov8初体验</title>
    <link href="http://example.com/2023/03/26/Yolov8%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://example.com/2023/03/26/Yolov8%E5%88%9D%E4%BD%93%E9%AA%8C/</id>
    <published>2023-03-26T11:11:53.000Z</published>
    <updated>2023-03-26T11:30:48.360Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ultralytics YOLOv8 是由 Ultralytics 开发的一个前沿的 SOTA 模型。它在以前成功的 YOLO 版本基础上，引入了新的功能和改进，进一步提升了其性能和灵活性。YOLOv8 基于快速、准确和易于使用的设计理念，使其成为广泛的目标检测、图像分割和图像分类任务的绝佳选择。<br><a class="link"   href="https://github.com/ultralytics/ultralytics" >官方源码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="Yolov8的快速部署使用"><a href="#Yolov8的快速部署使用" class="headerlink" title="Yolov8的快速部署使用"></a>Yolov8的快速部署使用</h1><h2 id="使用命令行"><a href="#使用命令行" class="headerlink" title="使用命令行"></a>使用命令行</h2><p>基础调用如</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yolo predict model=yolov8n.pt source=&#x27;https://ultralytics.com/images/bus.jpg&#x27;</span><br></pre></td></tr></table></figure></div><blockquote><p><code>predict</code> 为任务模式，可选择<code>detect</code>, <code>classify</code>, <code>segment</code> 分别对应检测、分类、分割<br><code>model</code> 为所使用模型 主要有<code>YOLOv8n</code>, <code>YOLOv8s</code>,<code>YOLOv8m</code>,<code>YOLOv8l</code>, <code>YOLOv8x</code><br><code>source</code> 为目标，可指向图片或视频，填 <code>0</code> 为调用摄像头<br><a class="link"   href="https://docs.ultralytics.com/usage/cfg/" >完整参数配置可点击此处查看 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="Python调用"><a href="#Python调用" class="headerlink" title="Python调用"></a>Python调用</h2><p>和使用命令行相似<br>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ultralytics <span class="keyword">import</span> YOLO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载模型</span></span><br><span class="line">model = YOLO(<span class="string">&quot;yolov8n.yaml&quot;</span>)  <span class="comment"># 从头开始构建新模型</span></span><br><span class="line">model = YOLO(<span class="string">&quot;yolov8n.pt&quot;</span>)  <span class="comment"># 加载预训练模型（推荐用于训练）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use the model</span></span><br><span class="line">results = model.train(data=<span class="string">&quot;coco128.yaml&quot;</span>, epochs=<span class="number">3</span>)  <span class="comment"># 训练模型</span></span><br><span class="line">results = model.val()  <span class="comment"># 在验证集上评估模型性能</span></span><br><span class="line">results = model(<span class="string">&quot;https://ultralytics.com/images/bus.jpg&quot;</span>)  <span class="comment"># 预测图像</span></span><br><span class="line">success = model.export(<span class="built_in">format</span>=<span class="string">&quot;onnx&quot;</span>)  <span class="comment"># 将模型导出为 ONNX 格式</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Ultralytics YOLOv8 是由 Ultralytics 开发的一个前沿的 SOTA 模型。它在以前成功的 YOLO 版本基础上，引入了新的功能和改进，进一步提升了其性能和灵活性。YOLOv8 基于快速、准确和易于使用的设计理念，使其成为</summary>
      
    
    
    
    <category term="深度学习模型" scheme="http://example.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="计算机视觉" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="yolo" scheme="http://example.com/tags/yolo/"/>
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="深度学习" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>使用mmyolo快速搭建yolo网络</title>
    <link href="http://example.com/2023/03/26/%E4%BD%BF%E7%94%A8mmyolo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAyolo%E7%BD%91%E7%BB%9C/"/>
    <id>http://example.com/2023/03/26/%E4%BD%BF%E7%94%A8mmyolo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAyolo%E7%BD%91%E7%BB%9C/</id>
    <published>2023-03-26T06:43:05.000Z</published>
    <updated>2023-03-26T11:24:40.327Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说明：<br>此为根据实践搭建并从官方文档中整理而来，官方源码及文档如下<br><a class="link"   href="https://github.com/open-mmlab/mmyolo" >官方开源项目源码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://mmyolo.readthedocs.io/zh_CN/latest/get_started/15_minutes_object_detection.html#id1" >官方使用文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="使用conda创建新环境并安装pytorch"><a href="#使用conda创建新环境并安装pytorch" class="headerlink" title="使用conda创建新环境并安装pytorch"></a>使用conda创建新环境并安装pytorch</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conda create -n mmyolo python=3.8 -y</span><br><span class="line">conda activate mmyolo</span><br><span class="line"># 如果你有 GPU</span><br><span class="line">conda install pytorch torchvision -c pytorch</span><br><span class="line"># 如果你是 CPU</span><br><span class="line"># conda install pytorch torchvision cpuonly -c pytorch</span><br></pre></td></tr></table></figure></div><h2 id="安装-MMYOLO-和依赖库"><a href="#安装-MMYOLO-和依赖库" class="headerlink" title="安装 MMYOLO 和依赖库"></a>安装 MMYOLO 和依赖库</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/open-mmlab/mmyolo.git</span><br><span class="line">cd mmyolo</span><br><span class="line">pip install -U openmim</span><br><span class="line">mim install -r requirements/mminstall.txt</span><br><span class="line"># Install albumentations</span><br><span class="line">mim install -r requirements/albu.txt</span><br><span class="line"># Install MMYOLO</span><br><span class="line">mim install -v -e .</span><br><span class="line"># &quot;-v&quot; 指详细说明，或更多的输出</span><br><span class="line"># &quot;-e&quot; 表示在可编辑模式下安装项目，因此对代码所做的任何本地修改都会生效，从而无需重新安装。</span><br></pre></td></tr></table></figure></div><h1 id="准备数据集"><a href="#准备数据集" class="headerlink" title="准备数据集"></a>准备数据集</h1><p>此处数据集为官方文档中演示所用的Cat 数据集，为包括144张图片的单类别数据集<br>在上一步中克隆的mmyolo源码中，使用如下命令即可自动下载目标数据集</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/misc/download_dataset.py --dataset-name cat --save-dir ./data/cat --unzip --delete</span><br></pre></td></tr></table></figure></div><blockquote><p><code>data/cat/annotations</code> 中存放的是 COCO 格式的标注，<code>data/cat/images</code> 中存放的是所有图片</p></blockquote><h1 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h1><p>官方源码中已经为我们提供了yolov5等的配置文件，位于<code>configs</code>中，我们只需要继承这些配置文件，并按照需求进行相应修改即可<br>官方所给的配置案例为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于该配置进行继承并重写部分配置</span></span><br><span class="line">_base_ = <span class="string">&#x27;./configs/yolov5/yolov5_s-v61_syncbn_fast_8xb16-300e_coco.py&#x27;</span></span><br><span class="line"></span><br><span class="line">data_root = <span class="string">&#x27;./data/cat/&#x27;</span> <span class="comment"># 数据集根路径</span></span><br><span class="line">class_name = (<span class="string">&#x27;cat&#x27;</span>, ) <span class="comment"># 数据集类别名称</span></span><br><span class="line">num_classes = <span class="built_in">len</span>(class_name) <span class="comment"># 数据集类别数</span></span><br><span class="line"><span class="comment"># metainfo 必须要传给后面的 dataloader 配置，否则无效</span></span><br><span class="line"><span class="comment"># palette 是可视化时候对应类别的显示颜色</span></span><br><span class="line"><span class="comment"># palette 长度必须大于或等于 classes 长度</span></span><br><span class="line">metainfo = <span class="built_in">dict</span>(classes=class_name, palette=[(<span class="number">20</span>, <span class="number">220</span>, <span class="number">60</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于 tools/analysis_tools/optimize_anchors.py 自适应计算的 anchor</span></span><br><span class="line">anchors = [</span><br><span class="line">    [(<span class="number">68</span>, <span class="number">69</span>), (<span class="number">154</span>, <span class="number">91</span>), (<span class="number">143</span>, <span class="number">162</span>)],  <span class="comment"># P3/8</span></span><br><span class="line">    [(<span class="number">242</span>, <span class="number">160</span>), (<span class="number">189</span>, <span class="number">287</span>), (<span class="number">391</span>, <span class="number">207</span>)],  <span class="comment"># P4/16</span></span><br><span class="line">    [(<span class="number">353</span>, <span class="number">337</span>), (<span class="number">539</span>, <span class="number">341</span>), (<span class="number">443</span>, <span class="number">432</span>)]  <span class="comment"># P5/32</span></span><br><span class="line">]</span><br><span class="line"><span class="comment"># 最大训练 40 epoch</span></span><br><span class="line">max_epochs = <span class="number">40</span></span><br><span class="line"><span class="comment"># bs 为 12</span></span><br><span class="line">train_batch_size_per_gpu = <span class="number">12</span></span><br><span class="line"><span class="comment"># dataloader 加载进程数</span></span><br><span class="line">train_num_workers = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载 COCO 预训练权重</span></span><br><span class="line">load_from = <span class="string">&#x27;https://download.openmmlab.com/mmyolo/v0/yolov5/yolov5_s-v61_syncbn_fast_8xb16-300e_coco/yolov5_s-v61_syncbn_fast_8xb16-300e_coco_20220918_084700-86e02187.pth&#x27;</span>  <span class="comment"># noqa</span></span><br><span class="line"></span><br><span class="line">model = <span class="built_in">dict</span>(</span><br><span class="line">    <span class="comment"># 固定整个 backbone 权重，不进行训练</span></span><br><span class="line">    backbone=<span class="built_in">dict</span>(frozen_stages=<span class="number">4</span>),</span><br><span class="line">    bbox_head=<span class="built_in">dict</span>(</span><br><span class="line">        head_module=<span class="built_in">dict</span>(num_classes=num_classes),</span><br><span class="line">        prior_generator=<span class="built_in">dict</span>(base_sizes=anchors)</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">train_dataloader = <span class="built_in">dict</span>(</span><br><span class="line">    batch_size=train_batch_size_per_gpu,</span><br><span class="line">    num_workers=train_num_workers,</span><br><span class="line">    dataset=<span class="built_in">dict</span>(</span><br><span class="line">        data_root=data_root,</span><br><span class="line">        metainfo=metainfo,</span><br><span class="line">        <span class="comment"># 数据集标注文件 json 路径</span></span><br><span class="line">        ann_file=<span class="string">&#x27;annotations/trainval.json&#x27;</span>,</span><br><span class="line">        <span class="comment"># 数据集前缀</span></span><br><span class="line">        data_prefix=<span class="built_in">dict</span>(img=<span class="string">&#x27;images/&#x27;</span>)))</span><br><span class="line"></span><br><span class="line">val_dataloader = <span class="built_in">dict</span>(</span><br><span class="line">    dataset=<span class="built_in">dict</span>(</span><br><span class="line">        metainfo=metainfo,</span><br><span class="line">        data_root=data_root,</span><br><span class="line">        ann_file=<span class="string">&#x27;annotations/test.json&#x27;</span>,</span><br><span class="line">        data_prefix=<span class="built_in">dict</span>(img=<span class="string">&#x27;images/&#x27;</span>)))</span><br><span class="line"></span><br><span class="line">test_dataloader = val_dataloader</span><br><span class="line"></span><br><span class="line">_base_.optim_wrapper.optimizer.batch_size_per_gpu = train_batch_size_per_gpu</span><br><span class="line"></span><br><span class="line">val_evaluator = <span class="built_in">dict</span>(ann_file=data_root + <span class="string">&#x27;annotations/test.json&#x27;</span>)</span><br><span class="line">test_evaluator = val_evaluator</span><br><span class="line"></span><br><span class="line">default_hooks = <span class="built_in">dict</span>(</span><br><span class="line">    <span class="comment"># 每隔 10 个 epoch 保存一次权重，并且最多保存 2 个权重</span></span><br><span class="line">    <span class="comment"># 模型评估时候自动保存最佳模型</span></span><br><span class="line">    checkpoint=<span class="built_in">dict</span>(interval=<span class="number">10</span>, max_keep_ckpts=<span class="number">2</span>, save_best=<span class="string">&#x27;auto&#x27;</span>),</span><br><span class="line">    <span class="comment"># warmup_mim_iter 参数非常关键，因为 cat 数据集非常小，默认的最小 warmup_mim_iter 是 1000，导致训练过程学习率偏小</span></span><br><span class="line">    param_scheduler=<span class="built_in">dict</span>(max_epochs=max_epochs, warmup_mim_iter=<span class="number">10</span>),</span><br><span class="line">    <span class="comment"># 日志打印间隔为 5</span></span><br><span class="line">    logger=<span class="built_in">dict</span>(<span class="built_in">type</span>=<span class="string">&#x27;LoggerHook&#x27;</span>, interval=<span class="number">5</span>))</span><br><span class="line"><span class="comment"># 评估间隔为 10</span></span><br><span class="line">train_cfg = <span class="built_in">dict</span>(max_epochs=max_epochs, val_interval=<span class="number">10</span>)</span><br></pre></td></tr></table></figure></div><p>可以直接复制使用，也可以进行进一步修改</p><blockquote><p>其中 <code>_base_ = &#39;yolov5_s-v61_syncbn_fast_8xb16-300e_coco.py&#39;</code> 修改所继承的配置文件，从 <code>configs</code> 中选取</p></blockquote><p>将如上继承后的文件另行保存至任意位置即可（需记下路径）</p><h1 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h1><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><p>在命令行中使用指令运行如</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/train.py configs/yolov5/yolov5_s-v61_fast_1xb12-40e_cat.py</span><br></pre></td></tr></table></figure></div><blockquote><p><code>tools/train.py</code> 为训练脚本<br><code>configs/yolov5/yolov5_s-v61_fast_1xb12-40e_cat.py</code> 为上一步中所说的配置文件，可直接使用官方所给，也可以使用自己所集成修改的，将此参数改为上一步中继承后的文件的路径即可</p></blockquote><blockquote><p>运行以上训练命令 <code>work_dirs/yolov5_s-v61_fast_1xb12-40e_cat</code> 文件夹会被自动生成，权重文件以及此次的训练配置文件将会保存在此文件夹中。</p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>在训练过程中会打印如下两个关键警告：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You are using YOLOv5Head with num_classes == 1. The loss_cls will be 0. This is a normal phenomenon.\</span><br><span class="line">The model and loaded state dict do not match exactly</span><br></pre></td></tr></table></figure></div><p>这两个警告都不会对性能有任何影响。第一个警告是说明由于当前训练的类别数是 1，根据 YOLOv5 算法的社区， 分类分支的 loss 始终是 0，这是正常现象。第二个警告是因为目前是采用微调模式进行训练，我们加载了 COCO 80 个类的预训练权重， 这会导致最后的 Head 模块卷积通道数不对应，从而导致这部分权重无法加载，这也是正常现象。</p><h2 id="训练中断后恢复训练"><a href="#训练中断后恢复训练" class="headerlink" title="训练中断后恢复训练"></a>训练中断后恢复训练</h2><p>如果训练中途停止，可以在训练命令最后加上 <code>--resume</code> ,程序会自动从 <code>work_dirs</code> 中加载最新的权重文件恢复训练。<br>例如</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/train.py configs/yolov5/yolov5_s-v61_fast_1xb12-40e_cat.py --resume</span><br></pre></td></tr></table></figure></div><h2 id="节约显存策略"><a href="#节约显存策略" class="headerlink" title="节约显存策略"></a>节约显存策略</h2><p>如果显存不够，可以考虑开启混合精度训练<code>--amp</code></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/train.py configs/yolov5/yolov5_s-v61_fast_1xb12-40e_cat.py --amp</span><br></pre></td></tr></table></figure></div><h2 id="训练可视化"><a href="#训练可视化" class="headerlink" title="训练可视化"></a>训练可视化</h2><p>官方文档中展示了多种可视化方案，在此处我们使用<code>tensorboard</code><br>在先前我们已经配置好的配置文件中的最后加入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">visualizer = dict(vis_backends=[dict(type=&#x27;LocalVisBackend&#x27;), dict(type=&#x27;TensorboardVisBackend&#x27;)])</span><br></pre></td></tr></table></figure></div><p>重新运行训练命令后，Tensorboard 文件会生成在可视化文件夹 <code>work_dirs/yolov5_s-v61_fast_1xb12-40e_cat.py/&#123;timestamp&#125;/vis_data</code> 下， 运行下面的命令便可以在网页链接使用 Tensorboard 查看 loss、学习率和 coco&#x2F;bbox_mAP 等可视化数据了：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir=work_dirs/yolov5_s-v61_fast_1xb12-40e_cat.py</span><br></pre></td></tr></table></figure></div><blockquote><p>其中最后一个.py文件参数为配置文件</p></blockquote><h1 id="模型测试及预测"><a href="#模型测试及预测" class="headerlink" title="模型测试及预测"></a>模型测试及预测</h1><h2 id="模型测试"><a href="#模型测试" class="headerlink" title="模型测试"></a>模型测试</h2><p>运行如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python tools/test.py configs/yolov5/yolov5_s-v61_fast_1xb12-40e_cat.py \</span><br><span class="line">                     work_dirs/yolov5_s-v61_fast_1xb12-40e_cat/epoch_40.pth \</span><br><span class="line">                     --show-dir show_results</span><br></pre></td></tr></table></figure></div><blockquote><p>两个文件参数分别为配置文件、权重文件</p></blockquote><p>运行以上测试命令， 不仅可以得到模型训练部分所打印的 AP 性能，还可以将推理结果图片自动保存至 <code>work_dirs/yolov5_s-v61_fast_1xb12-40e_cat/&#123;timestamp&#125;/show_results</code> 文件夹中。</p><p>如果使用了 <code>WandbVisBackend</code> 或者 <code>TensorboardVisBackend</code>，则还可以在浏览器窗口可视化模型推理结果。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;说明：&lt;br&gt;此为根据实践搭建并从官方文档中整理而来，官方源码及文档如下&lt;br&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/open-mmlab/mmyolo&quot; &gt;官方开源项目源码 &lt;i class=&quot;fa</summary>
      
    
    
    
    <category term="深度学习模型" scheme="http://example.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="计算机视觉" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="yolo" scheme="http://example.com/tags/yolo/"/>
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="深度学习" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="openmmlab" scheme="http://example.com/tags/openmmlab/"/>
    
  </entry>
  
  <entry>
    <title>使用mmdet快速搭建识别模型网络</title>
    <link href="http://example.com/2023/03/22/%E4%BD%BF%E7%94%A8mmdet%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%E7%BD%91%E7%BB%9C/"/>
    <id>http://example.com/2023/03/22/%E4%BD%BF%E7%94%A8mmdet%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%E7%BD%91%E7%BB%9C/</id>
    <published>2023-03-22T09:29:27.000Z</published>
    <updated>2023-03-26T08:21:31.496Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://github.com/open-mmlab/mmdetection/tree/master" >点击此处访问openmmdetection源码仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h1 id="选择模型"><a href="#选择模型" class="headerlink" title="选择模型"></a>选择模型</h1><p>使用命令行下载配置文件和模型权重文件</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mim download mmyolo --config yolov5_s-v61_syncbn_fast_8xb16-300e_coco --dest .</span><br></pre></td></tr></table></figure></div><h1 id="搭建识别网络"><a href="#搭建识别网络" class="headerlink" title="搭建识别网络"></a>搭建识别网络</h1><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mmdet.apis <span class="keyword">import</span> init_detector, inference_detector</span><br><span class="line"></span><br><span class="line">config_file = <span class="string">&#x27;configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py&#x27;</span></span><br><span class="line">checkpoint_file = <span class="string">&#x27;checkpoints/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth&#x27;</span></span><br><span class="line">device = <span class="string">&#x27;cuda:0&#x27;</span></span><br><span class="line"><span class="comment"># 初始化检测器</span></span><br><span class="line">model = init_detector(config_file, checkpoint_file, device=device)</span><br><span class="line"><span class="comment"># 推理演示图像</span></span><br><span class="line">inference_detector(model, <span class="string">&#x27;demo.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/open-mmlab/mmdetection/tree/master&quot; &gt;点击此处访问openmmdetection源码仓库 &lt;i class=&quot;fa-regular fa-arrow-u</summary>
      
    
    
    
    <category term="深度学习模型" scheme="http://example.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="计算机视觉" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="深度学习" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="openmmlab" scheme="http://example.com/tags/openmmlab/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu20.04换源</title>
    <link href="http://example.com/2023/03/22/Ubuntu20.04%E6%8D%A2%E6%BA%90/"/>
    <id>http://example.com/2023/03/22/Ubuntu20.04%E6%8D%A2%E6%BA%90/</id>
    <published>2023-03-22T06:12:45.000Z</published>
    <updated>2023-04-10T11:41:38.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="备份环境变量文件"><a href="#备份环境变量文件" class="headerlink" title="备份环境变量文件"></a>备份环境变量文件</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure></div><blockquote><p>sources.list 即储存环境变量的文件</p></blockquote><h1 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></div><blockquote><p>进入文件后按<code>i</code>或<code>insert</code>启动输入模式 删除原有内容</p></blockquote><blockquote><p>可在进入输入模式前在航首按<code>dd</code>删除当前行 或<code>dG</code>删除光标以后所有内容</p></blockquote><p>删除内容后使用新源进行替换</p><p><strong>阿里源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>清华源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>中科大源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>网易163源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>还源完成后</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></div><p>让计算机根据源进行更新</p>]]></content>
    
    
    <summary type="html">Ubuntu20.04更换国内源，提高速度</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu20.04" scheme="http://example.com/tags/Ubuntu20-04/"/>
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Conda-常用指令</title>
    <link href="http://example.com/2023/03/22/Conda-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://example.com/2023/03/22/Conda-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</id>
    <published>2023-03-22T05:54:22.000Z</published>
    <updated>2023-06-30T08:23:15.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="conda-环境管理"><a href="#conda-环境管理" class="headerlink" title="conda 环境管理"></a>conda 环境管理</h1><h2 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n name python=3.x</span><br></pre></td></tr></table></figure></div><blockquote><p>name为环境名<br>3.x为指定python版本</p></blockquote><h2 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n name --all</span><br></pre></td></tr></table></figure></div><h2 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate name</span><br></pre></td></tr></table></figure></div><h2 id="关闭环境-返回默认环境"><a href="#关闭环境-返回默认环境" class="headerlink" title="关闭环境 返回默认环境"></a>关闭环境 返回默认环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate name</span><br></pre></td></tr></table></figure></div><h2 id="查看当前有哪些环境"><a href="#查看当前有哪些环境" class="headerlink" title="查看当前有哪些环境"></a>查看当前有哪些环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info -e</span><br></pre></td></tr></table></figure></div><p><em>或</em></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure></div><h1 id="conda包管理"><a href="#conda包管理" class="headerlink" title="conda包管理"></a>conda包管理</h1><h2 id="查看当前环境的包"><a href="#查看当前环境的包" class="headerlink" title="查看当前环境的包"></a>查看当前环境的包</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure></div><h2 id="安装指定package到当前环境"><a href="#安装指定package到当前环境" class="headerlink" title="安装指定package到当前环境"></a>安装指定package到当前环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package</span><br></pre></td></tr></table></figure></div><blockquote><p>package 为所需包名字 可在后加入<code>==</code>指定版本或输入url指定安装源</p></blockquote><p><em>也可以使用pip等进行安装</em></p><h2 id="安装package到指定的环境"><a href="#安装package到指定的环境" class="headerlink" title="安装package到指定的环境"></a>安装package到指定的环境</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -n name package</span><br></pre></td></tr></table></figure></div><h2 id="更新package"><a href="#更新package" class="headerlink" title="更新package"></a>更新package</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update -n name package</span><br></pre></td></tr></table></figure></div><h2 id="移除package"><a href="#移除package" class="headerlink" title="移除package"></a>移除package</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n name package</span><br></pre></td></tr></table></figure></div><p><em>或</em></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda uninstall package</span><br></pre></td></tr></table></figure></div><h1 id="conda版本"><a href="#conda版本" class="headerlink" title="conda版本"></a>conda版本</h1><h2 id="更新conda版本"><a href="#更新conda版本" class="headerlink" title="更新conda版本"></a>更新conda版本</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update conda</span><br></pre></td></tr></table></figure></div><h2 id="更新python版本"><a href="#更新python版本" class="headerlink" title="更新python版本"></a>更新python版本</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update python</span><br></pre></td></tr></table></figure></div><blockquote><p>假设当前环境是python 3.6 执行命令后conda会将python升级为3.6.x系列的当前最新版本</p></blockquote>]]></content>
    
    
    <summary type="html">conda环境管理及包管理等的常用指令</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Conda" scheme="http://example.com/tags/Conda/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>关于蓝桥杯</title>
    <link href="http://example.com/2023/03/14/%E5%85%B3%E4%BA%8E%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    <id>http://example.com/2023/03/14/%E5%85%B3%E4%BA%8E%E8%93%9D%E6%A1%A5%E6%9D%AF/</id>
    <published>2023-03-14T13:45:28.000Z</published>
    <updated>2023-04-08T09:15:49.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h1><h2 id="LED指示灯"><a href="#LED指示灯" class="headerlink" title="LED指示灯"></a>LED指示灯</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/LED.jpg"                                     ><br>锁存器(M74HC573MIR)用io控制对应led，三八译码器控制y4(0)以控制y4c以控制锁存器使能</p></blockquote><h2 id="蜂鸣器与继电器"><a href="#蜂鸣器与继电器" class="headerlink" title="蜂鸣器与继电器"></a>蜂鸣器与继电器</h2><p>ULN2003达林顿管</p><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/ULN.jpg"                                     ><br><strong>输出为输入的非</strong></p></blockquote><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/fmq.jpg"                                     ><br>通过三八译码器控制y5(低电平有效)控制y5c以控制锁存器使能，在通过锁存器及达林顿管(类非门)控制端口达到控制蜂鸣器及继电器作用</p></blockquote><h2 id="数码管"><a href="#数码管" class="headerlink" title="数码管"></a>数码管</h2><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/SMG.jpg"                                     ></p></blockquote><h3 id="共阳数码管段位表"><a href="#共阳数码管段位表" class="headerlink" title="共阳数码管段位表"></a>共阳数码管段位表</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0--0xC0</span><br><span class="line">1--0xF9</span><br><span class="line">2--0xA4</span><br><span class="line">3--0xB0</span><br><span class="line">4--0x99</span><br><span class="line">5--0x92</span><br><span class="line">6--0x82</span><br><span class="line">7--0xF8</span><br><span class="line">8--0x80</span><br><span class="line">9--0x90</span><br></pre></td></tr></table></figure></div><p>列表形式为</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 共阳</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_yang = [<span class="number">0xC0</span>, <span class="number">0xF9</span>, <span class="number">0xA4</span>, <span class="number">0xB0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xF8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>] <span class="comment">// 对应0-9</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_dot[<span class="number">10</span>] = &#123;<span class="number">0x40</span>, <span class="number">0x79</span>, <span class="number">0x24</span>, <span class="number">0x30</span>, <span class="number">0x19</span>, <span class="number">0x12</span>, <span class="number">0x02</span>, <span class="number">0x78</span>, <span class="number">0x00</span>, <span class="number">0x10</span>&#125;; <span class="comment">// 带小数点 由不带小数点的段码减去0x80</span></span><br></pre></td></tr></table></figure></div><h3 id="共阴数码管段位表"><a href="#共阴数码管段位表" class="headerlink" title="共阴数码管段位表"></a>共阴数码管段位表</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0--0x3F</span><br><span class="line">1--0x06</span><br><span class="line">2--0x5B</span><br><span class="line">3--0x4F</span><br><span class="line">4--0x66</span><br><span class="line">5--0x6D</span><br><span class="line">6--0x7D</span><br><span class="line">7--0x07</span><br><span class="line">8--0x7F</span><br><span class="line">9--0x6F</span><br></pre></td></tr></table></figure></div><p>列表形式为</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 共阴</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> smg_yin = [<span class="number">0x3F</span>, <span class="number">0x06</span>, <span class="number">0x5B</span>, <span class="number">0x4F</span>, <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x7D</span>, <span class="number">0x07</span>, <span class="number">0x7F</span>, <span class="number">0x6F</span>] <span class="comment">// 对应0-9</span></span><br></pre></td></tr></table></figure></div><h2 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h2><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/KEY.jpg"                                     ><br><strong>对于蓝桥板子 P37换为P44 P36换为P42</strong></p></blockquote><h3 id="独立按键"><a href="#独立按键" class="headerlink" title="独立按键"></a>独立按键</h3><p>需将J5的跳帽接到<code>2~3</code>引脚<br>0为按下</p><h3 id="矩阵键盘"><a href="#矩阵键盘" class="headerlink" title="矩阵键盘"></a>矩阵键盘</h3><blockquote><p>需将J5的跳帽接到<code>1~2</code>引脚</p></blockquote><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/ZHONGDUAN.jpg"                                     ><br>需将J5的跳帽接到<code>2~3</code>引脚<br>即s5接到p32&#x2F;int0 s4接到p33&#x2F;int1</p></blockquote><h2 id="DB18B20"><a href="#DB18B20" class="headerlink" title="DB18B20"></a>DB18B20</h2><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/DB18B20.jpg"                                     ><br>依据流程图 相关代码如下</p></blockquote><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">read_ds18b20</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> LSB, MSB;</span><br><span class="line"></span><br><span class="line">init_ds18b20();</span><br><span class="line">Write_DS18B20(<span class="number">0xcc</span>); <span class="comment">// 跳过rom操作</span></span><br><span class="line">Write_DS18B20(<span class="number">0x44</span>); <span class="comment">// 开始读</span></span><br><span class="line"></span><br><span class="line">delay_ds18b20(<span class="number">1000</span>);</span><br><span class="line">init_ds18b20();</span><br><span class="line">Write_DS18B20(<span class="number">0xcc</span>); <span class="comment">// 跳过rom操作</span></span><br><span class="line">Write_DS18B20(<span class="number">0xbe</span>);</span><br><span class="line"></span><br><span class="line">LSB = Read_DS18B20(); <span class="comment">// 低八位</span></span><br><span class="line">MSB = Read_DS18B20(); <span class="comment">// 高八位</span></span><br><span class="line"></span><br><span class="line">temp = MSB;</span><br><span class="line">temp = (temp &lt;&lt; <span class="number">8</span>) | LSB;</span><br><span class="line"><span class="keyword">if</span>(temp &amp; <span class="number">0xf800</span> == <span class="number">0x0000</span>) <span class="comment">// 判断高五位（符号位）此处为判断正数</span></span><br><span class="line">&#123;</span><br><span class="line">temp &gt;&gt;= <span class="number">4</span>;</span><br><span class="line">temp = temp * <span class="number">10</span>;</span><br><span class="line">temp = temp + (LSB &amp; <span class="number">0x0f</span>) * <span class="number">0.625</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="DS1302"><a href="#DS1302" class="headerlink" title="DS1302"></a>DS1302</h2><blockquote><p>采用三线spi接口<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/DS1302.jpg"                                     ></p></blockquote><blockquote><p>日历时钟寄存器<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/RLSZJCQ.jpg"                                     ></p></blockquote><hr><h1 id="备赛更新"><a href="#备赛更新" class="headerlink" title="备赛更新"></a>备赛更新</h1><h2 id="HC138模块选择"><a href="#HC138模块选择" class="headerlink" title="HC138模块选择"></a>HC138模块选择</h2><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">selete_hc138</span><span class="params">(u8 num)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">HC138_A = <span class="number">0</span>;</span><br><span class="line">HC138_B = <span class="number">0</span>;</span><br><span class="line">HC138_C = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">HC138_A = <span class="number">0</span>;</span><br><span class="line">HC138_B = <span class="number">0</span>;</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">HC138_A = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">0</span>;</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">HC138_A = <span class="number">0</span>;</span><br><span class="line">HC138_B = <span class="number">1</span>;</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">HC138_A = <span class="number">1</span>;</span><br><span class="line">HC138_B = <span class="number">1</span>;</span><br><span class="line">HC138_C = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>其中<br>4 为LED<br>5 为继电器及蜂鸣器 0x10为继电器闭合 亮灯(L10)<br>6 为数码管位选<br>7 为数码管段选</p></blockquote><h2 id="数码管显示"><a href="#数码管显示" class="headerlink" title="数码管显示"></a>数码管显示</h2><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fmq_display</span><span class="params">(u8 pos,u8 num)</span></span><br><span class="line">&#123;</span><br><span class="line">selete_hc138(<span class="number">6</span>);</span><br><span class="line">P0 = (<span class="number">0X01</span> &lt;&lt; pos) ;</span><br><span class="line">selete_hc138(<span class="number">7</span>);</span><br><span class="line">P0 = num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h2><p>进行关灯等</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">system_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">selete_hc138(<span class="number">0</span>);</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line">selete_hc138(<span class="number">4</span>);</span><br><span class="line">P0 = <span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="温度模块-DS18B20"><a href="#温度模块-DS18B20" class="headerlink" title="温度模块-DS18B20"></a>温度模块-DS18B20</h2><h3 id="驱动文件修改"><a href="#驱动文件修改" class="headerlink" title="驱动文件修改"></a>驱动文件修改</h3><blockquote><p><strong>对于蓝桥杯的板子，由于其运行速度较快，官方给的驱动文件需要进行修改，将内部延时函数改为如下</strong></p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Delay_OneWire</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>  </span><br><span class="line">&#123;</span><br><span class="line">t *= <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(t --);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>即 将输入的延时时间放大十倍</p></blockquote><h3 id="温度读取"><a href="#温度读取" class="headerlink" title="温度读取"></a>温度读取</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> temp_f;</span><br><span class="line">u16 temp_i;</span><br><span class="line"><span class="type">void</span> <span class="title function_">rd_tempture</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">u16 temp;</span><br><span class="line">u8 high, low;</span><br><span class="line">init_ds18b20();</span><br><span class="line">Write_DS18B20(<span class="number">0xcc</span>);</span><br><span class="line">Write_DS18B20(<span class="number">0x44</span>);</span><br><span class="line"></span><br><span class="line">init_ds18b20();</span><br><span class="line">Write_DS18B20(<span class="number">0xcc</span>);</span><br><span class="line">Write_DS18B20(<span class="number">0xbe</span>);</span><br><span class="line"></span><br><span class="line">low = Read_DS18B20();</span><br><span class="line">high = Read_DS18B20();</span><br><span class="line"></span><br><span class="line">init_ds18b20();</span><br><span class="line"></span><br><span class="line">temp = (high &lt;&lt; <span class="number">8</span>) | low;</span><br><span class="line">temp_f = temp * <span class="number">0.0625</span>;</span><br><span class="line">temp_i = temp_f * <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>其中temp_f为当前温度值，以<code>float</code>储存，在使用时根据所需进行放大并转为<code>int</code>储存在temp_i中便于数码管显示</p></blockquote><h2 id="内置日历时钟定时器-ds1302"><a href="#内置日历时钟定时器-ds1302" class="headerlink" title="内置日历时钟定时器-ds1302"></a>内置日历时钟定时器-ds1302</h2><h3 id="寄存器表"><a href="#寄存器表" class="headerlink" title="寄存器表"></a>寄存器表</h3><blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/lanqiao/RLSZJCQ.jpg"                                     ><br>注意<br>高四位及第四位以bcd码储存<br>以读秒为例子，取出<code>81H</code>地址中的值时，高八位储存的为十位，即<code>time[0] / 16</code>为十位，<code>time[0] % 16</code>为个位。</p></blockquote><h3 id="日历读取及使用"><a href="#日历读取及使用" class="headerlink" title="日历读取及使用"></a>日历读取及使用</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">u8 code READ_RTC_ADDR[<span class="number">7</span>] = &#123;<span class="number">0x81</span>, <span class="number">0x83</span>, <span class="number">0x85</span>, <span class="number">0x87</span>, <span class="number">0x89</span>, <span class="number">0x8b</span>, <span class="number">0x8d</span>&#125;; <span class="comment">// 对应寄存器地址</span></span><br><span class="line">u8 code WRITE_RTC_ADDR[<span class="number">7</span>] = &#123;<span class="number">0x80</span>, <span class="number">0x82</span>, <span class="number">0x84</span>, <span class="number">0x86</span>, <span class="number">0x88</span>, <span class="number">0x8a</span>, <span class="number">0x8c</span>&#125;;</span><br><span class="line"></span><br><span class="line">u8 time[] = &#123;<span class="number">0x50</span>, <span class="number">0x59</span>, <span class="number">0x20</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x05</span>, <span class="number">0x23</span>&#125;; <span class="comment">// 用于初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ds1302_init</span><span class="params">()</span> <span class="comment">// 初始化</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i;</span><br><span class="line"> Write_Ds1302_Byte(<span class="number">0x8e</span>, <span class="number">0x00</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Write_Ds1302_Byte(WRITE_RTC_ADDR[i], time[i]);</span><br><span class="line">&#125;</span><br><span class="line">Write_Ds1302_Byte(<span class="number">0x8e</span>, <span class="number">0x80</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">rd_ds1302</span><span class="params">()</span> <span class="comment">// 读取</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i ++)</span><br><span class="line">&#123;</span><br><span class="line">time[i] = Read_Ds1302_Byte(READ_RTC_ADDR[i]); <span class="comment">// 储存于对应地址中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下为调用示例 输出小时及分钟数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ds1302_display_1</span><span class="params">()</span><span class="comment">// 时分</span></span><br><span class="line">&#123;</span><br><span class="line">rd_ds1302();</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">0</span>, <span class="number">0xc1</span>); <span class="comment">// U</span></span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">0</span>, <span class="number">0xff</span>);</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">1</span>, num_nodot[<span class="number">2</span>]);</span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">1</span>, <span class="number">0xff</span>);</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">3</span>, num_nodot[time[<span class="number">2</span>] / <span class="number">16</span>]);</span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">3</span>, <span class="number">0xff</span>);</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">4</span>, num_nodot[time[<span class="number">2</span>] % <span class="number">16</span>]);</span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">4</span>, <span class="number">0xff</span>);</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">5</span>, <span class="number">0xbf</span>);</span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">5</span>, <span class="number">0xff</span>);</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">6</span>, num_nodot[time[<span class="number">1</span>] / <span class="number">16</span>]);</span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">6</span>, <span class="number">0xff</span>);</span><br><span class="line"></span><br><span class="line">fmq_display(<span class="number">7</span>, num_nodot[time[<span class="number">1</span>] % <span class="number">16</span>]);</span><br><span class="line">delay(<span class="number">200</span>);</span><br><span class="line">fmq_display(<span class="number">7</span>, <span class="number">0xff</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="PCF8591"><a href="#PCF8591" class="headerlink" title="PCF8591"></a>PCF8591</h2><blockquote><p>关于IIC的使用</p></blockquote><h3 id="模数转换-ad"><a href="#模数转换-ad" class="headerlink" title="模数转换-ad"></a>模数转换-ad</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 驱动如下</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">Ad_Read</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> addr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> temp;</span><br><span class="line">IIC_Start();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(<span class="number">0x90</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(addr);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_Start();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(<span class="number">0x91</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">temp = IIC_RecByte();</span><br><span class="line">IIC_SendAck(<span class="number">1</span>);</span><br><span class="line">IIC_Stop();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>以下为使用该接口读取滑动变阻器的值</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ad_display</span><span class="params">(u8 dat)</span></span><br><span class="line">&#123;</span><br><span class="line">dat = Ad_Read(<span class="number">0x03</span>); <span class="comment">// 滑动变阻器的对应地址 光敏电阻为01</span></span><br><span class="line"><span class="comment">// dat = Ad_Read(0x01); // 光敏电阻</span></span><br><span class="line">fmq_display(<span class="number">0</span>, num_nodot[dat / <span class="number">100</span>]);</span><br><span class="line">delay(<span class="number">500</span>);</span><br><span class="line">fmq_display(<span class="number">0</span>, <span class="number">0xff</span>);</span><br><span class="line">fmq_display(<span class="number">1</span>, num_nodot[dat / <span class="number">10</span> % <span class="number">10</span>]);</span><br><span class="line">delay(<span class="number">500</span>);</span><br><span class="line">fmq_display(<span class="number">1</span>, <span class="number">0xff</span>);</span><br><span class="line">fmq_display(<span class="number">2</span>, num_nodot[dat % <span class="number">10</span>]);</span><br><span class="line">delay(<span class="number">500</span>);</span><br><span class="line">fmq_display(<span class="number">2</span>, <span class="number">0xff</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>需要注意的是 读取的值均有稳定倍数关系 需要 <code>* 5 / 255</code> 即 <code>/ 51</code> 即得到正常值</p></blockquote><h3 id="数模转换-da"><a href="#数模转换-da" class="headerlink" title="数模转换-da"></a>数模转换-da</h3><blockquote><p>输出值为板子D&#x2F;A输出口的电压(有换算关系 为 *5 &#x2F; 255)</p></blockquote><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Da_Write</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_Start();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(<span class="number">0x90</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(<span class="number">0x41</span>);<span class="comment">//使能</span></span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(dat);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_Stop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="AT24C02"><a href="#AT24C02" class="headerlink" title="AT24C02"></a>AT24C02</h2><blockquote><p>集成EEPROM</p></blockquote><h3 id="向EEPROM写入数据"><a href="#向EEPROM写入数据" class="headerlink" title="向EEPROM写入数据"></a>向EEPROM写入数据</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">EEPROM_Write</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> * <span class="built_in">string</span>, <span class="type">unsigned</span> <span class="type">char</span> addr, <span class="type">unsigned</span> <span class="type">char</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_Start();</span><br><span class="line">IIC_SendByte(<span class="number">0xA0</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(addr); <span class="comment">// 标记为对应EEPROM地址</span></span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(num --)</span><br><span class="line">&#123;</span><br><span class="line">IIC_SendByte(*<span class="built_in">string</span> ++); </span><br><span class="line">IIC_WaitAck();</span><br><span class="line">IIC_Delay(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br><span class="line">IIC_Stop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>调用即</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EEPROM_Write(temp, <span class="number">0x01</span>, <span class="number">2</span>); <span class="comment">// 0x01为对应地址</span></span><br></pre></td></tr></table></figure></div><h3 id="读取EEPROM数据"><a href="#读取EEPROM数据" class="headerlink" title="读取EEPROM数据"></a>读取EEPROM数据</h3><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">EEPROM_Read</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span>* <span class="built_in">string</span>, <span class="type">unsigned</span> <span class="type">char</span> addr, <span class="type">unsigned</span> <span class="type">char</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_Start();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(<span class="number">0xA0</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(addr);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line">IIC_Start();</span><br><span class="line"></span><br><span class="line">IIC_SendByte(<span class="number">0xA1</span>);</span><br><span class="line">IIC_WaitAck();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(num --)</span><br><span class="line">&#123;</span><br><span class="line">*<span class="built_in">string</span> ++ = IIC_RecByte();</span><br><span class="line"><span class="keyword">if</span>(num)</span><br><span class="line">&#123;</span><br><span class="line">IIC_SendAck(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_SendAck(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">IIC_Stop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>调用即</p><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EEPROM_Read(date, <span class="number">0x01</span>, <span class="number">2</span>); <span class="comment">// 从0x01地址中读取值存入date数组</span></span><br></pre></td></tr></table></figure></div><hr><h1 id="赛后更新"><a href="#赛后更新" class="headerlink" title="赛后更新"></a>赛后更新</h1><h2 id="4-8"><a href="#4-8" class="headerlink" title="4.8"></a>4.8</h2><p>一点小牢骚</p><blockquote><p>总的来说 尽力了<br>剩下一个ne555赌它不考来着。。。您猜怎么着？上来就给我来一手ne555<br>看到程序框图的第一反应人是傻的。。。</p><p>官方给的文件和原来手上的不一样也是想不到的<br>幸好 c语言没白学 头文件没忘记怎么写</p><p><code>_nop()_</code>在哪个头文件里我忘记了…。<br>看着报错人也麻麻的<br>还是幸好 知道这个函数是干嘛用的 自己手写了一个延时函数大概能代替它了</p><p>幸好的幸好，除了用ne555做的湿度之外基本上都功能实现了 虽然有些地方好像写法很复杂</p><p>其实做完能做的之后还剩下一个小时的样子<br>看着ne555的手册和stc15的手册 本来想现学一手 想想 算了<br>于是又去检查前面的题目有没有问题了</p><p>这次比赛嘛 也不清楚到底比之前的难还是简单了<br>有幸运也有遗憾<br>我的建议是 尽力了 下次一定 如果有下次的话</p></blockquote>]]></content>
    
    
    <summary type="html">准备蓝桥杯中所记录的相关笔记</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>深度学习-Pytorch</title>
    <link href="http://example.com/2023/03/14/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Pytorch/"/>
    <id>http://example.com/2023/03/14/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Pytorch/</id>
    <published>2023-03-14T13:29:53.000Z</published>
    <updated>2023-07-09T12:05:59.644Z</updated>
    
    <content type="html"><![CDATA[<p>此为本人学习深度学习及Pytorch基础知识时所作，可能存在部分错误之处，敬请谅解。</p><h1 id="TensorBoard"><a href="#TensorBoard" class="headerlink" title="TensorBoard"></a>TensorBoard</h1><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from torch.utils.tensorboard import SummaryWriter</span><br><span class="line">import cv2</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(&quot;logs&quot;) # 创建实例，将事件文件储存到logs文件夹下</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">img_path = &quot;./training_dataset/train/ants_image/0013035.jpg&quot;</span><br><span class="line">img = cv2.imread(img_path)</span><br><span class="line">img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)</span><br><span class="line"></span><br><span class="line">writer.add_image(&quot;test&quot;, img, 1, dataformats = &quot;HWC&quot;) # 图像工具</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    writer.add_scalar(&quot;y = 3x&quot;, 3*i, i) # 画函数工具</span><br><span class="line"></span><br><span class="line">writer.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>其中，对<code>writer.add_image(&quot;test&quot;, img, 1, dataformats = &quot;HWC&quot;)</code> <br><code>1</code>为步数，dataformats为格式</p><h2 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal"></a>Terminal</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tensorboard --logdir=logs</span><br><span class="line"># 其中logdir=事件文件所在文件夹名</span><br></pre></td></tr></table></figure></div><p>输出内容为<code>TensorBoard 2.10.0 at http://localhost:6006/ (Press CTRL+C to quit)</code><br>表示在端口6006训练\</p><p>可用<code>tensorboard --logdir=logs --port=6007</code>指定端口</p><h1 id="TransForms"><a href="#TransForms" class="headerlink" title="TransForms"></a>TransForms</h1><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">from torchvision import transforms</span><br><span class="line">img_path = &quot;./training_dataset/train/ants_image/0013035.jpg&quot;</span><br><span class="line">img = Image.open(img_path)</span><br><span class="line"></span><br><span class="line"># Totensor</span><br><span class="line">trans_totensor = transforms.ToTensor() # 创建对应工具</span><br><span class="line">tensor_img = trans_totensor(img) # 转化为tensor数据类型</span><br><span class="line">writer.add_image(&quot;ToTensor&quot;, tensor_img)</span><br><span class="line"></span><br><span class="line"># Normalize</span><br><span class="line">trans_norm = transforms.Normalize([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])</span><br><span class="line">img_norm = trans_norm(tensor_img) # 归一化</span><br><span class="line">writer.add_image(&quot;Normalize&quot;, img_norm)</span><br><span class="line"></span><br><span class="line"># Resize</span><br><span class="line">trans_resize = transforms.Resize((512, 512))</span><br><span class="line">img_resize = trans_resize(img)</span><br><span class="line">img_resize = trans_totensor(img_resize) # 改变大小</span><br><span class="line">writer.add_image(&quot;Resize&quot;, img_resize, 0)</span><br><span class="line"></span><br><span class="line"># Compose - resize - 2</span><br><span class="line">trans_resize_2 = transforms.Resize(512)</span><br><span class="line">trans_compose = transforms.Compose([trans_resize_2, trans_totensor])</span><br><span class="line">img_resize_2 = trans_compose(img) # 按比例改变大小</span><br><span class="line">writer.add_image(&quot;Resize2&quot;, img_resize_2, 0)</span><br><span class="line"></span><br><span class="line"># RandomCrop</span><br><span class="line">trans_random = transforms.RandomCrop(512) # 括号内用于指定大小，可分别指定长宽</span><br><span class="line">trans_conpose_2 = transforms.Compose([trans_random, trans_totensor])</span><br><span class="line">for i in range(10):</span><br><span class="line">    img_crop = trans_conpose_2(img)</span><br><span class="line">    writer.add_image(&quot;RandomCrop&quot;, img_crop, i) # 随机裁剪</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure></div><h1 id="torchvision"><a href="#torchvision" class="headerlink" title="torchvision"></a>torchvision</h1><h2 id="官方数据集下载"><a href="#官方数据集下载" class="headerlink" title="官方数据集下载"></a>官方数据集下载</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">train_data = torchvision.datasets.CIFAR10(root = &quot;./dataset_test&quot;, train = True, transform = dataset_transform, download = True)</span><br><span class="line">test_set = torchvision.datasets.CIFAR10(root = &quot;./dataset_test&quot;, train = False, transform = dataset_transform, download = True)</span><br></pre></td></tr></table></figure></div><p>root为本地下载存放地址<br>train为True为下载训练集 为False为下载测试集<br>transform为图片转化的工具 如<code>dataset_transform = torchvision.transforms.Compose([torchvision.transforms.ToTensor()])</code><br>download为是否下载该数据集</p><h2 id="数据集内容-例"><a href="#数据集内容-例" class="headerlink" title="数据集内容 例"></a>数据集内容 例</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img, target = test_set[0]</span><br></pre></td></tr></table></figure></div><p>对应输出为<br><code>(&lt;PIL.Image.Image image mode=RGB size=32x32 at 0x106B06F4E50&gt;, 3)</code><br>(此处前部分为不经过transform进行变换的默认PIL格式照片)<br>前部分为图片，后部分为该图片对应的对象在classes(test_set.classes)中的下标<br>若为</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test_set.classes[target]</span><br></pre></td></tr></table></figure></div><p>则输出对应为<code>cat</code></p><h1 id="dataloader"><a href="#dataloader" class="headerlink" title="dataloader"></a>dataloader</h1><p>数据加载器</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test_loader = DataLoader(dataset = test_data, batch_size = 4, shuffle = True, num_workers = 0, drop_last = False)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>dataset为指定数据集(测试集)<br>batch_size为指定每次从dataset中去除n个数据进行打包<br>shuffle若为True则每次训练会打乱顺序 一般为True<br>num_work为主进程数量<br>drop_last为保存最后一次取的数据</p><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 准备测试集</span><br><span class="line">test_data = torchvision.datasets.CIFAR10(root = &quot;./dataset_test&quot;, train = False, transform = torchvision.transforms.ToTensor())</span><br><span class="line"></span><br><span class="line">test_loader = DataLoader(dataset = test_data, batch_size = 4, shuffle = True, num_workers = 0, drop_last = False)</span><br><span class="line"></span><br><span class="line"># 测试集中第一张照片及target</span><br><span class="line">img, target = test_data[0]</span><br><span class="line"></span><br><span class="line"># 得到总的imgs与targets</span><br><span class="line">writer = SummaryWriter(&quot;dataloader_logs&quot;)</span><br><span class="line">step = 0</span><br><span class="line">for data in test_loader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    writer.add_images(&quot;test_data&quot;, imgs, step)</span><br><span class="line">    step += 1</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure></div><h1 id="convolution-functional"><a href="#convolution-functional" class="headerlink" title="convolution functional"></a>convolution functional</h1><h2 id="卷积层-代码"><a href="#卷积层-代码" class="headerlink" title="卷积层 代码"></a>卷积层 代码</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">import torch.nn.functional as F # 卷积函数</span><br><span class="line"></span><br><span class="line">input = torch.tensor([[1, 2, 0, 3, 1],</span><br><span class="line">                      [0, 1, 2, 3, 1],</span><br><span class="line">                      [1, 2, 1, 0, 0],</span><br><span class="line">                      [5, 2, 3, 1, 1],</span><br><span class="line">                      [2, 1, 0, 1, 1]])</span><br><span class="line">    </span><br><span class="line">kernel = torch.tensor([[1, 2, 1],</span><br><span class="line">                       [0, 1, 0],</span><br><span class="line">                       [2, 1, 0]])</span><br><span class="line"></span><br><span class="line">input = torch.reshape(input,(1, 1, 5, 5)) # 更改尺寸为(1, 1, 5, 5)</span><br><span class="line">kernel = torch.reshape(kernel,(1, 1, 3, 3)) # 更改尺寸为(1, 1, 3, 3)</span><br><span class="line"></span><br><span class="line">output = F.conv2d(input, kernel, stride = 1, padding = 0)</span><br><span class="line">print(output)</span><br></pre></td></tr></table></figure></div><p>对于<code>torch.reshape(input,(1, 1, 5, 5))</code><br>shape为四通道<br>第一位为channel通道数量<br>第二位为输入channel&#x2F;group(batch_size)<br>三四位分别为高和宽<br>及有dilation 空洞卷积</p><p><code>F.conv2d</code>意为二维卷积<br>stride为卷积核移动步数，padding为填充情况</p><h2 id="conv2d小历程"><a href="#conv2d小历程" class="headerlink" title="conv2d小历程"></a>conv2d小历程</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">import torchvision</span><br><span class="line">from torch.utils.data import DataLoader</span><br><span class="line">from torch import nn</span><br><span class="line">from torch.nn import Conv2d</span><br><span class="line">from torch.utils.tensorboard import SummaryWriter</span><br><span class="line">import cv2</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(&quot;./conv2d_dataset&quot;, train = False, transform = torchvision.transforms.ToTensor(),download = True)</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size = 64)</span><br><span class="line"></span><br><span class="line">class Fun(nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(Fun, self).__init__()</span><br><span class="line">        self.conv1 = Conv2d(in_channels = 3, out_channels = 6, kernel_size = 3, stride = 1, padding = 1)</span><br><span class="line"></span><br><span class="line">    def forward(self, x):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        return x</span><br><span class="line"></span><br><span class="line">test = Fun()</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(&quot;con2d_logs&quot;)</span><br><span class="line">step = 0</span><br><span class="line"></span><br><span class="line">for data in dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    output = test(imgs)</span><br><span class="line"></span><br><span class="line">    writer.add_images(&quot;input&quot;, imgs, step)</span><br><span class="line"></span><br><span class="line">    output = torch.reshape(output, (-1, 3, 32, 32))</span><br><span class="line">    writer.add_images(&quot;output&quot;,output, step)</span><br><span class="line"></span><br><span class="line">    step += 1</span><br></pre></td></tr></table></figure></div><p>将数据集中的图片进行卷积操作，即卷积层</p><h2 id="池化层"><a href="#池化层" class="headerlink" title="池化层"></a>池化层</h2><h3 id="最大池化"><a href="#最大池化" class="headerlink" title="最大池化"></a>最大池化</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">from torch import nn</span><br><span class="line">import torchvision</span><br><span class="line">from torch.utils.data import DataLoader</span><br><span class="line">from torch.utils.tensorboard import SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(&quot;maxpool_data&quot;, train = False, download = True, transform = torchvision.transforms.ToTensor())</span><br><span class="line"></span><br><span class="line">dataLoader = DataLoader(dataset, batch_size= 64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Test(nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(Test, self).__init__()</span><br><span class="line">        self.maxpool1 = nn.MaxPool2d(kernel_size = 3, ceil_mode = True)</span><br><span class="line"></span><br><span class="line">    def forward(self,input):</span><br><span class="line">        output = self.maxpool1(input)</span><br><span class="line">        return output</span><br><span class="line"></span><br><span class="line">test = Test()</span><br><span class="line"></span><br><span class="line">step = 0</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(&quot;maxpool_logs&quot;)</span><br><span class="line">for data in dataLoader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    writer.add_images(&quot;input&quot;, imgs, step)</span><br><span class="line"></span><br><span class="line">    output = test(imgs)</span><br><span class="line">    writer.add_images(&quot;output&quot;, output, step)</span><br><span class="line">    step += 1</span><br></pre></td></tr></table></figure></div><p>其中<code>self.maxpool1 = nn.MaxPool2d()(kernel_size = 3, ceil_mode = True)</code>中的<code>ceil_mode</code> 为补全，为True即当kernel加载到不满九个数据的位置时仍然计</p><p>池化可以缩减目标空间 增加运行速度</p><h2 id="非线性激活"><a href="#非线性激活" class="headerlink" title="非线性激活"></a>非线性激活</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">import torchvision</span><br><span class="line">from torch.utils.data import DataLoader</span><br><span class="line">from torch.utils.tensorboard import SummaryWriter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(&quot;maxpool_data&quot;, train = False, download = True, transform = torchvision.transforms.ToTensor())</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size = 64)</span><br><span class="line"></span><br><span class="line">class test(torch.nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(test, self).__init__()</span><br><span class="line">        self.relu1 = torch.nn.ReLU()</span><br><span class="line">        self.sigmoid1 = torch.nn.Sigmoid()</span><br><span class="line"></span><br><span class="line">    def forward(self, input):</span><br><span class="line">        output = self.relu1(input)</span><br><span class="line">        return output</span><br><span class="line"></span><br><span class="line">test = test()</span><br><span class="line">writer = SummaryWriter(&quot;relu_logs&quot;)</span><br><span class="line">step = 0</span><br><span class="line"></span><br><span class="line">for  data in dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    writer.add_images(&quot;input&quot;, imgs, step)</span><br><span class="line">    output = test(imgs)</span><br><span class="line">    writer.add_images(&quot;output&quot;, output, step)</span><br><span class="line">    step += 1</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure></div><h2 id="线性层"><a href="#线性层" class="headerlink" title="线性层"></a>线性层</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">from modulefinder import Module</span><br><span class="line">import torchvision</span><br><span class="line">from torch.utils.data import DataLoader</span><br><span class="line">import torch</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(&quot;maxpool_data&quot;, train = False, download = True, transform = torchvision.transforms.ToTensor())</span><br><span class="line"></span><br><span class="line">dataloader = DataLoader(dataset, batch_size = 64)</span><br><span class="line"></span><br><span class="line">class test(torch.nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(test, self).__init__()</span><br><span class="line">        self.linear1 = torch.nn.Linear(196608, 10)</span><br><span class="line"></span><br><span class="line">    def forward(self, input):</span><br><span class="line">        output = self.linear1(input)</span><br><span class="line">        return output</span><br><span class="line"></span><br><span class="line">test = test()</span><br><span class="line"></span><br><span class="line">for data in dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    print(imgs.shape)</span><br><span class="line">    # output = torch.reshape(imgs, (1, 1, 1, -1))</span><br><span class="line">    output = torch.flatten(imgs) # 将矩阵展开成一行</span><br><span class="line">    print(output.shape)</span><br><span class="line">    output = test(output)</span><br><span class="line">    print(output.shape)</span><br></pre></td></tr></table></figure></div><p>也作为全连接层？</p><h2 id="Sequential及网络搭建小历程"><a href="#Sequential及网络搭建小历程" class="headerlink" title="Sequential及网络搭建小历程"></a>Sequential及网络搭建小历程</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">from torch.utils.tensorboard import SummaryWriter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class test(torch.nn.Module):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(test, self).__init__()</span><br><span class="line">        # self.conv1 = torch.nn.Conv2d(3, 32, 5, padding = 2)</span><br><span class="line">        # self.maxpool1 = torch.nn.MaxPool2d(2)</span><br><span class="line">        # self.conv2 = torch.nn.Conv2d(32, 32, 5, padding = 2)</span><br><span class="line">        # self.maxpool2 = torch.nn.MaxPool2d(2)</span><br><span class="line">        # self.conv3 = torch.nn.Conv2d(32, 64, 5, padding = 2)</span><br><span class="line">        # self.maxpool3 = torch.nn.MaxPool2d(2)</span><br><span class="line">        # self.flatten = torch.nn.Flatten()</span><br><span class="line">        # self.linear1 = torch.nn.Linear(1024, 64)</span><br><span class="line">        # self.linear2 = torch.nn.Linear(64, 10)</span><br><span class="line"></span><br><span class="line">        self.model1 = torch.nn.Sequential(</span><br><span class="line">                                torch.nn.Conv2d(3, 32, 5, padding = 2),</span><br><span class="line">                                torch.nn.MaxPool2d(2),</span><br><span class="line">                                torch.nn.Conv2d(32, 32, 5, padding = 2),</span><br><span class="line">                                torch.nn.MaxPool2d(2),</span><br><span class="line">                                torch.nn.Conv2d(32, 64, 5, padding = 2),</span><br><span class="line">                                torch.nn.MaxPool2d(2),</span><br><span class="line">                                torch.nn.Flatten(),</span><br><span class="line">                                torch.nn.Linear(1024, 64),</span><br><span class="line">                                torch.nn.Linear(64, 10)</span><br><span class="line">                                )</span><br><span class="line"></span><br><span class="line">    def forward(self, x):</span><br><span class="line">        # x = self.conv1(x)</span><br><span class="line">        # x = self.maxpool1(x)</span><br><span class="line">        # x = self.conv2(x)</span><br><span class="line">        # x = self.maxpool2(x)</span><br><span class="line">        # x = self.conv3(x)</span><br><span class="line">        # x = self.maxpool3(x)</span><br><span class="line">        # x = self.flatten(x)</span><br><span class="line">        # x = self.linear1(x)</span><br><span class="line">        # x = self.linear2(x)</span><br><span class="line"></span><br><span class="line">        x = self.model1(x)</span><br><span class="line"></span><br><span class="line">        return x</span><br><span class="line"></span><br><span class="line">test = test()</span><br><span class="line">print(test)</span><br><span class="line">input = torch.ones((64, 3, 32, 32))</span><br><span class="line">output = test(input)</span><br><span class="line">print(output.shape)</span><br><span class="line"></span><br><span class="line">write = SummaryWriter(&quot;seq_logs&quot;)</span><br><span class="line">write.add_graph(test, input) # 输出运行的树图</span><br><span class="line">write.close()</span><br></pre></td></tr></table></figure></div><h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">inputs = torch.tensor([1, 2, 3], dtype = torch.float32)</span><br><span class="line">targets = torch.tensor([1, 2, 5], dtype = torch.float32)</span><br><span class="line"></span><br><span class="line">inputs = torch.reshape(input, (1, 1, 1, 3))</span><br><span class="line">targets = torch.reshape(targets, (1, 1, 3, 1))</span><br><span class="line"></span><br><span class="line">loss = torch.nn.L1loss(reduction = &#x27;sum&#x27;)</span><br><span class="line">result = loss(inputs, targets)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">有关深度学习及Pytorch基础知识</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机视觉" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="深度学习" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Pytorch" scheme="http://example.com/tags/Pytorch/"/>
    
  </entry>
  
  <entry>
    <title>Lingo</title>
    <link href="http://example.com/2023/03/14/Lingo/"/>
    <id>http://example.com/2023/03/14/Lingo/</id>
    <published>2023-03-14T13:26:36.000Z</published>
    <updated>2023-04-09T02:51:53.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lingo编写格式"><a href="#lingo编写格式" class="headerlink" title="lingo编写格式"></a>lingo编写格式</h1><h2 id="集合部分-SETS"><a href="#集合部分-SETS" class="headerlink" title="集合部分(SETS)"></a>集合部分(SETS)</h2><p>以<code>SETS</code>开始，以<code>ENDSETS</code>结束<br>用于定义必要变量<br>有两类集合</p><p>**原始集合:**<br>其定义格式为:</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SETENME/member list(or 1..n)/: attribute, attribute, etc.</span><br></pre></td></tr></table></figure></div><p><strong>导出集合</strong><br>引用其他集合定义的集合 其定义格式为:</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SENTNAME(set1, set2, etc.): attribute, attribute, etc.</span><br></pre></td></tr></table></figure></div><p>若要在程序中使用数组，则必须在该部分定义<br>如</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Person/1..10/:A;</span><br><span class="line">Task/1..12/:B;</span><br><span class="line">Link(Person, Task):X;</span><br></pre></td></tr></table></figure></div><h2 id="目标与约束"><a href="#目标与约束" class="headerlink" title="目标与约束"></a>目标与约束</h2><p>定义目标函数、约束条件等</p><h2 id="数据部分-DATA"><a href="#数据部分-DATA" class="headerlink" title="数据部分(DATA)"></a>数据部分(DATA)</h2><p>以<code>DATA: </code>开始，以<code>END DATA</code>结束<br>用于数据的输入<br>格式为：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attribute = value_list</span><br></pre></td></tr></table></figure></div><h2 id="初始化部分-INIT"><a href="#初始化部分-INIT" class="headerlink" title="初始化部分(INIT)"></a>初始化部分(INIT)</h2><p>以<code>INIT: </code>开始，以<code>END INIT</code>结束<br>用于对集合属性（数组）定义初值<br>格式为</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attribute=value_list</span><br></pre></td></tr></table></figure></div><h1 id="内部函数"><a href="#内部函数" class="headerlink" title="内部函数"></a>内部函数</h1><p>以<code>@</code>开头\</p><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><p>常用<strong>数学函数</strong>如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@ABS(X) 返回绝对值</span><br><span class="line">@COS(X) 返回余弦值</span><br><span class="line">@EXP(X) 返回e指数值</span><br><span class="line">@FLOOR(X) 返回靠近0的整数部分</span><br><span class="line">@LGM(X) 返回Γ函数自然对数值</span><br><span class="line">@LOG(X) 返回x自然对数值</span><br><span class="line">@SIGN(X) 返回符号值 负数为-1 正数为1</span><br><span class="line">@SIN(X)  返回正弦 x为弧度制</span><br><span class="line">@SMAX(X1, X2···, Xn) 返回最大值</span><br><span class="line">@SMIN(X) (X1, X2···, Xn) 返回最小值</span><br><span class="line">@TAN(X) 返回正切值</span><br></pre></td></tr></table></figure></div><h2 id="集合函数"><a href="#集合函数" class="headerlink" title="集合函数"></a>集合函数</h2><p><strong>集合函数格式</strong>如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_operator(set_name|condition:expression)</span><br></pre></td></tr></table></figure></div><p>其中<code>set_operator</code>为集合函数名<br><code>set_name</code>为数据集合名<br> <code>condition</code>为表达式<br><code>|expression</code>为条件，用逻辑表达式描述（无条件可省略）</p><p>逻辑表达式中 有如下运算符</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#AND# 与</span><br><span class="line">#OR# 或</span><br><span class="line">#NOT# 非</span><br><span class="line"></span><br><span class="line">#EQ# 等于</span><br><span class="line">#NE# 不等于</span><br><span class="line">#GT# 大于</span><br><span class="line">#GE# 大于等于</span><br><span class="line">#LT# 小于</span><br><span class="line">#LE# 小于等于</span><br></pre></td></tr></table></figure></div><p>常见<code>集合函数</code>如下：</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@FOR(set_name: constraint) 对集合set_name的每个元素独立生成约束 由约束表达式constraint描述</span><br><span class="line">@MAX(set_name: exoression) 返回集合上最大值</span><br><span class="line">@MIN(set_name: exoression) 返回集合上最小值</span><br><span class="line">@SUN(set_name: exoression) 返回集合上的表达式exoression的和</span><br><span class="line">@SIZE(set_name) 返回元素个数</span><br><span class="line">@IN(set_name, set_element) 若set_name中包含set_element则返回1，反之返回0</span><br></pre></td></tr></table></figure></div><h2 id="变量界定函数"><a href="#变量界定函数" class="headerlink" title="变量界定函数"></a>变量界定函数</h2><p>变量函数对变量的取值范围的附加限制 由如下四种</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@BND(L, X, U)限制L≤X≤U</span><br><span class="line">@BIN(X) 限制x为1或0</span><br><span class="line">@FREE(X) 取消对x的符号限制(可取任意实数)</span><br><span class="line">@GIN(X) 限制x为整数值</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">Lingo基础语法</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学建模" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="Lingo" scheme="http://example.com/tags/Lingo/"/>
    
  </entry>
  
  <entry>
    <title>Matlab</title>
    <link href="http://example.com/2023/03/14/Matlab/"/>
    <id>http://example.com/2023/03/14/Matlab/</id>
    <published>2023-03-14T13:26:05.000Z</published>
    <updated>2023-04-09T02:57:16.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sin</span> <span class="comment">% 正弦函数</span></span><br><span class="line"><span class="built_in">cos</span> <span class="comment">% 余弦</span></span><br><span class="line"><span class="built_in">tan</span> <span class="comment">% 正切</span></span><br><span class="line"><span class="built_in">sinh</span> <span class="comment">% 双曲正弦</span></span><br><span class="line"><span class="built_in">cosh</span> <span class="comment">% 双曲余弦</span></span><br><span class="line"><span class="built_in">tanh</span> <span class="comment">% 双曲正切</span></span><br><span class="line"><span class="built_in">asin</span> <span class="comment">% 反正弦</span></span><br><span class="line"><span class="built_in">acos</span> <span class="comment">% 反余弦</span></span><br><span class="line"><span class="built_in">atan</span> <span class="comment">% 反正切</span></span><br><span class="line"><span class="built_in">asinh</span> <span class="comment">% 反双曲正弦</span></span><br><span class="line"><span class="built_in">acosh</span> <span class="comment">% 反双曲余弦</span></span><br><span class="line"><span class="built_in">atanh</span> <span class="comment">% 反双曲正切</span></span><br></pre></td></tr></table></figure></div><h2 id="指数与对数函数"><a href="#指数与对数函数" class="headerlink" title="指数与对数函数"></a>指数与对数函数</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exp</span> <span class="comment">% 指数</span></span><br><span class="line"><span class="built_in">log</span> <span class="comment">% e为底的对数</span></span><br><span class="line"><span class="built_in">log10</span> <span class="comment">% lg</span></span><br><span class="line"><span class="built_in">sqrt</span> <span class="comment">% 平方根</span></span><br></pre></td></tr></table></figure></div><h2 id="与复数有关的函数"><a href="#与复数有关的函数" class="headerlink" title="与复数有关的函数"></a>与复数有关的函数</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">abs</span> <span class="comment">% 模</span></span><br><span class="line"><span class="built_in">angle</span> <span class="comment">% 幅角</span></span><br><span class="line"><span class="built_in">conj</span> <span class="comment">% 复共轭</span></span><br><span class="line"><span class="built_in">imag</span> <span class="comment">% 虚部</span></span><br><span class="line"><span class="built_in">real</span> <span class="comment">% 实部</span></span><br></pre></td></tr></table></figure></div><h2 id="舍入函数与其他数值函数"><a href="#舍入函数与其他数值函数" class="headerlink" title="舍入函数与其他数值函数"></a>舍入函数与其他数值函数</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fix</span> <span class="comment">% 向0舍入</span></span><br><span class="line"><span class="built_in">floor</span> <span class="comment">% 向负无穷舍入</span></span><br><span class="line"><span class="built_in">ceil</span> <span class="comment">% 向正无穷舍入</span></span><br><span class="line"><span class="built_in">round</span> <span class="comment">% 四舍五入</span></span><br><span class="line"><span class="built_in">rem</span>(a, b) <span class="comment">% 计算a/b余数</span></span><br></pre></td></tr></table></figure></div><h2 id="有关向量的函数"><a href="#有关向量的函数" class="headerlink" title="有关向量的函数"></a>有关向量的函数</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">min</span>(x) <span class="comment">% 向量x的元素最小值</span></span><br><span class="line"><span class="built_in">max</span>(x) <span class="comment">% 向量x的元素最大值</span></span><br><span class="line"><span class="built_in">mean</span>(x) <span class="comment">% 向量x的元素平均值</span></span><br><span class="line">median(x) <span class="comment">% 向量x的元素中位数</span></span><br><span class="line">std(x) <span class="comment">% 向量x的元素标准差</span></span><br><span class="line">diff(x) <span class="comment">% 向量x的相邻元素差</span></span><br><span class="line"><span class="built_in">sort</span>(x) <span class="comment">% 对向量x进行排序</span></span><br><span class="line"><span class="built_in">length</span>(x) <span class="comment">% 向量x的元素个数</span></span><br><span class="line">norm(x) <span class="comment">% 向量x的Euclidean长度</span></span><br><span class="line">sum(x) <span class="comment">% 向量x的元素和</span></span><br><span class="line">prod(x) <span class="comment">% 向量x的元素连乘积</span></span><br><span class="line">cunsum(x) <span class="comment">% 向量x的累计元素总和</span></span><br><span class="line"><span class="built_in">dot</span>(x) <span class="comment">% 向量x的内积</span></span><br><span class="line"><span class="built_in">cross</span>(x) <span class="comment">% 向量x的外积</span></span><br><span class="line">cumprod(x) <span class="comment">% 向量x的累计元素总乘积</span></span><br></pre></td></tr></table></figure></div><h2 id="关于矩阵"><a href="#关于矩阵" class="headerlink" title="关于矩阵"></a>关于矩阵</h2><h3 id="矩阵的表示"><a href="#矩阵的表示" class="headerlink" title="矩阵的表示"></a>矩阵的表示</h3><p>如</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>; <span class="number">2</span>, <span class="number">4</span>, <span class="number">2</span>; <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure></div><h3 id="矩阵转置"><a href="#矩阵转置" class="headerlink" title="矩阵转置"></a>矩阵转置</h3><p>使用<code>&#39;</code>来表示<br>如</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B = A&#x27;</span><br></pre></td></tr></table></figure></div><h3 id="矩阵加减"><a href="#矩阵加减" class="headerlink" title="矩阵加减"></a>矩阵加减</h3><p><code>+</code>,<code>-</code></p><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p><code>*</code></p><h3 id="求行列式"><a href="#求行列式" class="headerlink" title="求行列式"></a>求行列式</h3><p><code>det(A)</code></p><h3 id="矩阵求逆"><a href="#矩阵求逆" class="headerlink" title="矩阵求逆"></a>矩阵求逆</h3><p><code>inv(A)</code></p><h3 id="“除法”"><a href="#“除法”" class="headerlink" title="“除法”"></a>“除法”</h3><p>如<code>AX = b</code><br>可用<code>X = A \ b</code>求解<br>同时<code>X = A \ b</code>可用于解矛盾方程组</p><h3 id="矩阵特征值"><a href="#矩阵特征值" class="headerlink" title="矩阵特征值"></a>矩阵特征值</h3><p><code>eig(A)</code></p><h1 id="函数作图"><a href="#函数作图" class="headerlink" title="函数作图"></a>函数作图</h1><h2 id="二维平面曲线作图"><a href="#二维平面曲线作图" class="headerlink" title="二维平面曲线作图"></a>二维平面曲线作图</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x, y, s) <span class="comment">% x、y为长度相同的向量，s表示线型及颜色</span></span><br></pre></td></tr></table></figure></div><p>若作多曲线在同一图上，则用函数</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot</span>(x1, x2, s1, x2, y2, s2,.., xn, yn, sn)</span><br></pre></td></tr></table></figure></div><p>取某一区间为<br><code>x = 0:0.1:2*pi</code> 表示取[0, 2Π] 间隔为0.1</p><h2 id="多窗口作图"><a href="#多窗口作图" class="headerlink" title="多窗口作图"></a>多窗口作图</h2><p>将屏幕分为多个窗口分别作图</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subplot(m, n, k) <span class="comment">% 将窗口分为m*n个，当前图在第k个</span></span><br></pre></td></tr></table></figure></div><h2 id="直方图作图"><a href="#直方图作图" class="headerlink" title="直方图作图"></a>直方图作图</h2><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">count = hist(x) <span class="comment">% 将向量x中的元素放入等距10条形中，且返回每个条形中的元素个数</span></span><br><span class="line">count = hist(x, center) <span class="comment">% 参量x为向量，将x中元素放到m(m = length(center))个由center中元素指定的位置为中心的直方图中</span></span><br><span class="line">count = hist(x, number) <span class="comment">% 参量number为标量，用于指定条形数目</span></span><br><span class="line"></span><br><span class="line">[count, center] = hist(x) <span class="comment">% 返回向量x中包含频率计数的count与条形的位置向量center，可以用</span></span><br><span class="line">bar(center, count) <span class="comment">% 对center, count画出条形直方图 条之间有间隔</span></span><br><span class="line">hist(x) <span class="comment">% 直接对传入的x进行作图</span></span><br></pre></td></tr></table></figure></div><p><code>x = normrnd(10, 5, 1000, 1)</code> 表示传入均值为10 标准差为5的正态分布曲线 产生一千行一列的数据</p><h2 id="二维图形注释"><a href="#二维图形注释" class="headerlink" title="二维图形注释"></a>二维图形注释</h2><p><code>grid</code><br>功能：给图形坐标面增加分割线 但会对当前坐标轴的属性有影响</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grid on <span class="comment">% 给当前坐标轴增加分隔线</span></span><br><span class="line">grid off <span class="comment">% 从当前坐标轴去掉分隔线</span></span><br><span class="line">grid <span class="comment">% 转换分割线的显示与否状态</span></span><br><span class="line">grid(axes_handle, on|off) <span class="comment">% 对指定坐标轴axes_handle更改显示分割线状态</span></span><br></pre></td></tr></table></figure></div><h2 id="空间曲线作图"><a href="#空间曲线作图" class="headerlink" title="空间曲线作图"></a>空间曲线作图</h2><h3 id="三维曲线作图"><a href="#三维曲线作图" class="headerlink" title="三维曲线作图"></a>三维曲线作图</h3><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">plot3</span>(x, y, z, s) <span class="comment">% x、y、z为长度相同的向量，s表示线型及颜色</span></span><br></pre></td></tr></table></figure></div><p>如 做空间螺旋线</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">t = <span class="number">0</span>:<span class="number">0.01</span>:<span class="number">8</span>*<span class="built_in">pi</span>;</span><br><span class="line">x = <span class="built_in">cos</span>(t);</span><br><span class="line">y = <span class="built_in">sin</span>(t);</span><br><span class="line">z = t;</span><br><span class="line"><span class="built_in">plot3</span>(x, y, z, <span class="string">&#x27;r&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h3 id="三维曲面作图"><a href="#三维曲面作图" class="headerlink" title="三维曲面作图"></a>三维曲面作图</h3><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mesh(x, y, z) <span class="comment">% 生成由x, y, z指定的网线面</span></span><br><span class="line">surf(x, y, z) <span class="comment">% 在矩形区域内显示三维带阴影曲面图</span></span><br></pre></td></tr></table></figure></div><p>如</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 作z = cosx.*siny曲面图</span></span><br><span class="line">[x, y] = <span class="built_in">meshgrid</span>(<span class="number">-3</span>:<span class="number">0.1</span>:<span class="number">3</span>, <span class="number">-4</span>:<span class="number">0.1</span>:<span class="number">4</span>);</span><br><span class="line">z = <span class="built_in">cos</span>(x) .* <span class="built_in">sin</span>(y);</span><br><span class="line"></span><br><span class="line">mesh(x, y, z); <span class="comment">% 网线面</span></span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">zlabel(<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line"></span><br><span class="line">surf(x, y, z) <span class="comment">% 带阴影曲面图</span></span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">zlabel(<span class="string">&#x27;z&#x27;</span>);</span><br></pre></td></tr></table></figure></div><h2 id="基本语句"><a href="#基本语句" class="headerlink" title="基本语句"></a>基本语句</h2><h3 id="for"><a href="#for" class="headerlink" title="for"></a><code>for</code></h3><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x = a:d:b <span class="comment">% a为起始点 b为终止点 d为区间间隔</span></span><br><span class="line">    (command) <span class="comment">% 循环体</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div><p>如</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 求100以内奇数相加和</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> <span class="number">1</span>:<span class="number">2</span>:<span class="number">99</span></span><br><span class="line">    s = s + <span class="built_in">i</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">s <span class="comment">% 输出结果</span></span><br></pre></td></tr></table></figure></div><h3 id="while"><a href="#while" class="headerlink" title="while"></a><code>while</code></h3><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> expression</span><br><span class="line">    (command)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div><h3 id="if-else-end"><a href="#if-else-end" class="headerlink" title="if-else-end"></a><code>if-else-end</code></h3><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> expression</span><br><span class="line">    (command)</span><br><span class="line"><span class="keyword">elseif</span> expression</span><br><span class="line">    (command)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    (command)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div><h2 id="脚本文件与函数文件"><a href="#脚本文件与函数文件" class="headerlink" title="脚本文件与函数文件"></a>脚本文件与函数文件</h2><p>函数文件开头需为例如</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">z</span> = <span class="title">fun</span><span class="params">(x)</span></span></span><br></pre></td></tr></table></figure></div><p>以方便脚本文件调用<br>在命令窗口输入例如</p><div class="highlight-container" data-rel="Matlab"><figure class="iseeu highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">z = fun(x)</span><br></pre></td></tr></table></figure></div><p>即可调用</p><h1 id="状态转移模型"><a href="#状态转移模型" class="headerlink" title="状态转移模型"></a>状态转移模型</h1>]]></content>
    
    
    <summary type="html">Matlab</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学建模" scheme="http://example.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="Matlab" scheme="http://example.com/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>机器学习-Sklearn</title>
    <link href="http://example.com/2023/03/14/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-Sklearn/"/>
    <id>http://example.com/2023/03/14/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-Sklearn/</id>
    <published>2023-03-14T13:20:50.000Z</published>
    <updated>2023-04-09T02:59:52.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python中库的调用"><a href="#Python中库的调用" class="headerlink" title="Python中库的调用"></a>Python中库的调用</h1><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sklearn</span><br></pre></td></tr></table></figure></div><h1 id="数据集的划分"><a href="#数据集的划分" class="headerlink" title="数据集的划分"></a>数据集的划分</h1><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.model_selection.train_test_split(arrays, *options)</span><br></pre></td></tr></table></figure></div><p>x 数据集的特征值<br>y 数据集的标签值<br>test_size 测试集的大小，一般为float<br>random_state 随机数种子,不同的种子会造成不同的随机采样结果。相同的种子采样结果相同。<br>return 测试集特征训练集特征值值，训练标签，测试标签(默认随机取)<br>一般使用为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x_train, x_test, y_train, y_test = train_test_split(data, target, random_state = <span class="number">22</span>)</span><br></pre></td></tr></table></figure></div><p>其中 data为自变量集 target为因变量</p><h1 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h1><h2 id="字典特征提取"><a href="#字典特征提取" class="headerlink" title="字典特征提取"></a>字典特征提取</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction <span class="keyword">import</span> DictVectorizer</span><br><span class="line">transfer = DictVectorizer(sparse=<span class="literal">True</span>) <span class="comment"># 实例化转换器类</span></span><br><span class="line">data = transfer.fit_transform(data) <span class="comment"># 类似独热编码</span></span><br></pre></td></tr></table></figure></div><p>sparse为True为使用传统独热编码<br>为False为使用向量说明当前位置 用于节省空间 加快运行效率</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_dure = pd.get_dummies(data2, columns=[<span class="string">&#x27;...&#x27;</span>]) <span class="comment"># 独热编码 columns为剔除无关项</span></span><br></pre></td></tr></table></figure></div><h2 id="文本特征提取"><a href="#文本特征提取" class="headerlink" title="文本特征提取"></a>文本特征提取</h2><h3 id="英文"><a href="#英文" class="headerlink" title="英文"></a>英文</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction <span class="keyword">import</span> DictVectorizer</span><br><span class="line">transfer = CountVectorizer() <span class="comment"># 实例化 sparse 默认为True</span></span><br><span class="line">data = transfer.fit_transform(data) <span class="comment"># 调用</span></span><br></pre></td></tr></table></figure></div><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">transfer = CountVectorizer()</span><br><span class="line">data = transfer.fit_transform(data) <span class="comment"># 调用fit_transform</span></span><br></pre></td></tr></table></figure></div><p>对于</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = [<span class="string">&quot;life is short,i like like python&quot;</span>, <span class="string">&quot;life is too long,i dislike python&quot;</span>]</span><br></pre></td></tr></table></figure></div><p>输出结果为</p><blockquote><p>文本特征抽取的结果：<br>[[0 1 1 2 0 1 1 0]<br>[1 1 1 0 1 1 0 1]]<br>返回特征名字：<br>[‘dislike’, ‘is’, ‘life’, ‘like’, ‘long’, ‘python’, &gt; ‘short’, ‘too’]</p></blockquote><p>即对应字母在句子中出现的次数</p><h3 id="中文-jieba分词处理"><a href="#中文-jieba分词处理" class="headerlink" title="中文 jieba分词处理"></a>中文 jieba分词处理</h3><p>对于</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = [<span class="string">&quot;一种还是一种今天很残酷，明天更残酷，后天很美好，但绝对大部分是死在明天晚上，所以每个人不要放弃今天。&quot;</span>,<span class="string">&quot;我们看到的从很远星系来的光是在几百万年之前发出的，这样当我们看到宇宙时，我们是在看它的过去。&quot;</span>,<span class="string">&quot;如果只用一种方式了解某样事物，你就不会真正了解它。了解事物真正含义的秘密取决于如何将其与我们所了解的事物相联系。&quot;</span>]</span><br></pre></td></tr></table></figure></div><p>对其进行</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text_list = []</span><br><span class="line"><span class="keyword">for</span> sent <span class="keyword">in</span> data:</span><br><span class="line">    text_list.append(cut_word(sent))</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">&quot; &quot;</span>.join(<span class="built_in">list</span>(jieba.cut(text))) <span class="comment"># 使用jieba对中文字符串进行分词</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">transfer = CountVectorizer() <span class="comment"># 实例化转换器</span></span><br><span class="line">data = transfer.fit_transform(text_list)</span><br></pre></td></tr></table></figure></div><p>类似地得到</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文本特征抽取的结果：</span><br><span class="line">[[<span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]]</span><br><span class="line">返回特征名字：</span><br><span class="line">[<span class="string">&#x27;一种&#x27;</span>, <span class="string">&#x27;不会&#x27;</span>, <span class="string">&#x27;不要&#x27;</span>, <span class="string">&#x27;之前&#x27;</span>, <span class="string">&#x27;了解&#x27;</span>, <span class="string">&#x27;事物&#x27;</span>, <span class="string">&#x27;今天&#x27;</span>, <span class="string">&#x27;光是在&#x27;</span>, <span class="string">&#x27;几百万年&#x27;</span>, <span class="string">&#x27;发出&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;取决于&#x27;</span>, <span class="string">&#x27;只用&#x27;</span>, <span class="string">&#x27;后天&#x27;</span>, <span class="string">&#x27;含义&#x27;</span>, <span class="string">&#x27;大部分&#x27;</span>, <span class="string">&#x27;如何&#x27;</span>, <span class="string">&#x27;如果&#x27;</span>, <span class="string">&#x27;宇宙&#x27;</span>, <span class="string">&#x27;我们&#x27;</span>, <span class="string">&#x27;所以&#x27;</span>, <span class="string">&#x27;放</span></span><br><span class="line"><span class="string">弃&#x27;</span>, <span class="string">&#x27;方式&#x27;</span>, <span class="string">&#x27;明天&#x27;</span>, <span class="string">&#x27;星系&#x27;</span>, <span class="string">&#x27;晚上&#x27;</span>, <span class="string">&#x27;某样&#x27;</span>, <span class="string">&#x27;残酷&#x27;</span>, <span class="string">&#x27;每个&#x27;</span>, <span class="string">&#x27;看到&#x27;</span>, <span class="string">&#x27;真正&#x27;</span>, <span class="string">&#x27;秘密&#x27;</span>, <span class="string">&#x27;绝</span></span><br><span class="line"><span class="string">对&#x27;</span>, <span class="string">&#x27;美好&#x27;</span>, <span class="string">&#x27;联系&#x27;</span>, <span class="string">&#x27;过去&#x27;</span>, <span class="string">&#x27;还是&#x27;</span>, <span class="string">&#x27;这样&#x27;</span>]</span><br></pre></td></tr></table></figure></div><h3 id="Tf-idf文本特征提取"><a href="#Tf-idf文本特征提取" class="headerlink" title="Tf-idf文本特征提取"></a>Tf-idf文本特征提取</h3><p>能够自动获取关键词<br>TF-IDF的主要思想是：如果某个词或短语在一篇文章中出现的概率高，并且在其他文章中很少出现，则认为此词或者短语具有很好的类别区分能力，适合用来分类。<br>TF-IDF作用：用以评估一字词对于一个文件集或一个语料库中的其中一份文件的重要程度。<br>可提取出更具有分类意义的词<br>对于</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = [<span class="string">&quot;一种还是一种今天很残酷，明天更残酷，后天很美好，但绝对大部分是死在明天晚上，所以每个人不要放弃今天。&quot;</span>,</span><br><span class="line"><span class="string">&quot;我们看到的从很远星系来的光是在几百万年之前发出的，这样当我们看到宇宙时，我们是在看它的过去。&quot;</span>,</span><br><span class="line"><span class="string">&quot;如果只用一种方式了解某样事物，你就不会真正了解它。了解事物真正含义的秘密取决于如何将其与我们所了解的事物相联系。&quot;</span>]</span><br></pre></td></tr></table></figure></div><p>对其进行</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用jieba处理文本</span></span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">text_list = []</span><br><span class="line"><span class="keyword">for</span> sent <span class="keyword">in</span> data:</span><br><span class="line">    text_list.append<span class="string">&quot; &quot;</span>.join(<span class="built_in">list</span>(jieba.cut(sent))))</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfVectorizer</span><br><span class="line">transfer = TfidfVectorizer(stop_words=[<span class="string">&#x27;一种&#x27;</span>, <span class="string">&#x27;不会&#x27;</span>, <span class="string">&#x27;不要&#x27;</span>]) <span class="comment"># 实例化转换器 stop为去掉的词?</span></span><br><span class="line">data = transfer.fit_transform(text_list)</span><br></pre></td></tr></table></figure></div><p>其结果为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">文本特征抽取的结果：</span><br><span class="line">[[ <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.43643578</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.</span> <span class="number">0.21821789</span> <span class="number">0.</span> <span class="number">0.21821789</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.</span> <span class="number">0.21821789</span> <span class="number">0.21821789</span> <span class="number">0.</span> <span class="number">0.43643578</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.21821789</span> <span class="number">0.</span> <span class="number">0.43643578</span> <span class="number">0.21821789</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.21821789</span> <span class="number">0.21821789</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.21821789</span></span><br><span class="line"><span class="number">0.</span> ]</span><br><span class="line">[ <span class="number">0.2410822</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.2410822</span> <span class="number">0.2410822</span></span><br><span class="line"><span class="number">0.2410822</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.2410822</span> <span class="number">0.55004769</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.2410822</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.48216441</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.2410822</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.2410822</span> ]</span><br><span class="line">[ <span class="number">0.</span> <span class="number">0.644003</span> <span class="number">0.48300225</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.16100075</span> <span class="number">0.16100075</span> <span class="number">0.</span> <span class="number">0.16100075</span> <span class="number">0.</span> <span class="number">0.16100075</span></span><br><span class="line"><span class="number">0.16100075</span> <span class="number">0.</span> <span class="number">0.12244522</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.16100075</span></span><br><span class="line"><span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.16100075</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.3220015</span> <span class="number">0.16100075</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.16100075</span> <span class="number">0.</span> <span class="number">0.</span></span><br><span class="line"><span class="number">0.</span> ]]</span><br><span class="line">返回特征名字：</span><br><span class="line">[<span class="string">&#x27;之前&#x27;</span>, <span class="string">&#x27;了解&#x27;</span>, <span class="string">&#x27;事物&#x27;</span>, <span class="string">&#x27;今天&#x27;</span>, <span class="string">&#x27;光是在&#x27;</span>, <span class="string">&#x27;几百万年&#x27;</span>, <span class="string">&#x27;发出&#x27;</span>, <span class="string">&#x27;取决于&#x27;</span>, <span class="string">&#x27;只用&#x27;</span>, <span class="string">&#x27;后天&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;含义&#x27;</span>, <span class="string">&#x27;大部分&#x27;</span>, <span class="string">&#x27;如何&#x27;</span>, <span class="string">&#x27;如果&#x27;</span>, <span class="string">&#x27;宇宙&#x27;</span>, <span class="string">&#x27;我们&#x27;</span>, <span class="string">&#x27;所以&#x27;</span>, <span class="string">&#x27;放弃&#x27;</span>, <span class="string">&#x27;方式&#x27;</span>, <span class="string">&#x27;明天&#x27;</span>, <span class="string">&#x27;星</span></span><br><span class="line"><span class="string">系&#x27;</span>, <span class="string">&#x27;晚上&#x27;</span>, <span class="string">&#x27;某样&#x27;</span>, <span class="string">&#x27;残酷&#x27;</span>, <span class="string">&#x27;每个&#x27;</span>, <span class="string">&#x27;看到&#x27;</span>, <span class="string">&#x27;真正&#x27;</span>, <span class="string">&#x27;秘密&#x27;</span>, <span class="string">&#x27;绝对&#x27;</span>, <span class="string">&#x27;美好&#x27;</span>, <span class="string">&#x27;联系&#x27;</span>, <span class="string">&#x27;过</span></span><br><span class="line"><span class="string">去&#x27;</span>, <span class="string">&#x27;还是&#x27;</span>, <span class="string">&#x27;这样&#x27;</span>]</span><br></pre></td></tr></table></figure></div><h2 id="特征预处理"><a href="#特征预处理" class="headerlink" title="特征预处理"></a>特征预处理</h2><h3 id="归一化"><a href="#归一化" class="headerlink" title="归一化"></a>归一化</h3><p>通过一些转换函数将特征数据转换成更加适合算法模型的特征数据过程<br>将数据压缩至一个既定范围内<br>使得特征都能被学习到</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.preprocessing.MinMaxScaler()</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> MinMaxScaler</span><br><span class="line"></span><br><span class="line">data = pd.read_csv(<span class="string">&quot;dating.txt&quot;</span>)</span><br><span class="line">transfer = MinMaxScaler(feature_range=(<span class="number">2</span>, <span class="number">3</span>)) <span class="comment"># 实例化转换器类</span></span><br><span class="line">data = transfer.fit_transform(data[[<span class="string">&#x27;milage&#x27;</span>, <span class="string">&#x27;Liters&#x27;</span>, <span class="string">&#x27;Consumtime&#x27;</span>]])</span><br></pre></td></tr></table></figure></div><h3 id="标准化"><a href="#标准化" class="headerlink" title="标准化"></a>标准化</h3><p>剔除异常值的影响<br>适合目前大数据场景</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.preprocessing.StandardScaler( )</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">transfer = StandardScaler()</span><br><span class="line">data = transfer.fit_transform(data[[<span class="string">&#x27;milage&#x27;</span>,<span class="string">&#x27;Liters&#x27;</span>,<span class="string">&#x27;Consumtime&#x27;</span>]])</span><br></pre></td></tr></table></figure></div><h2 id="特征降维"><a href="#特征降维" class="headerlink" title="特征降维"></a>特征降维</h2><p>降维是指在某些限定条件下，降低随机变量(特征)个数，得到一组“不相关”主变量的过程<br>降低随机变量的个数</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.feature_selection</span><br></pre></td></tr></table></figure></div><h3 id="特征选择"><a href="#特征选择" class="headerlink" title="特征选择"></a>特征选择</h3><h3 id="Filter过滤式"><a href="#Filter过滤式" class="headerlink" title="Filter过滤式"></a>Filter过滤式</h3><p>主要探究特征本身特点、特征与特征和目标值之间关联<br>方差选择法：低方差特征过滤</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.feature_selection.VarianceThreshold(threshold = <span class="number">0.0</span>) <span class="comment"># 删除所有低方差特征</span></span><br></pre></td></tr></table></figure></div><p>使用例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">transfer = VarianceThreshold(threshold=<span class="number">1</span>)</span><br><span class="line">data = transfer.fit_transform(data.iloc[:, <span class="number">1</span>:<span class="number">10</span>])</span><br></pre></td></tr></table></figure></div><p><code>iloc</code>为指定位置 先行再列</p><h3 id="相关系数"><a href="#相关系数" class="headerlink" title="相关系数"></a>相关系数</h3><p>皮尔逊相关系数(Pearson Correlation Coefficient)</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> pearsonr</span><br><span class="line">pearsonr(data[i], data[j])[<span class="number">0</span>])) <span class="comment"># 得到相关系数</span></span><br></pre></td></tr></table></figure></div><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">&quot;factor_returns.csv&quot;</span>)</span><br><span class="line">factor = [<span class="string">&#x27;pe_ratio&#x27;</span>, <span class="string">&#x27;pb_ratio&#x27;</span>, <span class="string">&#x27;market_cap&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;return_on_asset_net_profit&#x27;</span>, <span class="string">&#x27;du_return_on_equity&#x27;</span>, <span class="string">&#x27;ev&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;earnings_per_share&#x27;</span>, <span class="string">&#x27;revenue&#x27;</span>, <span class="string">&#x27;total_expense&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(factor)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, <span class="built_in">len</span>(factor) - <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;指标%s与指标%s之间的相关性大小为%f&quot;</span> % (factor[i], factor[j + <span class="number">1</span>], </span><br><span class="line">        pearsonr(data[factor[i]], data[factor[j + <span class="number">1</span>]])[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure></div><p>此处可使用图像进行观察revenue与total_expense的关系</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">100</span>)</span><br><span class="line">plt.scatter(data[<span class="string">&#x27;revenue&#x27;</span>], data[<span class="string">&#x27;total_expense&#x27;</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p>可得到其相关系数高可以进行合成</p><h3 id="主成分分析-PCA-PCA降维"><a href="#主成分分析-PCA-PCA降维" class="headerlink" title="主成分分析(PCA) PCA降维"></a>主成分分析(PCA) PCA降维</h3><p>定义：高维数据转化为低维数据的过程，在此过程中可能会舍弃原有数据、创造新的变量<br>作用：是数据维数压缩，尽可能降低原数据的维数（复杂度），损失少量信息。<br>应用：回归分析或者聚类分析当中</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.decomposition.PCA(n_components = <span class="literal">None</span>)</span><br></pre></td></tr></table></figure></div><p>对于n_components：<br>小数：表示保留百分之多少的信息<br>整数：减少到多少特征<br>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line">transfer = PCA(n_components = <span class="number">0.9</span>) <span class="comment"># 保留90%的信息</span></span><br><span class="line">data1 = transfer.fit_transform(data)</span><br><span class="line">transfer2 = PCA(n_components=<span class="number">3</span>) <span class="comment"># 减少到3个特征</span></span><br><span class="line">data2 = transfer2.fit_transform(data)</span><br></pre></td></tr></table></figure></div><h3 id="合并表"><a href="#合并表" class="headerlink" title="合并表"></a>合并表</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">result = pd.merge(csv1, csv2, on = [test1, test2]) <span class="comment"># 将csv1中的tset1和csv2的test2在一张表中 按索引进行合并</span></span><br></pre></td></tr></table></figure></div><h2 id="sklearn转换器和预估器"><a href="#sklearn转换器和预估器" class="headerlink" title="sklearn转换器和预估器"></a>sklearn转换器和预估器</h2><h3 id="转换器"><a href="#转换器" class="headerlink" title="转换器"></a>转换器</h3><p>特征工程的接口称之为转换器<br>有以下三种<br><code>fit_transform</code><br><code>fit</code><br><code>transform</code><br>其差别如以下</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> StandardScaler</span><br><span class="line">In [<span class="number">2</span>]: std1 = StandardScaler()</span><br><span class="line">In [<span class="number">3</span>]: a = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]</span><br><span class="line">In [<span class="number">4</span>]: std1.fit_transform(a)</span><br><span class="line">Out[<span class="number">4</span>]:array([[-<span class="number">1.</span>, -<span class="number">1.</span>, -<span class="number">1.</span>],[ <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]])</span><br><span class="line">In [<span class="number">5</span>]: std2 = StandardScaler()</span><br><span class="line">In [<span class="number">6</span>]: std2.fit(a)</span><br><span class="line">Out[<span class="number">6</span>]: StandardScaler(copy=<span class="literal">True</span>, with_mean=<span class="literal">True</span>, with_std=<span class="literal">True</span>)</span><br><span class="line">In [<span class="number">7</span>]: std2.transform(a)</span><br><span class="line">Out[<span class="number">7</span>]:array([[-<span class="number">1.</span>, -<span class="number">1.</span>, -<span class="number">1.</span>],[ <span class="number">1.</span>, <span class="number">1.</span>, <span class="number">1.</span>]])</span><br></pre></td></tr></table></figure></div><p>可知fit_transform的作用相当于transform加上fit<br>fit方法可看作训练</p><h3 id="估计器"><a href="#估计器" class="headerlink" title="估计器"></a>估计器</h3><p>sklearn机器学习算法的实现<br>调用.fit()进行计算 生成model\</p><p>模型评估方法:<br>1)直接对比真实值与预测值\</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y_predict = estimator.predict(x_test)</span><br><span class="line"><span class="keyword">if</span> y_test == y_predict</span><br></pre></td></tr></table></figure></div><p>2)利用公式计算\</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">accurary = estimator.score(x_test, y_test)</span><br></pre></td></tr></table></figure></div><h1 id="分类算法"><a href="#分类算法" class="headerlink" title="分类算法"></a>分类算法</h1><h2 id="KNN算法"><a href="#KNN算法" class="headerlink" title="KNN算法"></a>KNN算法</h2><p>核心思想:根据邻居确定类别<br>可能出现的问题:<br>k过小容易收到异常点影响<br>k过大容易收到样本不均匀影响<br>需要做无量纲化处理——标准化</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.neighbors.KNeighborsClassifier(n_neighbors = <span class="number">5</span>, algorithm = <span class="string">&#x27;auto&#x27;</span>)</span><br></pre></td></tr></table></figure></div><p>· n_neighbors：int,可选（默认&#x3D; 5），k_neighbors查询默认使用的邻居数<br>· algorithm：{‘auto’，‘ball_tree’，‘kd_tree’，‘brute’}，可选用于计算最近邻居的算法：‘ball_tree’将会使用 BallTree，‘kd_tree’将使用 KDTree。‘auto’将尝试根据传递给fit方法的值来决定最合适的算法。 (不同实现方式影响效率)</p><h3 id="使用案例——鸢尾花分类"><a href="#使用案例——鸢尾花分类" class="headerlink" title="使用案例——鸢尾花分类"></a>使用案例——鸢尾花分类</h3><p>-&gt; knn_demo.ipynb</p><h2 id="模型选择和调优"><a href="#模型选择和调优" class="headerlink" title="模型选择和调优"></a>模型选择和调优</h2><h3 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h3><p>将拿到的训练数据，分为训练和验证集。以下图为例：将数据分成5份，其中一份作为验证集。然后经过5次(组)的测试，每次都更换不同的验证集。即得到5组模型的结果，取平均值作为最终结果。又称5折交叉验证。<br>交叉验证目的：<strong>为了让被评估的模型更加准确可信</strong></p><h3 id="超参数搜索——网格搜索"><a href="#超参数搜索——网格搜索" class="headerlink" title="超参数搜索——网格搜索"></a>超参数搜索——网格搜索</h3><p>获取最佳参数(超参数)-(如KNN中的K值)\</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.model_selection.GridSearchCV(estimator, param_grid = <span class="literal">None</span>,cv = <span class="literal">None</span>)</span><br></pre></td></tr></table></figure></div><p>对估计器的指定参数值进行详尽搜索<br>estimator：估计器对象<br>param_grid：估计器参数(dict){“n_neighbors”:[1,3,5]}<br>cv：指定几折交叉验证 类似epoch<br>fit：输入训练数据<br>score：准确率<br>输出结果为</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bestscore:在交叉验证中验证的最好结果</span><br><span class="line">bestestimator：最好的参数模型</span><br><span class="line">cvresults:每次交叉验证后的验证集准确率结果和训练集准确率结果</span><br></pre></td></tr></table></figure></div><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">knn = KNeighborsClassifier()</span><br><span class="line">param = &#123;<span class="string">&quot;n_neighbors&quot;</span>: [<span class="number">3</span>, <span class="number">5</span>, <span class="number">10</span>]&#125;</span><br><span class="line">gc = GridSearchCV(knn, param_grid=param, cv=<span class="number">2</span>)</span><br><span class="line">gc.fit(x_train, y_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;选择了某个模型测试集当中预测的准确率为：&quot;</span>, gc.score(x_test, y_test))</span><br><span class="line"><span class="comment"># 训练验证集的结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;在交叉验证当中验证的最好结果：&quot;</span>, gc.best_score_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;gc选择了的模型K值是：&quot;</span>, gc.best_estimator_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;每次交叉验证的结果为：&quot;</span>, gc.cv_results_)</span><br></pre></td></tr></table></figure></div><h2 id="朴素贝叶斯算法"><a href="#朴素贝叶斯算法" class="headerlink" title="朴素贝叶斯算法"></a>朴素贝叶斯算法</h2><p><code>sklearn.naive_bayes.MultinomialNB(alpha = 1.0)</code><br>朴素贝叶斯分类<br>各结论之间相互独立 使用贝叶斯公式<br>alpha：拉普拉斯平滑系数<br><strong>优点：</strong><br>朴素贝叶斯模型发源于古典数学理论，有稳定的分类效率。<br>对缺失数据不太敏感，算法也比较简单，常用于文本分类。<br>分类准确度高，速度快<br><strong>缺点：</strong><br>朴素贝叶斯模型发源于古典数学理论，有稳定的分类效率。<br>对缺失数据不太敏感，算法也比较简单，常用于文本分类。<br>分类准确度高，速度快</p><h2 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h2><h3 id="决策树-1"><a href="#决策树-1" class="headerlink" title="决策树"></a>决策树</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">sklearn</span>.tree.DecisionTreeClassifier(criterion = <span class="string">&#x27;gini&#x27;</span>, max_depth=<span class="literal">None</span>, random_state=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure></div><p>criterion:默认是’gini’系数，也可以选择信息增益的熵’entropy’<br>max_depth:树的深度大小<br>random_state:随机数种子<br><em>其中会有些超参数如max_depth:树的深度大小等</em><br><strong>优点：</strong><br>简单的理解和解释，树木可视化。<br>可解释能力强<br><strong>缺点：</strong><br>决策树学习者可以创建不能很好地推广数据的过于复杂的树，这被称为过拟合。</p><h3 id="决策树可视化"><a href="#决策树可视化" class="headerlink" title="决策树可视化"></a>决策树可视化</h3><p><code>sklearn.tree.export_graphviz() </code><br>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree.export_graphviz(estimator,out_file=<span class="string">&#x27;tree.dot&#x27;</span>,feature_names=[<span class="string">&quot;,&quot;</span>])</span><br></pre></td></tr></table></figure></div><p>此处可使用<code>graphviz</code>工具进行树可视化<br>ubuntu下使用<code>sudo apt-get install graphviz Mac:brew install graphviz</code><br>使用<code>dot -Tpng tree.dot -o tree.png</code>将dot转换为png或jpg</p><h2 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h2><p>包含多个决策树的分类器<br><em>训练集随机 特征随机</em></p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">sklearn</span>.ensemble.RandomForestClassifier(n_estimators=<span class="number">10</span>, criterion = <span class="string">&#x27;gini&#x27;</span>, max_depth = <span class="literal">None</span>, bootstrap = <span class="literal">True</span>, random_state = <span class="literal">None</span>, min_samples_split = <span class="number">2</span>)</span><br></pre></td></tr></table></figure></div><p>n_estimators：integer，optional（default &#x3D; 10）森林里的树木数量<br>120,200,300,500,800,1200<br>criteria：string，可选（default &#x3D;“gini”）分割特征的测量方法<br>max_depth：integer或None，可选（默认&#x3D;无）树的最大深度 5,8,15,25,30<br>max_features&#x3D;”auto”,每个决策树的最大特征数量<br>If “auto”, then max_features&#x3D;sqrt(n_features) .<br>If “sqrt”, then max_features&#x3D;sqrt(n_features) (same as “auto”).<br>If “log2”, then max_features&#x3D;log2(n_features) .<br>If None, then max_features&#x3D;n_features .<br>bootstrap：boolean，optional（default &#x3D; True）是否在构建树时使用放回抽样<br>min_samples_split:节点划分最少样本数<br>min_samples_leaf:叶子节点的最小样本数<br><em>其中存在超参数：n_estimator, max_depth, min_samples_split, min_samples_leaf</em><br><strong>优点：</strong><br>在当前所有算法中，具有极好的准确率<br>能够有效地运行在大数据集上，处理具有高维特征的输入样本，而且不需要降维<br>能够评估各个特征在分类问题上的重要性</p><h1 id="回归和聚类算法"><a href="#回归和聚类算法" class="headerlink" title="回归和聚类算法"></a>回归和聚类算法</h1><h2 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h2><h3 id="线性回归概念"><a href="#线性回归概念" class="headerlink" title="线性回归概念"></a>线性回归概念</h3><p>线性模型：自变量为一次或参数为一次<br><em>但仅参数为一次非线性关系</em><br><strong>线性关系一定为线性模型</strong><br><strong>线性模型不一定为线性关系</strong></p><h3 id="优化算法"><a href="#优化算法" class="headerlink" title="优化算法"></a>优化算法</h3><h3 id="正规方程"><a href="#正规方程" class="headerlink" title="正规方程"></a>正规方程</h3><p>公式求解<br><strong>缺点：当特征过多过复杂时，求解速度太慢并且得不到结果</strong></p><h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p><strong>面对训练数据规模十分庞大的任务 ，能够找到较好的结果</strong></p><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正规方程</span></span><br><span class="line">sklearn.linear_model.LinearRegression(fit_intercept = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div><p>fit_intercept：是否计算偏置<br>LinearRegression.coef_：回归系数<br>LinearRegression.intercept_：偏置</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 梯度下降</span></span><br><span class="line">sklearn.linear_model.SGDRegressor(loss = <span class="string">&quot;squared_loss&quot;</span>, fit_intercept = <span class="literal">True</span>, learning_rate = <span class="string">&#x27;invscaling&#x27;</span>, eta0=<span class="number">0.01</span>)</span><br></pre></td></tr></table></figure></div><p>loss:损失类型<br><em>loss&#x3D;”squared_loss”: 普通最小二乘法</em><br>fit_intercept：是否计算偏置<br>learning_rate : string, optional <em>学习率算法</em></p><blockquote><p>学习率填充：<br>‘constant’: eta &#x3D; eta0<br>‘optimal’: eta &#x3D; 1.0 &#x2F; (alpha * (t + t0)) [default]<br>‘invscaling’: eta &#x3D; eta0 &#x2F; pow(t, power_t) <em>power_t&#x3D;0.25:存在父类当中</em><br>对于一个常数值的学习率来说，可以使用learning_rate&#x3D;’constant’ ，并使用eta0来指定学习率。</p></blockquote><p>SGDRegressor.coef_：回归系数<br>SGDRegressor.intercept_：偏置</p><h3 id="性能评估"><a href="#性能评估" class="headerlink" title="性能评估"></a>性能评估</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.metrics.mean_squared_error(y_true, y_pred)</span><br></pre></td></tr></table></figure></div><blockquote><p>均方误差回归损失<br>y_true:真实值<br>y_pred:预测值<br>return:浮点数结果</p></blockquote><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mylinearregression</span>():</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">线性回归预测房子价格</span></span><br><span class="line"><span class="string">:return:</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">lb = load_boston()</span><br><span class="line"><span class="comment"># print(lb.data)</span></span><br><span class="line"><span class="comment"># print(lb.target)</span></span><br><span class="line"><span class="comment"># 对数据集进行划分</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(lb.data, lb.target,</span><br><span class="line">test_size=<span class="number">0.3</span>, random_state=<span class="number">24</span>)</span><br><span class="line"><span class="comment"># 需要做标准化处理对于特征值处理</span></span><br><span class="line">std_x = StandardScaler()</span><br><span class="line">x_train = std_x.fit_transform(x_train)</span><br><span class="line">x_test = std_x.fit_transform(x_test)</span><br><span class="line"><span class="comment"># print(x_train)</span></span><br><span class="line"><span class="comment"># 对于目标值进行标准化</span></span><br><span class="line">std_y = StandardScaler()</span><br><span class="line">y_train = std_y.fit_transform(y_train)</span><br><span class="line">y_test = std_y.transform(y_test)</span><br><span class="line">y_test = std_y.inverse_transform(y_test)</span><br><span class="line"><span class="comment"># 使用线性模型进行预测</span></span><br><span class="line"><span class="comment"># 使用正规方程求解</span></span><br><span class="line">lr = LinearRegression()</span><br><span class="line"><span class="comment"># # 此时在干什么？</span></span><br><span class="line">lr.fit(x_train, y_train)</span><br><span class="line">y_lr_predict = std_y.inverse_transform(lr.predict(x_test))</span><br><span class="line"><span class="built_in">print</span>(lr.coef_)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正规方程预测的结果为：&quot;</span>, y_lr_predict)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;正规方程的均方误差为：&quot;</span>, mean_squared_error(y_test, y_lr_predict))</span><br><span class="line"><span class="comment"># 梯度下降进行预测</span></span><br><span class="line">sgd = SGDRegressor()</span><br><span class="line"></span><br><span class="line">sgd.fit(x_train, y_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;SGD的权重参数为：&quot;</span>, sgd.coef_)</span><br><span class="line"></span><br><span class="line">y_sgd_predict = std_y.inverse_transform(sgd.predict(x_test))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;SGD的预测的结果为：&quot;</span>, y_sgd_predict)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;SGD的均方误差为：&quot;</span>, mean_squared_error(y_test, y_sgd_predict))</span><br></pre></td></tr></table></figure></div><h2 id="欠拟合和过拟合"><a href="#欠拟合和过拟合" class="headerlink" title="欠拟合和过拟合"></a>欠拟合和过拟合</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h3 id="欠拟合"><a href="#欠拟合" class="headerlink" title="欠拟合"></a>欠拟合</h3><p>一个假设在训练数据上能够获得比其他假设更好的拟合， 但是在测试数据集上却不能很好地拟合数据，此时认为这个假设出现了过拟合的现象。(模型过于复杂)</p><h3 id="过拟合"><a href="#过拟合" class="headerlink" title="过拟合"></a>过拟合</h3><p>一个假设在训练数据上不能获得更好的拟合，并且在测试数据集上也不能很好地拟合数据，此时认为这个假设出现了欠拟合的现象。(模型过于简单)</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h3 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h3><p>L2正则化 - 更常用</p><blockquote><p>作用：可以使得其中一些W的都很小，都接近于0，削弱某个特征的影响<br>优点：越小的参数说明模型越简单，越简单的模型则越不容易产生过拟合现象<br>Ridge回归 岭回归</p></blockquote><p>L1正则化</p><blockquote><p>作用：可以使得其中一些W的值直接为0，删除这个特征的影响<br>LASSO回归</p></blockquote><h2 id="岭回归"><a href="#岭回归" class="headerlink" title="岭回归"></a>岭回归</h2><p>带L2正则化的线性回归</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.linear_model.Ridge(alpha=<span class="number">1.0</span>, fit_intercept=<span class="literal">True</span>,solver=<span class="string">&quot;auto&quot;</span>, normalize=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></div><blockquote><p>alpha:正则化力度 也叫λ <em>λ取值：0<del>1 1</del>10</em><br>solver:会根据数据自动选择优化方法 <em>sag:如果数据集、特征都比较大，选择该随机梯度下降优化</em><br>normalize:数据是否进行标准化<br>normalize&#x3D;False:可以在fit之前调用preprocessing.StandardScaler标准化数据<br>Ridge.coef_:回归权重<br>Ridge.intercept_:回归偏置</p></blockquote><h2 id="逻辑回归-分类算法"><a href="#逻辑回归-分类算法" class="headerlink" title="逻辑回归(分类算法)"></a>逻辑回归(分类算法)</h2><h3 id="逻辑回归概念"><a href="#逻辑回归概念" class="headerlink" title="逻辑回归概念"></a>逻辑回归概念</h3><p>逻辑回归是一种分类算法，虽然名字中带有回归，但是它与回归之间有一定的联系。由于算法的简单和高效，在实际中应用非常广泛。<br><strong>利于解决二分类问题</strong><br><em>线性回归的输出作为逻辑回归的输入</em></p><h3 id="sigmoid激活函数"><a href="#sigmoid激活函数" class="headerlink" title="sigmoid激活函数"></a>sigmoid激活函数</h3><p>回归的结果输入到sigmoid函数当中<br>输出结果：[0, 1]区间中的一个概率值，默认为0.5为阈值</p><blockquote><p>逻辑回归最终的分类是通过属于某个类别的概率值来判断是否属于某个类别，并且这个类别默认标记为1(正例),另外的一个类别会标记为0(反例)。（方便损失计算）</p></blockquote><blockquote><p>输出结果解释(重要)：假设有两个类别A，B，并且假设我们的概率值为属于A(1)这个类别的概率值。现在有一个样本的输入到逻辑回归输出结果0.6，那么这个概率值超过0.5，意味着我们训练或者预测的结果就是A(1)类别。</p></blockquote><h3 id="对数似然损失"><a href="#对数似然损失" class="headerlink" title="对数似然损失"></a>对数似然损失</h3><h3 id="API-1"><a href="#API-1" class="headerlink" title="API"></a>API</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.linear_model.LogisticRegression(solver = <span class="string">&#x27;liblinear&#x27;</span>, penalty=‘l2’, C = <span class="number">1.0</span>)</span><br></pre></td></tr></table></figure></div><blockquote><p>solver:优化求解方式（默认开源的liblinear库实现，内部使用了坐标轴下降法来迭代优化损失函数） <em>sag：根据数据集自动选择，随机平均梯度下降</em><br>penalty：正则化的种类<br>C：正则化力度</p></blockquote><h3 id="代码举例"><a href="#代码举例" class="headerlink" title="代码举例"></a>代码举例</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">logisticregression</span>():</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">逻辑回归进行癌症预测</span></span><br><span class="line"><span class="string">:return: None</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 1、读取数据，处理缺失值以及标准化</span></span><br><span class="line">column_name = [<span class="string">&#x27;Sample code number&#x27;</span>, <span class="string">&#x27;Clump Thickness&#x27;</span>, <span class="string">&#x27;Uniformity of Cell</span></span><br><span class="line"><span class="string">Size&#x27;</span>, <span class="string">&#x27;Uniformity of Cell Shape&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Marginal Adhesion&#x27;</span>, <span class="string">&#x27;Single Epithelial Cell Size&#x27;</span>, <span class="string">&#x27;Bare</span></span><br><span class="line"><span class="string">Nuclei&#x27;</span>, <span class="string">&#x27;Bland Chromatin&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Normal Nucleoli&#x27;</span>, <span class="string">&#x27;Mitoses&#x27;</span>, <span class="string">&#x27;Class&#x27;</span>]</span><br><span class="line">data = pd.read_csv(<span class="string">&quot;https://archive.ics.uci.edu/ml/machine-learningdatabases/breast-cancer-wisconsin/breast-cancer-wisconsin.data&quot;</span>, names=column_name)</span><br><span class="line"><span class="comment"># 删除缺失值</span></span><br><span class="line">data = data.replace(to_replace=<span class="string">&#x27;?&#x27;</span>, value=np.nan)</span><br><span class="line">data = data.dropna()</span><br><span class="line"><span class="comment"># 取出特征值</span></span><br><span class="line">x = data[column_name[<span class="number">1</span>:<span class="number">10</span>]]</span><br><span class="line">y = data[column_name[<span class="number">10</span>]]</span><br><span class="line"><span class="comment"># 分割数据集</span></span><br><span class="line">x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=<span class="number">0.3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行标准化</span></span><br><span class="line">std = StandardScaler()</span><br><span class="line">x_train = std.fit_transform(x_train)</span><br><span class="line">x_test = std.transform(x_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用逻辑回归</span></span><br><span class="line">lr = LogisticRegression()</span><br><span class="line">lr.fit(x_train, y_train)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;得出来的权重：&quot;</span>, lr.coef_)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预测类别</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测的类别：&quot;</span>, lr.predict(x_test))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得出准确率</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测的准确率:&quot;</span>, lr.score(x_test, y_test))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure></div><h3 id="分类的评估方法"><a href="#分类的评估方法" class="headerlink" title="分类的评估方法"></a>分类的评估方法</h3><h3 id="精确率与召回率"><a href="#精确率与召回率" class="headerlink" title="精确率与召回率"></a>精确率与召回率</h3><h4 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h4><h4 id="精确率-Precision-与召回率-Recall"><a href="#精确率-Precision-与召回率-Recall" class="headerlink" title="精确率(Precision)与召回率(Recall)"></a>精确率(Precision)与召回率(Recall)</h4><p>精确率：预测结果为正例样本中真实为正例的比例（了解）<br>召回率(查全率)：真实为正例的样本中预测结果为正例的比例（查的全，对正样本的区分能力）</p><h4 id="F1-score-反应模型稳健型"><a href="#F1-score-反应模型稳健型" class="headerlink" title="F1-score 反应模型稳健型"></a>F1-score 反应模型稳健型</h4><h3 id="分类评估报告API"><a href="#分类评估报告API" class="headerlink" title="分类评估报告API"></a>分类评估报告API</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.metrics.classification_report(y_true, y_pred, labels = [], target_names = <span class="literal">None</span>)</span><br></pre></td></tr></table></figure></div><blockquote><p>y_true：真实目标值<br>y_pred：估计器预测目标值<br>labels:指定类别对应的数字<br>target_names：目标类别名称<br>return：每个类别精确率与召回率</p></blockquote><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;精确率和召回率为：&quot;</span>, classification_report(y_test, lr.predict(x_test), labels=[<span class="number">2</span>, <span class="number">4</span>], target_names = [<span class="string">&#x27;良性&#x27;</span>, <span class="string">&#x27;恶性&#x27;</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h3 id="ROC曲线与AUC指标"><a href="#ROC曲线与AUC指标" class="headerlink" title="ROC曲线与AUC指标"></a>ROC曲线与AUC指标</h3><h4 id="ROC曲线"><a href="#ROC曲线" class="headerlink" title="ROC曲线"></a>ROC曲线</h4><p>ROC曲线的横轴就是FPRate，纵轴就是TPRate，当二者相等时，表示的意义则是：对于不论真实类别是1还是0的样本，分类器预测为1的概率是相等的，此时AUC为0.5</p><h4 id="AUC指标"><a href="#AUC指标" class="headerlink" title="AUC指标"></a>AUC指标</h4><p>AUC只能用来评价二分类<br>AUC非常适合评价样本不平衡中的分类器性能</p><p>AUC的概率意义是随机取一对正负样本，正样本得分大于负样本的概率<br>AUC的最小值为0.5，最大值为1，取值越高越好<br>AUC&#x3D;1，完美分类器，采用这个预测模型时，不管设定什么阈值都能得出完美预测。绝大多数预测的场合，不存在完美分类器。<br>0.5 &lt; AUC &lt; 1，优于随机猜测。这个分类器（模型）妥善设定阈值的话，能有预测价值。</p><blockquote><p>最终AUC的范围在[0.5, 1]之间，并且越接近1越好</p></blockquote><h4 id="AUC计算API"><a href="#AUC计算API" class="headerlink" title="AUC计算API"></a>AUC计算API</h4><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> roc_auc_score</span><br><span class="line">sklearn.metrics.roc_auc_score(y_true, y_score)</span><br></pre></td></tr></table></figure></div><blockquote><p>计算ROC曲线面积，即AUC值<br>y_true:每个样本的真实类别，必须为0(反例),1(正例)标记<br>y_score:每个样本预测的概率值</p></blockquote><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0.5~1之间，越接近于1约好</span></span><br><span class="line">y_test = np.where(y_test &gt; <span class="number">2.5</span>, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;AUC指标：&quot;</span>, roc_auc_score(y_test, lr.predict(x_test)))</span><br></pre></td></tr></table></figure></div><h2 id="模型保存与加载"><a href="#模型保存与加载" class="headerlink" title="模型保存与加载"></a>模型保存与加载</h2><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.externals <span class="keyword">import</span> joblib</span><br><span class="line"><span class="comment"># 保存</span></span><br><span class="line">joblib.dump(rf, <span class="string">&#x27;test.pkl&#x27;</span>)</span><br><span class="line"><span class="comment"># 加载</span></span><br><span class="line">estimator = joblib.load(<span class="string">&#x27;test.pkl&#x27;</span>)</span><br></pre></td></tr></table></figure></div><p>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用线性模型进行预测</span></span><br><span class="line"><span class="comment"># 使用正规方程求解</span></span><br><span class="line">lr = LinearRegression()</span><br><span class="line"><span class="comment"># 此时在干什么？</span></span><br><span class="line">lr.fit(x_train, y_train)</span><br><span class="line"><span class="comment"># 保存训练完结束的模型</span></span><br><span class="line">joblib.dump(lr, <span class="string">&quot;test.pkl&quot;</span>)</span><br></pre></td></tr></table></figure></div><p>及</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过已有的模型去预测房价</span></span><br><span class="line">model = joblib.load(<span class="string">&quot;test.pkl&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;从文件加载进来的模型预测房价的结果：&quot;</span>,</span><br><span class="line">std_y.inverse_transform(model.predict(x_test)))</span><br></pre></td></tr></table></figure></div><h2 id="无监督学习-k-means算法"><a href="#无监督学习-k-means算法" class="headerlink" title="无监督学习 k-means算法"></a>无监督学习 k-means算法</h2><p>特点分析：采用迭代式算法，直观易懂并且非常实用<br>缺点：容易收敛到局部最优解(多次聚类)</p><h3 id="k-means算法聚类步骤"><a href="#k-means算法聚类步骤" class="headerlink" title="k-means算法聚类步骤"></a>k-means算法聚类步骤</h3><p>1、随机设置K个特征空间内的点作为初始的聚类中心<br>2、对于其他每个点计算到K个中心的距离，未知的点选择最近的一个聚类中心点作为标记类别<br>3、接着对着标记的聚类中心之后，重新计算出每个聚类的新中心点（平均值）<br>4、如果计算得出的新中心点与原中心点一样，那么结束，否则重新进行第二步过程</p><h3 id="API-2"><a href="#API-2" class="headerlink" title="API"></a>API</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.cluster.KMeans(n_clusters=<span class="number">8</span>,init=‘k-means++’)</span><br></pre></td></tr></table></figure></div><blockquote><p>k-means聚类<br>n_clusters:开始的聚类中心数量<br>init:初始化方法，默认为’k-means ++’<br>labels_:默认标记的类型，可以和真实值比较（不是值比较）</p></blockquote><h3 id="Kmeans性能评估指标"><a href="#Kmeans性能评估指标" class="headerlink" title="Kmeans性能评估指标"></a>Kmeans性能评估指标</h3><h3 id="轮廓系数及轮廓系数值分析"><a href="#轮廓系数及轮廓系数值分析" class="headerlink" title="轮廓系数及轮廓系数值分析"></a>轮廓系数及轮廓系数值分析</h3><p>如果b_i&gt;&gt;a_i:趋近于1效果越好， b_i &lt;&lt; a_i:趋近于-1，效果不好。轮廓系数的值是介于 [-1,1] ，越趋近于1代表内聚度和分离度都相对较优。</p><h3 id="轮廓系数API"><a href="#轮廓系数API" class="headerlink" title="轮廓系数API"></a>轮廓系数API</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sklearn.metrics.silhouette_score(X, labels)</span><br></pre></td></tr></table></figure></div><p>计算所有样本的平均轮廓系数<br>X：特征值<br>labels：被聚类标记的目标值</p><h3 id="用户聚类结果评估"><a href="#用户聚类结果评估" class="headerlink" title="用户聚类结果评估"></a>用户聚类结果评估</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">silhouette_score(cust, pre)</span><br></pre></td></tr></table></figure></div><h1 id="使用数据处理方法"><a href="#使用数据处理方法" class="headerlink" title="使用数据处理方法"></a>使用数据处理方法</h1><h2 id="缩小数据范围"><a href="#缩小数据范围" class="headerlink" title="缩小数据范围"></a>缩小数据范围</h2><p>使用<code>query()</code>方法进行数据挑选<br>如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = data.query(<span class="string">&quot;x &lt; 2.5 &amp; x &gt; 2 &amp; y &lt; 1 &amp; 1&quot;</span>)</span><br></pre></td></tr></table></figure></div><h2 id="处理时间特征"><a href="#处理时间特征" class="headerlink" title="处理时间特征"></a>处理时间特征</h2><p>使用<code>pd.to_datatime()</code><br>如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time_value = pd.to_datatime(data[<span class="string">&quot;time&quot;</span>], unit = <span class="string">&quot;s&quot;</span>)</span><br></pre></td></tr></table></figure></div><p>unit为单位 此处为秒</p><p>为了方便得到时间 可使用<br><code>pd.DatetimeIndex()</code><br>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date = pd.DatetimeIndex(time_value)</span><br></pre></td></tr></table></figure></div><p>分组并统计使用<code>groupby().count()</code><br>例如</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">count = data.groupby(<span class="string">&quot;place_id&quot;</span>).count()</span><br></pre></td></tr></table></figure></div><p>对place_id进行统计</p><p>布尔索引<code>place_count[place_count &gt; 3]</code></p>]]></content>
    
    
    <summary type="html">机器学习中基于Sklearn库的部分算法实现</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="机器学习" scheme="http://example.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="Sklearn" scheme="http://example.com/tags/Sklearn/"/>
    
  </entry>
  
  <entry>
    <title>Opencv-python</title>
    <link href="http://example.com/2023/03/14/Opencv-python/"/>
    <id>http://example.com/2023/03/14/Opencv-python/</id>
    <published>2023-03-14T13:14:11.000Z</published>
    <updated>2023-04-09T02:58:49.221Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://github.com/CGC12123/opencv_learn/tree/master/learn_demo" >点击此处访问github仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h1 id="图像读取和保存"><a href="#图像读取和保存" class="headerlink" title="图像读取和保存"></a>图像读取和保存</h1><h2 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h2><p><code>img = cv2.imread(&quot;参数一&quot;, 参数二)</code></p><blockquote><p>参数一为读取的图像地址，参数二为读取的方式<br>1为默认，以彩色模式读取<br>0为灰度加载<br>-1为以alpha通道加载  </p></blockquote><h2 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h2><p><code>cv2.imwrite(&quot;参数一&quot;, 参数二)</code></p><blockquote><p>参数一为保存的位置以文件名<br>参数二为保存的图像</p></blockquote><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><h2 id="以cv2输出"><a href="#以cv2输出" class="headerlink" title="以cv2输出"></a>以<code>cv2</code>输出</h2><p><code>cv2.imshow(&quot;1&quot;,img)</code><br><code>cv2.waitKey(0)</code><br><code>cv2.destroyAllWindows()</code></p><h2 id="以plt输出"><a href="#以plt输出" class="headerlink" title="以plt输出"></a>以<code>plt</code>输出</h2><p><code>plt.imshow(img[:,:,::-1])</code><br><code>plt.show()</code></p><hr><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="视频读取"><a href="#视频读取" class="headerlink" title="视频读取"></a>视频读取</h2><p><code>cap = cv2.VideoCapture(0)</code></p><blockquote><p>VideoCapture()中参数是0，表示打开笔记本的内置摄像头<br>参数是视频文件路径则打开视频<br>如<code>cap = cv2.VideoCapture(“../test.avi”)</code></p></blockquote><h2 id="视频属性修改"><a href="#视频属性修改" class="headerlink" title="视频属性修改"></a>视频属性修改</h2><p><code>cap.set(propId，value)</code></p><blockquote><p>propId: 从0到18的数字，每个数字表示视频的属性<br><a href=""><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/opencv-python/video_attribute.png"                      alt="视频属性" title="Shiprock"                ></a></p></blockquote><hr><h1 id="算数操作"><a href="#算数操作" class="headerlink" title="算数操作"></a>算数操作</h1><h2 id="相加"><a href="#相加" class="headerlink" title="相加"></a>相加</h2><p><code>img = cv2.add(rain, view) </code><a href="">像素相同才可相加</a></p><h2 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h2><p><code>img = cv2.addWeighted(view, 0.7, rain, 0.3, 0)</code><a href="">按照7：3进行混合，最后的参数为伽马值，作为图像的补充</a></p><hr><h1 id="像素点的获取与修改"><a href="#像素点的获取与修改" class="headerlink" title="像素点的获取与修改"></a>像素点的获取与修改</h1><h2 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h2><p><code>img[100,100])</code><a href="">获取（100，100）处像素点的值</a></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p><code>img[100,100] = (0,0,255)</code><a href="">修改（100，100）处的像素值为（0，0，255）</a></p><h2 id="像素层的拆分与合并"><a href="#像素层的拆分与合并" class="headerlink" title="像素层的拆分与合并"></a>像素层的拆分与合并</h2><p><code>b,g,r = cv2.split(img)</code><a href="">拆分bgr</a><br><code>cv2.merge((b,g,r))</code><a href="">合并bgr</a></p><hr><h1 id="图像绘制"><a href="#图像绘制" class="headerlink" title="图像绘制"></a>图像绘制</h1><p><code>cv2.line(img, (0,0), (511, 511), (255, 0, 0), 5)</code><a href="">直线</a><br><code>cv2.circle(img, (256, 256), 60, (50, 50,150), 3)</code><a href="">圆形</a><br><code>cv2.rectangle(img, (100, 100), (400, 400), (100, 100, 70), 4)</code><a href="">矩形</a><br><code>cv2.putText(img, &quot;loloo&quot;, (160, 480), cv2.FONT_HERSHEY_SIMPLEX, 3, (40,20,100), 3)</code><a href="">文字</a></p><hr><h1 id="图像操作"><a href="#图像操作" class="headerlink" title="图像操作"></a>图像操作</h1><h2 id="图像缩放"><a href="#图像缩放" class="headerlink" title="图像缩放"></a>图像缩放</h2><p><code>cv2.resize()</code></p><h2 id="图像平移"><a href="#图像平移" class="headerlink" title="图像平移"></a>图像平移</h2><p><code>M = np.float32([[1,0,100],[0,1,50]])</code><a href="">#平移矩阵，(先列后行?)，即x方向移动100，y方向移动50</a><br><code>cv2.warpAffine(img, M, (2*cols, 2*rows))</code>#<a href="">第三个元素为结果图像的尺寸，先列后行，表现为先增行再增列</a></p><h2 id="图像旋转"><a href="#图像旋转" class="headerlink" title="图像旋转"></a>图像旋转</h2><p><code>M = cv2.getRotationMatrix2D((cols/2, rows/2),90,1)</code><a href="">制造旋转矩阵</a><br><code>cv2.warpAffine(img,M,(cols,rows))</code><a href="">利用“类平移”使其与原图像进行矩阵乘法</a>  </p><h2 id="仿射变换"><a href="#仿射变换" class="headerlink" title="仿射变换"></a>仿射变换</h2><p><code>pts1 = np.float32([[50,50],[200,50],[50,200]])</code><a href="">#原图像中选取三个点</a><br><code>pts2 = np.float32([[100,100],[200,50],[100,250]])</code><a href="">对应到仿射变换后的三个点</a><br><code>M = cv2.getAffineTransform(pts1, pts2)</code><a href="">构造出仿射的变换矩阵</a><br><code>cv2.warpAffine(img,M,(cols,rows))</code></p><h2 id="透射变换"><a href="#透射变换" class="headerlink" title="透射变换"></a>透射变换</h2><p><code>pst1 = np.float32([[56,65],[368,95],[28,387],[389,390]])</code><br><code>pst2 = np.float32([[100,145],[300,100],[80,290],[310,300]])</code><br><code>T = cv2.getPerspectiveTransform(pst1,pst2)</code><br><code>res = cv2.warpPerspective(img, T, (cols, rows))</code></p><h2 id="图像金字塔"><a href="#图像金字塔" class="headerlink" title="图像金字塔"></a>图像金字塔</h2><h2 id="下采样"><a href="#下采样" class="headerlink" title="下采样"></a>下采样</h2><p><code>cv2.pyrDown(img)</code></p><h2 id="上采样"><a href="#上采样" class="headerlink" title="上采样"></a>上采样</h2><p><code>cv2.pyrUp(img)</code></p><hr><h1 id="形态学操作"><a href="#形态学操作" class="headerlink" title="形态学操作"></a>形态学操作</h1><h2 id="腐蚀"><a href="#腐蚀" class="headerlink" title="腐蚀"></a>腐蚀</h2><blockquote><p>用于消除目标边界点，使目标缩小，消除小于结构元素的噪声点  </p></blockquote><p><code>kernel = np.ones((5,5), np.uint8, iterations = 1)</code><a href="">创建5*5的卷积核用于操作</a>  </p><blockquote><p>参数三iterations为模糊程度（腐蚀次数），其值越高，腐蚀程度越大</p></blockquote><p><code>img1 = cv2.erode(img, kernel)</code><a href="">腐蚀</a></p><h2 id="膨胀"><a href="#膨胀" class="headerlink" title="膨胀"></a>膨胀</h2><blockquote><p>用于讲与物体接触到的所欲背景点合并到物体中，使目标增大，可填补目标中的孔洞  </p></blockquote><p><code>kernel = np.ones((5,5), np.uint8, iterations = 1)</code><a href="">创建5*5的卷积核用于操作</a>  </p><blockquote><p>参数三iterations为膨胀程度（膨胀次数），其值越高，膨胀程度越大</p></blockquote><p><code>img2 = cv2.dilate(img, kernel)</code><a href="">膨胀</a></p><h2 id="开运算"><a href="#开运算" class="headerlink" title="开运算"></a>开运算</h2><blockquote><p>先腐蚀后膨胀，用于分离物体，消除小区域<br>消除噪点，去除小干扰块，而不影响原来的图像  </p></blockquote><p><code>kernel = np.ones((10, 10), np.uint8)</code><br><code>cvopen = cv2.morphologyEx(img, cv2.MORPH_OPEN,kernel)</code></p><h2 id="闭运算"><a href="#闭运算" class="headerlink" title="闭运算"></a>闭运算</h2><blockquote><p>先膨胀后腐蚀，用于消除闭合物体里的孔洞<br>可以填补闭合区域  </p></blockquote><p><code>kernel = np.ones((10, 10), np.uint8)</code><br><code>cvclose = cv2.morphologyEx(img, cv2.MORPH_CLOSE,kernel)</code></p><h2 id="礼帽运算"><a href="#礼帽运算" class="headerlink" title="礼帽运算"></a>礼帽运算</h2><blockquote><p>原图像和开运算结果图的差<br>用来分离一些比临近点亮一些的斑块<br>当一副图像具有大幅的背景而微笑物品比较有规律时，用礼帽进行背景提取  </p></blockquote><p><code>kernel = np.ones((10, 10), np.uint8)</code><br><code>cvopen = cv2.morphologyEx(img, cv2.MORPH_TOPHAT,kernel)</code></p><h2 id="黑帽运算"><a href="#黑帽运算" class="headerlink" title="黑帽运算"></a>黑帽运算</h2><blockquote><p>闭运算结果图和原图像的差<br>用来分离比临近点暗一些的斑块<br>突出比原图轮廓周围更暗的区域<br>于选择的核的大小有关  </p></blockquote><p><code>kernel = np.ones((10, 10), np.uint8)</code><br><code>cvopen = cv2.morphologyEx(img, cv2.MORPH_BLACKHAT,kernel)</code> </p><hr><h1 id="图像噪声"><a href="#图像噪声" class="headerlink" title="图像噪声"></a>图像噪声</h1><h2 id="椒盐噪声（脉冲噪声）"><a href="#椒盐噪声（脉冲噪声）" class="headerlink" title="椒盐噪声（脉冲噪声）"></a>椒盐噪声（脉冲噪声）</h2><blockquote><p>随机出现的白点或黑点<br>可能为讯号收到的强烈干扰而产生的  </p></blockquote><h2 id="高斯噪声"><a href="#高斯噪声" class="headerlink" title="高斯噪声"></a>高斯噪声</h2><blockquote><p>噪声密度函数服从高斯分布<br><a href=""><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/opencv-python/gaosizaosheng.jpg"                      alt="高斯噪声密度函数" title="Shiprock"                ></a><br>易于清除</p></blockquote><hr><h1 id="图像平滑"><a href="#图像平滑" class="headerlink" title="图像平滑"></a>图像平滑</h1><h2 id="均值滤波"><a href="#均值滤波" class="headerlink" title="均值滤波"></a>均值滤波</h2><blockquote><p>算法简单，计算速度块，但去噪的用时去除了部分细节，将图像变得模糊  </p></blockquote><p><code>img2 = cv2.blur(img,(5,5)) </code></p><h2 id="高斯滤波"><a href="#高斯滤波" class="headerlink" title="高斯滤波"></a>高斯滤波</h2><p><code>img2 = cv2.GaussianBlur(img, (3,3), 1)</code>  </p><blockquote><p>参数二为高斯卷积核的大小，应均为奇数且可以不同<br>参数三为水平方向标准差<br>可有参数四，为竖直方向标准差，默认值为0，<br>可有参数五，为填充边界类型  </p></blockquote><h2 id="中值滤波"><a href="#中值滤波" class="headerlink" title="中值滤波"></a>中值滤波</h2><blockquote><p>不依赖于邻域内于典型值差别很大的值，对椒盐噪声尤其有用  </p></blockquote><p><code>img2 = cv2.medianBlur(img, 5)</code>  </p><blockquote><p>参数二为核的大小</p></blockquote><hr><h1 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h1><h2 id="直方图绘制"><a href="#直方图绘制" class="headerlink" title="直方图绘制"></a>直方图绘制</h2><p><code>hist = cv2.calcHist([img], [0], None, [256], [0,256])</code><br><code>plt.figure(figsize=(10,10))</code>  </p><blockquote><p>参数二代表传入的图像类型<br>对于灰度图<code>[0]</code>为默认值<br>对于彩色图<code>[0]</code>为B <code>[1]</code>为G <code>[2]</code>为R<br>参数三为掩模图像，设置为None为整幅图<br>参数四为BIN数目<br>参数五为像素值范围</p></blockquote><h2 id="掩膜应用"><a href="#掩膜应用" class="headerlink" title="掩膜应用"></a>掩膜应用</h2><p><code>mask = np.zeros(img.shape[:2],np.uint8())</code><a href="">创建掩膜</a> <br><code>mask[100:250,100:400] = 1</code> <a href="">设置感兴趣区域</a></p><p><code>mask_img = cv2.bitwise_and(img,img,mask = mask)</code><a href="">将掩膜与图像混合</a></p><h2 id="直方图均衡化"><a href="#直方图均衡化" class="headerlink" title="直方图均衡化"></a>直方图均衡化</h2><blockquote><p>将灰度直方图进行拉伸<br>可提高图像对比度，在曝光过度或不足时可以更好的突出细节<br><code>dst = cv2.equalizeHist(img)</code></p></blockquote><h2 id="自适应直方图均衡化"><a href="#自适应直方图均衡化" class="headerlink" title="自适应直方图均衡化"></a>自适应直方图均衡化</h2><blockquote><p>将整幅图像分成小块，分别进行直方图均衡化，若直方图中bin超过对比度上限，就将其中像素点均匀分散到其他bins中，然后再进行直方图均衡化<br>最后使用双线性差值，对每一小块进行拼接，可去除小块间的边界</p></blockquote><p><code>cl = cv2.createCLAHE(2.0, (8,8))</code> <a href="">对比度阈值2.0，分成8*8</a><br><code>clahe = cl.apply(img)</code><a href="">将其应用到图像上</a></p><hr><h1 id="边缘检测"><a href="#边缘检测" class="headerlink" title="边缘检测"></a>边缘检测</h1><h2 id="Sobel算子"><a href="#Sobel算子" class="headerlink" title="Sobel算子"></a>Sobel算子</h2><blockquote><p>利用搜索的方法获取边界（一阶导数为最大值）<br>效率高于canny边缘检测，但准确度不如canny<br>其抗噪声能力强，用途较多</p></blockquote><p><code>x = cv2.Sobel(img, cv2.CV_16S, 1, 0)</code><a href="">边缘检测</a><br><code>y = cv2.Sobel(img, cv2.CV_16S, 0, 1)</code><a href="">边缘检测</a>\</p><blockquote><p>参数二为图像的深度<br>参数三、四分别为对x，y上的求导，1为对该方向求导，0为不导<br>可有参数五表示Sobel算子大小（卷积核大小），必须为奇数1，3，5，7，默认为3</p></blockquote><p><code>absx = cv2.convertScaleAbs(x)</code><a href="">格式转化</a><br><code>absy = cv2.convertScaleAbs(y)</code><a href="">格式转化</a></p><p><code>res = cv2.addWeighted(absx, 0.5, absy, 0.5, 0)</code><a href="">图像混合</a></p><h2 id="Laplacian算子"><a href="#Laplacian算子" class="headerlink" title="Laplacian算子"></a>Laplacian算子</h2><blockquote><p>利用零穿越的方式获取边界（二阶导数为0）  </p></blockquote><p><code>res = cv2.Laplacian(img, cv2.CV_16S)</code><a href="">边缘检测</a><br><code>res = cv2.convertScaleAbs(res)</code><a href="">图像混合</a></p><h2 id="Canny边缘检测"><a href="#Canny边缘检测" class="headerlink" title="Canny边缘检测"></a>Canny边缘检测</h2><p><code>res = cv2.Canny(img, 0, 100)</code>  </p><blockquote><p>参数二、三分别为两个阈值，二为较小的阈值，三为较大的阈值<br>流程：<br>噪声去除：高斯滤波<br>计算图像梯度：sobel算子，计算梯度大小及方向<br>非极大值抑制：利用梯度方向判断当前像素是否为边界点<br>滞后阈值：设置两个阈值，确定最终边界</p></blockquote><hr><h1 id="模板匹配"><a href="#模板匹配" class="headerlink" title="模板匹配"></a>模板匹配</h1><p><code>res = cv2.matchTemplate(img, temp, cv2.TM_CCORR)</code></p><blockquote><p>参数三为匹配的算法 有：<br>平方查匹配(cv2.TM_SQDIFF)<br>相关匹配(cv2.TM_CCORR<br>利用相关系数匹配(cv2.TM_CCOEFF)</p></blockquote><p><code>min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(res)</code><br><code>top_left = max_loc</code><a href="">左上角</a><br><code>h,w = temp.shape[:2]</code><br><code>bottom_right = (top_left[0] + w, top_left[1] + h)</code><a href="">右下角</a></p><p><code>cv2.rectangle(img, top_left, bottom_right, (0,255,0), 2)</code><a href="">画矩形框</a></p><hr><h1 id="霍夫变换"><a href="#霍夫变换" class="headerlink" title="霍夫变换"></a>霍夫变换</h1><h2 id="霍夫线检测"><a href="#霍夫线检测" class="headerlink" title="霍夫线检测"></a>霍夫线检测</h2><blockquote><p>调用霍夫变换前硬先进行二值化或者进行Canny边缘检测</p></blockquote><p><code>edges = cv2.Canny(img, 50, 150)</code><a href="">Canny边缘检测</a></p><p><code>lines = cv2.HoughLines(edges, 0.8, np.pi/180, 150)</code></p><blockquote><p>参数二、三为ρ和θ的精确度<br>参数四为阈值，在累加器中高于该值才被认定为直线</p></blockquote><p><code>for line in lines:</code><br><code>rho,theta = line[0]</code><br><code>a = np.cos(theta)</code><br><code>b = np.sin(theta)</code><br><code>x0 = rho * a</code><br><code>y0 = rho * b</code><br><code>x1 = int (x0 + 1000*(-b))</code><br><code>y1 = int (y0 + 1000*a)</code><br><code>x2 = int (x0 - 1000*(-b))</code><br><code>y2 = int (y0 - 1000*a)</code><br><code>cv.line(img, (x1, y1), (x2, y2), (50, 250, 50))</code><a href="">画出对应直线</a></p><h2 id="霍夫圆检测"><a href="#霍夫圆检测" class="headerlink" title="霍夫圆检测"></a>霍夫圆检测</h2><blockquote><p>由于霍夫圆检测对噪声比较敏感，所以首先对图像进行中值滤波</p></blockquote><p><code>img = cv.medianBlur(gay_img, 7)</code><a href="">中值滤波</a></p><p><code>circles = cv.HoughCircles(image, method, dp, minDist, param1=100, param2=100, minRadius=0,maxRadius=0 )</code></p><blockquote><p>method：使用霍夫变换圆检测的算法，它的参数是CV_HOUGH_GRADIENT<br>dp：霍夫空间的分辨率，dp&#x3D;1时表示霍夫空间与输入图像空间的大小一致，dp&#x3D;2时霍夫空间是输入图像空间的一半，以此类推<br>minDist为圆心之间的最小距离，如果检测到的两个圆心之间距离小于该值，则认为它们是同一个圆心<br>param1：边缘检测时使用Canny算子的高阈值，低阈值是高阈值的一半。<br>param2：检测圆心和确定半径时所共有的阈值<br>minRadius和maxRadius为所检测到的圆半径的最小值和最大值\</p></blockquote><hr><h1 id="特征提取"><a href="#特征提取" class="headerlink" title="特征提取"></a>特征提取</h1><h2 id="Harris角点检测"><a href="#Harris角点检测" class="headerlink" title="Harris角点检测"></a>Harris角点检测</h2><p><code>dst=cv2.cornerHarris(src, blockSize, ksize, k)</code></p><blockquote><p>img：数据类型为 ﬂoat32 的输入图像。<br>blockSize：角点检测中要考虑的邻域大小。<br>ksize：sobel求导使用的核大小<br>k ：角点检测方程中的自由参数，取值参数为 [0.04，0.06]</p></blockquote><blockquote><p>优缺点：</p></blockquote><blockquote><p>优点：<br>旋转不变性，椭圆转过一定角度但是其形状保持不变（特征值保持不变）<br>对于图像灰度的仿射变化具有部分的不变性，由于仅仅使用了图像的一介导数，对于图像灰度平移变化不变；对于图像灰度尺度变化不变</p></blockquote><blockquote><p>缺点：<br>对尺度很敏感，不具备几何尺度不变性。<br>提取的角点是像素级的</p></blockquote><h2 id="Shi-Tomas角点检测"><a href="#Shi-Tomas角点检测" class="headerlink" title="Shi-Tomas角点检测"></a>Shi-Tomas角点检测</h2><blockquote><p>Corners: 搜索到的角点，在这里所有低于质量水平的角点被排除掉，然后把合格的角点按质量排序，然后将质量较好的角点附近（小于最小欧式距离）的角点删掉，最后找到maxCorners个角点返回。</p></blockquote><blockquote><p>具有旋转不变性，但不具备几何尺度不变性</p></blockquote><p><code>corners = cv2.goodFeaturesToTrack ( image, maxcorners, qualityLevel, minDistance )</code></p><blockquote><p>Image: 输入灰度图像<br>maxCorners : 获取角点数的数目。<br>qualityLevel：该参数指出最低可接受的角点质量水平，在0-1之间。<br>minDistance：角点之间最小的欧式距离，避免得到相邻特征点。</p></blockquote><h2 id="尺度不变特征转换-gt-SIFT算法"><a href="#尺度不变特征转换-gt-SIFT算法" class="headerlink" title="尺度不变特征转换-&gt;SIFT算法"></a>尺度不变特征转换-&gt;SIFT算法</h2><blockquote><p>在不同的尺度空间上查找关键点(特征点)，并计算出关键点的方向。SIFT所查找到的关键点是一些十分突出，不会因光照，仿射变换和噪音等因素而变化的点，如角点、边缘点、暗区的亮点及亮区的暗点等。</p></blockquote><blockquote><p>可具有尺度不变性和旋转不变性</p></blockquote><p><code>sift = cv.xfeatures2d.SIFT_create()</code><br><code>kp,des = sift.detectAndCompute(gray,None)</code><br><code>cv.drawKeypoints(image, keypoints, outputimage, color, flags)</code></p><blockquote><p>image: 原始图像<br>keypoints：关键点信息，将其绘制在图像上<br>outputimage：输出图片，可以是原始图像<br>color：颜色设置，通过修改（b,g,r）的值,更改画笔的颜色，b&#x3D;蓝色，g&#x3D;绿色，r&#x3D;红色。<br>flags：绘图功能的标识设置<br>cv2.DRAW_MATCHES_FLAGS_DEFAULT：创建输出图像矩阵，使用现存的输出图像绘制匹配对和特征点，对每一个关键点只绘制中间点<br>cv2.DRAW_MATCHES_FLAGS_DRAW_OVER_OUTIMG：不创建输出图像矩阵，而是在输出图像上绘制匹配对<br>cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS：对每一个特征点绘制带大小和方向的关键点图形<br>cv2.DRAW_MATCHES_FLAGS_NOT_DRAW_SINGLE_POINTS：单点的特征点不被绘制</p></blockquote><h2 id="SIFT算法的增强版-gt-SIFT算法"><a href="#SIFT算法的增强版-gt-SIFT算法" class="headerlink" title="SIFT算法的增强版-&gt;SIFT算法"></a>SIFT算法的增强版-&gt;SIFT算法</h2><blockquote><p>计算量小，运算速度快，提取的特征与SIFT几乎相同</p></blockquote><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><code>mask = cv2.inRange(image,low,high)</code></p><blockquote><p>设置阈值去除背景，高于或低于对应阈值图象值变为0</p></blockquote><p><code>cnts = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)[-2]</code></p><blockquote><p>用于搜索轮廓</p></blockquote><blockquote><p>参数二表示轮廓的检索模式，有四种：<br>    cv2.RETR_EXTERNAL表示只检测外轮廓<br>    cv2.RETR_LIST检测的轮廓不建立等级关系<br>    cv2.RETR_CCOMP建立两个等级的轮廓，上面的一层为外边界，里面的一层为内孔的边界信息。如果内孔内还有一个连通物体，这个物体的边界也在顶层。<br>    cv2.RETR_TREE建立一个等级树结构的轮廓。\</p></blockquote><blockquote><p>参数三method为轮廓的近似办法<br>    cv2.CHAIN_APPROX_NONE存储所有的轮廓点，相邻的两个点的像素位置差不超过1，即max（abs（x1-x2），abs（y2-y1））&#x3D;&#x3D;1<br>    cv2.CHAIN_APPROX_SIMPLE压缩水平方向，垂直方向，对角线方向的元素，只保留该方向的终点坐标，例如一个矩形轮廓只需4个点来保存轮廓信息<br>    cv2.CHAIN_APPROX_TC89_L1，CV_CHAIN_APPROX_TC89_KCOS使用teh-Chinl chain 近似算法</p></blockquote><p><code>for c in range(len(contours)):</code><br><code>area = cv2.contourArea(contours[c])</code></p><blockquote><p>使用格林公式计算轮廓内面积面积</p></blockquote><p><code>for c in range(len(contours)):</code><br><code>arclen = cv2.arcLength(contours[c], True)</code></p><blockquote><p>计算周长</p></blockquote><p><code>rect = cv2.minAreaRect(are_max)</code></p><blockquote><p>cv2.findContours()找轮廓函数返回轮廓数组后，绘制每个轮廓的最小外接矩形的方法</p></blockquote><blockquote><p>返回的是一个叫Box2D 结构,如<code>((81.0,288),(22.0,10.0),-0.0)</code>\其表示的意义是（中心点坐标，（宽度，高度）,旋转的角度）</p></blockquote><p><code>box = cv2.boxPoints(rect)</code></p><blockquote><p>获取矩形的四个顶点坐标</p></blockquote><p><code>cv2.drawContours(image, [np.int0(box)], -1, (0, 255, 255), 2)</code></p><blockquote><p>轮廓绘制</p></blockquote><blockquote><p>第一个参数是指明在哪幅图像上绘制轮廓；image为三通道才能显示轮廓</p></blockquote><blockquote><p>第二个参数是轮廓本身，在Python中是一个list</p></blockquote><blockquote><p>第三个参数指定绘制轮廓list中的哪条轮廓，如果是-1，则绘制其中的所有轮廓。后面的参数很简单。其中thickness表明轮廓线的宽度，如果是-1（cv2.FILLED），则为填充模式</p></blockquote><p><code>imgHSV = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)</code></p><blockquote><p>将图像从一种颜色空间转换为另一种颜色空间<br><a href=""><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/opencv-python/diff_picture.png"                      alt="四种色彩空间" title="Shiprock"                ></a> </p></blockquote>]]></content>
    
    
    <summary type="html">Opencv-Python常用api</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机视觉" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    <category term="Opencv" scheme="http://example.com/tags/Opencv/"/>
    
  </entry>
  
</feed>
