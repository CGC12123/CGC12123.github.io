<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-25T12:51:38.215Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>D435-Yolo</title>
    <link href="http://example.com/2023/10/25/d435/"/>
    <id>http://example.com/2023/10/25/d435/</id>
    <published>2023-10-25T12:44:39.000Z</published>
    <updated>2023-10-25T12:51:38.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相机基础使用"><a href="#相机基础使用" class="headerlink" title="相机基础使用"></a>相机基础使用</h2><h3 id="配置RealSense深度相机"><a href="#配置RealSense深度相机" class="headerlink" title="配置RealSense深度相机"></a>配置RealSense深度相机</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置RealSense深度相机</span></span><br><span class="line">pipeline = rs.pipeline()</span><br><span class="line">config = rs.config()</span><br><span class="line">config.enable_stream(rs.stream.depth, <span class="number">640</span>, <span class="number">480</span>, rs.<span class="built_in">format</span>.z16, <span class="number">30</span>)</span><br><span class="line">config.enable_stream(rs.stream.color, <span class="number">640</span>, <span class="number">480</span>, rs.<span class="built_in">format</span>.rgb8, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动深度和RGB流</span></span><br><span class="line">pipeline.start(config)</span><br></pre></td></tr></table></figure></div><h3 id="获取RGB图像和深度图像"><a href="#获取RGB图像和深度图像" class="headerlink" title="获取RGB图像和深度图像"></a>获取RGB图像和深度图像</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 等待帧</span></span><br><span class="line">frames = pipeline.wait_for_frames()</span><br><span class="line">depth_frame = frames.get_depth_frame()</span><br><span class="line">color_frame = frames.get_color_frame()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将深度图像和RGB图像转换为numpy数组</span></span><br><span class="line">depth_image = np.asanyarray(depth_frame.get_data())</span><br><span class="line">color_image = np.asanyarray(color_frame.get_data())</span><br><span class="line"><span class="comment"># 转化图像空间</span></span><br><span class="line">color_image = cv2.cvtColor(color_image, cv2.COLOR_BGR2RGB)</span><br></pre></td></tr></table></figure></div><h3 id="输出图像"><a href="#输出图像" class="headerlink" title="输出图像"></a>输出图像</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出图像</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;color_image&quot;</span>, color_image)</span><br><span class="line">cv2.imshow(<span class="string">&quot;depth_image&quot;</span>, depth_image)</span><br><span class="line">cv2.waitKey(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></div><h2 id="D435-Yolov5"><a href="#D435-Yolov5" class="headerlink" title="D435+Yolov5"></a>D435+Yolov5</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">import cv2</span><br><span class="line">from loguru import logger</span><br><span class="line">import numpy as np</span><br><span class="line">from pyzbar import pyzbar</span><br><span class="line">import pyrealsense2 as rs</span><br><span class="line">import pytesseract</span><br><span class="line">import torch</span><br><span class="line">import sys </span><br><span class="line">import json</span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line">def detect_obj_yolov5(depth_image, color_image, detect_target: str = None, model = None, show = 0):</span><br><span class="line">    if model is not None:</span><br><span class="line">        results = model(color_image)</span><br><span class="line">        # 将结果转为json数据</span><br><span class="line">        json_data = results.pandas().xyxy[0].to_json(orient=&quot;records&quot;)</span><br><span class="line">        # 解析 JSON 数据</span><br><span class="line">        target_x = 0</span><br><span class="line">        target_y = 0</span><br><span class="line">        depth = 0</span><br><span class="line">        try:</span><br><span class="line">            data = json.loads(json_data)</span><br><span class="line">            for d in data:</span><br><span class="line">                # 匹配目标</span><br><span class="line">                if d.get(&#x27;name&#x27;) == detect_target and all(key in d for key in (&#x27;xmin&#x27;, &#x27;xmax&#x27;, &#x27;ymin&#x27;, &#x27;ymax&#x27;)):</span><br><span class="line">                    target_x = int((d[&#x27;xmin&#x27;] + d[&#x27;xmax&#x27;]) / 2)</span><br><span class="line">                    target_y = int((d[&#x27;ymin&#x27;] + d[&#x27;ymax&#x27;]) / 2)</span><br><span class="line">                    color_image = results.render()[0]</span><br><span class="line">                    depth = depth_image[target_y, target_x]</span><br><span class="line">                    break</span><br><span class="line">                else:</span><br><span class="line">                    target_x = 0</span><br><span class="line">                    target_y = 0</span><br><span class="line">                    depth = 0</span><br><span class="line">        except:</span><br><span class="line">            target_x = 0</span><br><span class="line">            target_y = 0</span><br><span class="line">            depth = 0</span><br><span class="line">        logger.info(&#x27;&#123;&#125;, &#123;&#125;, depth: &#123;&#125;&#x27;.format(int(target_x), int(target_y), depth))</span><br><span class="line"></span><br><span class="line">    if show:</span><br><span class="line">        cv2.imshow(&quot;detect_obj_yolov5&quot;, color_image)</span><br><span class="line">        cv2.waitKey(1)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    path1 = &#x27;/home/c/Library/Cv_for_Orinnano/detection_module&#x27;</span><br><span class="line">    path2 = &#x27;/home/c/Library/Cv_for_Orinnano/detection_module/models/yolov5n.pt&#x27;</span><br><span class="line">    # model_land = torch.hub.load(path1, &#x27;custom&#x27;, path2_land, source=&#x27;local&#x27;, device = 0, force_reload = True) # 不用的话注释掉提高启动效率</span><br><span class="line">    model = torch.hub.load(path1, &#x27;custom&#x27;, path2, source=&#x27;local&#x27;, device = 0, force_reload = True) # 不用的话注释掉提高启动效率</span><br><span class="line">    </span><br><span class="line">    # 配置RealSense深度相机</span><br><span class="line">    pipeline = rs.pipeline()</span><br><span class="line">    config = rs.config()</span><br><span class="line">    config.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)</span><br><span class="line">    config.enable_stream(rs.stream.color, 640, 480, rs.format.rgb8, 30)</span><br><span class="line"></span><br><span class="line">    # 启动深度和RGB流</span><br><span class="line">    pipeline.start(config)</span><br><span class="line"></span><br><span class="line">    while True:</span><br><span class="line">        # 等待帧</span><br><span class="line">        frames = pipeline.wait_for_frames()</span><br><span class="line">        depth_frame = frames.get_depth_frame()</span><br><span class="line">        color_frame = frames.get_color_frame()</span><br><span class="line">        </span><br><span class="line">        # 将深度图像和RGB图像转换为numpy数组</span><br><span class="line">        depth_image = np.asanyarray(depth_frame.get_data())</span><br><span class="line">        color_image = np.asanyarray(color_frame.get_data())</span><br><span class="line">        # 转化图像空间</span><br><span class="line">        color_image = cv2.cvtColor(color_image, cv2.COLOR_BGR2RGB)</span><br><span class="line"></span><br><span class="line">        detect_obj_yolov5(depth_image, color_image, detect_target = &#x27;person&#x27;, model = model, show = 1)</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">基于Jetson平台，使用D435获取图像深度信息</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="双目相机" scheme="http://example.com/tags/%E5%8F%8C%E7%9B%AE%E7%9B%B8%E6%9C%BA/"/>
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="yolo" scheme="http://example.com/tags/yolo/"/>
    
    <category term="D435" scheme="http://example.com/tags/D435/"/>
    
  </entry>
  
  <entry>
    <title>Pyside6多线程</title>
    <link href="http://example.com/2023/10/19/Pyside6%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://example.com/2023/10/19/Pyside6%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2023-10-19T07:09:39.000Z</published>
    <updated>2023-10-19T07:37:29.390Z</updated>
    
    <content type="html"><![CDATA[<h2 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h2><ul><li>进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位，当用户启动一个进程时，操作系统就会为该进程分配一个独立的内存空间，让应用程序在独立内存中运行</li><li>线程是一个轻负荷的子进程，是最小的处理单元。线程被包含在进程之中，是进程中的实际运作单位。一个进程可以并发多个线程，每条线程同时执行不同的任务，<em>线程是独立的，一个线程发生错误，不影响其他线程正常执行。</em></li></ul><h2 id="多线程实现"><a href="#多线程实现" class="headerlink" title="多线程实现"></a>多线程实现</h2><h3 id="界面类文件"><a href="#界面类文件" class="headerlink" title="界面类文件"></a>界面类文件</h3><p>界面文件有 <code>.ui</code> 文件生成，无需进行修改，在逻辑类文件中继承并进行逻辑修改即可</p><h3 id="线程类文件"><a href="#线程类文件" class="headerlink" title="线程类文件"></a>线程类文件</h3><p>根据任务需求编写线程类文件，其构造大致如下</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QThread, Signal</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DetectionThread</span>(<span class="title class_ inherited__">QThread</span>):</span><br><span class="line">    <span class="comment">#自定义信号声明</span></span><br><span class="line">    graph_signal = Signal(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, temp = <span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self._running = <span class="literal">True</span></span><br><span class="line">        self.temp = temp</span><br><span class="line"></span><br><span class="line">    <span class="comment">#run函数是子线程中的操作，线程启动后开始执行</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> self._running:</span><br><span class="line">            <span class="built_in">print</span>(self.temp)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        self._running = <span class="literal">False</span></span><br></pre></td></tr></table></figure></div><blockquote><p>其中的<code>graph_signal = Signal(str)</code>为自定义信号的声明 str可以更换为要传递的任何信号类别<br><code>run()</code>为线程的执行函数，线程开始后讲执行该函数</p></blockquote><h3 id="逻辑类文件"><a href="#逻辑类文件" class="headerlink" title="逻辑类文件"></a>逻辑类文件</h3><p>一个简易的结构如下所示</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication</span><br><span class="line"></span><br><span class="line"><span class="comment"># 引入UI文件与线程文件</span></span><br><span class="line"><span class="keyword">from</span> main_window_ui <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"><span class="keyword">from</span> thread.thread <span class="keyword">import</span> DetectionThread</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(QMainWindow, Ui_MainWindow):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.bind_shots()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_thread</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 线程开启</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Tread Start!&quot;</span>)</span><br><span class="line">        self.detection_thread = DetectionThread() <span class="comment"># 实例化线程类</span></span><br><span class="line">        self.detection_thread.oringraph.connect(self.Work) <span class="comment"># 将线程中的信号与Work函数进行连接</span></span><br><span class="line">        self.detection_thread.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Work</span>(<span class="params">self, msg</span>):</span><br><span class="line">        <span class="built_in">print</span>(msg)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop_thread</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 停止线程</span></span><br><span class="line">        self.detection_thread.terminate()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bind_shots</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 按钮触发</span></span><br><span class="line">        self.start.clicked.connect(self.start_thread) </span><br><span class="line">        self.stop.clicked.connect(self.stop_thread)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">    window = MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    app.exec_()</span><br></pre></td></tr></table></figure></div><blockquote><p>运行后可通过案件触发开启、关闭线程<br>注意，若不做进一步处理，即使在运行后通过界面右上角关闭窗口，线程仍会处以开启状态</p></blockquote>]]></content>
    
    
    <summary type="html">Pyside6多线程实现</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Qt" scheme="http://example.com/tags/Qt/"/>
    
    <category term="多线程" scheme="http://example.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Acfly-T265</title>
    <link href="http://example.com/2023/10/13/Acfly-T265/"/>
    <id>http://example.com/2023/10/13/Acfly-T265/</id>
    <published>2023-10-13T09:14:53.000Z</published>
    <updated>2023-10-13T09:15:40.989Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此为为Jetson配置Intel T265，以此为 Acfly-A9飞控提供定位<br>官方参考教程：<a class="link"   href="https://github.com/IntelRealSense/realsense-ros" >realsense-ros <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>     <a class="link"   href="https://github.com/CGC12123/acfly-mavros" >acfly-mavros <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="ROS-Wrapper"><a href="#ROS-Wrapper" class="headerlink" title="ROS Wrapper"></a>ROS Wrapper</h2><blockquote><p>T265使用所需的packages</p></blockquote><h3 id="安装-ROS"><a href="#安装-ROS" class="headerlink" title="安装 ROS"></a>安装 ROS</h3><blockquote><p>Install <a class="link"   href="http://wiki.ros.org/kinetic/Installation/Ubuntu" >ROS Kinetic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 16.04, <a class="link"   href="http://wiki.ros.org/melodic/Installation/Ubuntu" >ROS Melodic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 18.04, <a class="link"   href="http://wiki.ros.org/noetic/Installation/Ubuntu" >ROS Noetic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 20.04.<br><a class="link"   href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html" >可参考autolabor的安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h3 id="安装realsense2-camera"><a href="#安装realsense2-camera" class="headerlink" title="安装realsense2_camera"></a>安装realsense2_camera</h3><p>realsense2_camera 可作为 ROS 发行版的 debian 软件包使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-$ROS_DISTRO-realsense2-camera</span><br></pre></td></tr></table></figure></div><h2 id="安装mavros"><a href="#安装mavros" class="headerlink" title="安装mavros"></a>安装mavros</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-catkin-tools python-rosinstall-generator -y</span><br><span class="line"># 如果用的ROS版本是Noetic则使用</span><br><span class="line"># sudo apt install python3-catkin-tools python3-rosinstall-generator python3-osrf-pycommon -y</span><br><span class="line"></span><br><span class="line"># 需要替换你的ROS版本，且以下指令需要在同一个终端执行</span><br><span class="line">source /opt/ros/$&#123;你的ROS版本&#125;/setup.bash</span><br><span class="line"></span><br><span class="line"># 因为acfly增加了自定义mavlink信息，若之前有通过二进制安装过mavros则需要卸载，没有则跳过</span><br><span class="line">sudo apt purge ros-$&#123;ROS_DISTRO&#125;-mavlink ros-$&#123;ROS_DISTRO&#125;-mavros</span><br><span class="line"></span><br><span class="line"># 构建ROS工作空间，可以自行修改路径</span><br><span class="line">mkdir -p ~/acfly_ws/src &amp;&amp; cd ~/acfly_ws</span><br><span class="line">catkin init</span><br><span class="line"></span><br><span class="line"># 下载mavlink和acfly-mavros</span><br><span class="line">cd src</span><br><span class="line">git clone -b release/$&#123;ROS_DISTRO&#125;/mavlink/2022.1.5-1 https://gitee.com/LauZanMo/mavlink</span><br><span class="line">git clone -b acfly-develop https://gitee.com/LauZanMo/acfly-mavros</span><br><span class="line"></span><br><span class="line"># 安装依赖，如果rosdep update没执行则需要执行成功才能继续</span><br><span class="line">cd .. &amp;&amp; rosdep install --from-paths src --ignore-src -y</span><br><span class="line"></span><br><span class="line"># 安装GeographicLib:</span><br><span class="line">./src/acfly-mavros/mavros/scripts/install_geographiclib_datasets.sh</span><br><span class="line"># 注意此处可能会报需要root权限（不会标error）出现后在前方加sudo即可</span><br><span class="line"></span><br><span class="line"># 第一次编译请执行acfly提供的脚本</span><br><span class="line">./src/acfly-mavros/update_custom_msg.sh</span><br><span class="line"># 后续更改mavros源码只需要执行catkin build</span><br><span class="line"></span><br><span class="line"># 每一次开启终端都需要设置环境变量</span><br><span class="line">source devel/setup.bash</span><br></pre></td></tr></table></figure></div><h2 id="安装T265及相关包"><a href="#安装T265及相关包" class="headerlink" title="安装T265及相关包"></a>安装T265及相关包</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/acfly_ws/src</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/thien94/vision_to_mavros.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/IntelRealSense/librealsense.git</span><br><span class="line"><span class="built_in">cd</span> ~/acfly_ws &amp;&amp; catkin build</span><br></pre></td></tr></table></figure></div><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 第一个终端</span><br><span class="line"># 打开t265</span><br><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br><span class="line"></span><br><span class="line"># 第二个终端</span><br><span class="line"># 添加权限</span><br><span class="line">sudo chmod 777 /dev/ttyAMA0</span><br><span class="line">roslaunch mavros acfly.launch fcu_url:=/dev/ttyUSB0:57600</span><br><span class="line"></span><br><span class="line"># 第三个终端</span><br><span class="line"># 此处需要先source前一步安装mavros工作空间中的setup.bash</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch vision_to_mavros t265_tf_to_mavros.launch</span><br></pre></td></tr></table></figure></div><p>或者单独写一个launch文件 <code>start_all.launch</code></p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find realsense2_camera)/launch/rs_t265.launch&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find mavros)/launch/acfly.launch&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find vision_to_mavros)/launch/t265_tf_to_mavros.launch&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>将文件放在新的ros包 <code>atart_all</code> 中 执行</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch atart_all start_all.launch</span><br></pre></td></tr></table></figure></div><h2 id="其他-使用指南"><a href="#其他-使用指南" class="headerlink" title="其他 使用指南"></a>其他 使用指南</h2><blockquote><p>acfly-mavros 作者提供了使用指南及二次开发指南<br><a class="link"   href="https://github.com/LauZanMo/acfly-mavros/blob/acfly-develop/acfly-mavros%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.md" >使用指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://github.com/LauZanMo/acfly-mavros/blob/acfly-develop/acfly-mavros%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97.md" >二次开发指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote>]]></content>
    
    
    <summary type="html">基于Jetson平台，搭建Mavros，并配置T265为Acfly飞控提供定位</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="无人机" scheme="http://example.com/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    <category term="双目相机" scheme="http://example.com/tags/%E5%8F%8C%E7%9B%AE%E7%9B%B8%E6%9C%BA/"/>
    
    <category term="T265" scheme="http://example.com/tags/T265/"/>
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络——数据链路层</title>
    <link href="http://example.com/2023/10/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
    <id>http://example.com/2023/10/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</id>
    <published>2023-10-13T09:12:42.000Z</published>
    <updated>2023-10-22T08:40:01.362Z</updated>
    
    <content type="html"><![CDATA[<h2 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h2><p>数据链路层在物理层提供服务的基础上向网络层提供服务，其最基本的服务是将源自网络层的数据可靠地传输到相邻节点的目标机网络层。<br>其主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的物理连接改造曾为逻辑上无差错的数据链路，使之对网络层表现为一条</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>为网络层提供服务。无确认无连接服务，有确认无连接服务，有确认面向连接服务</li><li>链路管理，即连接的建立、维持、释放</li><li>组帧</li><li>流量控制 限制发送方</li><li>差错控制</li></ul><h2 id="封装成帧合透明传输"><a href="#封装成帧合透明传输" class="headerlink" title="封装成帧合透明传输"></a>封装成帧合透明传输</h2><h3 id="封装成帧"><a href="#封装成帧" class="headerlink" title="封装成帧"></a>封装成帧</h3><p>在一段数据的前后部分添加首部合尾部，构成一个帧<br>接收端在收到物理层上交的比特流后，能够根据首部尾部标记，识别帧的开始及结束</p><h4 id="帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始合终止"><a href="#帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始合终止" class="headerlink" title="帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始合终止\"></a>帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始合终止\</h4><h4 id="帧长：帧首部-数据部分-帧尾部"><a href="#帧长：帧首部-数据部分-帧尾部" class="headerlink" title="帧长：帧首部+数据部分+帧尾部"></a>帧长：帧首部+数据部分+帧尾部</h4><blockquote><p>数据部分 $\leq$ 最大传送单元MTU</p></blockquote><h4 id="组帧的四种方法"><a href="#组帧的四种方法" class="headerlink" title="组帧的四种方法"></a>组帧的四种方法</h4><h5 id="字符计数法"><a href="#字符计数法" class="headerlink" title="字符计数法"></a>字符计数法</h5><p>帧首部使用一个计数字段来标明帧内字符数</p><h5 id="字符填充法"><a href="#字符填充法" class="headerlink" title="字符填充法"></a>字符填充法</h5><p>只用 SOH 和 EOT 作为开头和结尾进行传输<br>当传送的帧为非ASCII码的文本组成时，需要采取字符填充实现透明传输<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/zftc.jpg"                                     ></p><h5 id="零比特填充法"><a href="#零比特填充法" class="headerlink" title="零比特填充法"></a>零比特填充法</h5><h3 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h3><p>透明传输是指不管传输的数据是什么样的比特组合，都应当能够在链路上传送</p><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ol><li>在发送端，扫描整个信息字段，只要连续5个1，就立即填入1个0</li><li>在接收端收到一个帧时，先找到标志字段确定便捷，再用硬件对比特流进行扫描。发现连续5个1时就把后面的0删除</li></ol><h5 id="违规编码法"><a href="#违规编码法" class="headerlink" title="违规编码法"></a>违规编码法</h5><p>使用无定义的曼彻斯特编码“高-高”和“低-低”来定帧的起始和终止</p><h2 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h2><h3 id="检错编码"><a href="#检错编码" class="headerlink" title="检错编码"></a>检错编码</h3><h4 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h4><p>有n-1位信息元和1位校验元，在数据的最前面加入校验码</p><ul><li>奇校验码：使得1的个数为奇数</li><li>偶检验码：使得1的个数为偶数<blockquote><p>奇偶校验码智能检查出奇数个比特错误，检错能力为50%</p></blockquote></li></ul><h4 id="循环冗余码CRC"><a href="#循环冗余码CRC" class="headerlink" title="循环冗余码CRC"></a>循环冗余码CRC</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/crc.jpg"                                     ></p><h3 id="纠错编码"><a href="#纠错编码" class="headerlink" title="纠错编码"></a>纠错编码</h3><h4 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h4><p>工作流程：确定校验码位数r -&gt; 确定校验码和数据的位置 -&gt; 求出校验码的值 -&gt; 检错并纠错</p><h5 id="海明距离"><a href="#海明距离" class="headerlink" title="海明距离"></a>海明距离</h5><p>两个合法编码（码字）的对应比特取值不同的比特数称为这两个码字的海明距离（码距），一个有效编码集中，任意两个合法编码（码字）的海明距离的最小值称为该编码集的海明距离（码距）</p><blockquote><p>要检测出 n 位错误，则码距为 n+1、<br>要纠正 d 位错误，则码距位2d+1</p></blockquote><h5 id="确定校验码位数r"><a href="#确定校验码位数r" class="headerlink" title="确定校验码位数r"></a>确定校验码位数r</h5><p>数据&#x2F;信息有m位，冗余码&#x2F;校验码有r位<br>则校验码一共有$2^r$种取值<br>则需要满足 $2^r\geq m+r+1$ (海明不等式)</p><h2 id="流量控制余可靠传输机制"><a href="#流量控制余可靠传输机制" class="headerlink" title="流量控制余可靠传输机制"></a>流量控制余可靠传输机制</h2>]]></content>
    
    
    <summary type="html">计算机网络数据链路层</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络——物理层</title>
    <link href="http://example.com/2023/10/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E7%89%A9%E7%90%86%E5%B1%82/"/>
    <id>http://example.com/2023/10/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E7%89%A9%E7%90%86%E5%B1%82/</id>
    <published>2023-10-10T12:59:55.000Z</published>
    <updated>2023-10-13T08:24:38.557Z</updated>
    
    <content type="html"><![CDATA[<h2 id="物理层基本概念"><a href="#物理层基本概念" class="headerlink" title="物理层基本概念"></a>物理层基本概念</h2><p>解决在连接各种计算机的传输媒体上传输数据比特流<br>物理层主要任务：确定与传输媒体结构有关的特性——<strong>定义标准</strong></p><ul><li>机械特性：物理连接的特性，轨道物理连接时采用的规格、接口性质、引线数目、引脚数量和排列情况</li><li>电气特性：规定传输二进制位时线路上信号的电压范围、阻抗匹配、传输速率和距离限制等</li><li>功能特性：线上出现某一电平表示何种意义，接口部件的信号线的用途</li><li>规程特性：定义各条物理线路的工作规程和时序关系</li></ul><h2 id="数据通信基础"><a href="#数据通信基础" class="headerlink" title="数据通信基础"></a>数据通信基础</h2><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><ul><li>数据data：传送信息的实体</li><li>信号：数据在传输过程中的存在形式</li><li>信源：产生和发送数据的源头</li><li>信宿：接收数据的终点</li><li>信道：信号的传输媒介</li></ul><h3 id="数据通信传输方式"><a href="#数据通信传输方式" class="headerlink" title="数据通信传输方式"></a>数据通信传输方式</h3><h4 id="通信方式"><a href="#通信方式" class="headerlink" title="通信方式"></a>通信方式</h4><ul><li>单工通信：只有一个方向的通信而没有反方向的交互 <strong>仅需要一条信道</strong></li><li>半双工通信&#x2F;双向交替通信：双方都可以发送或接收，但任何一方不能同时发送和接收 <strong>需要两条信道</strong></li><li>全双工通信&#x2F;双向同时通信：通信双方可以同时发送和接收信息 <strong>需要两条信道</strong></li></ul><h4 id="串行传输和并行传输"><a href="#串行传输和并行传输" class="headerlink" title="串行传输和并行传输"></a>串行传输和并行传输</h4><ul><li>串行传输：将一个字符的8位二进制数从低位到高位的顺序顺序依次发送 <strong>速度慢、费用低、适合远距离</strong></li><li>并行传输：将一个字符的8位二进制数同时通过8条信道发送 <strong>速度快、费用高、适合近距离</strong></li></ul><h4 id="同步传输和异步传输"><a href="#同步传输和异步传输" class="headerlink" title="同步传输和异步传输"></a>同步传输和异步传输</h4><ul><li>同步传输：数据传送是以数据区块为单位，又称为区块传输，在传输数据时需要先送出一个或多个同步字符，再送出整批数据</li><li>异步传输：将比特分成小组进行传输，小组可以是8位的1个字符或更长。发送方可以在任何时刻发送这些比特组，而接收方不知道他们会在什么时候到达。传送数据时，加一个字符起始位和一个字符终止位</li></ul><h3 id="相关术语2"><a href="#相关术语2" class="headerlink" title="相关术语2"></a>相关术语2</h3><h4 id="码元"><a href="#码元" class="headerlink" title="码元"></a>码元</h4><p>用一个固定市场的信号波形，代表不同离散数值的基本波形，是数字通信中数字信号的计量单位，这个时长内的信号称为k进制码元，该时长称为码元宽度。<br>码元的离散状态由M个时，码元称为M进制码元</p><h4 id="数据传输速率的两种表示方法"><a href="#数据传输速率的两种表示方法" class="headerlink" title="数据传输速率的两种表示方法"></a>数据传输速率的两种表示方法</h4><ul><li>码元传输速率：单位时间内数字信号系统所传输的码元个数 <em>（脉冲个数或信号变化次数）</em>，单位是 <strong>波特</strong> 1波特表示系统每秒传输一个码元</li><li>信息传输速率：单位时间内数字通信系统传输的二进制码元个数 <em>（比特数）</em>，单位是 <strong>比特&#x2F;秒（b&#x2F;s）</strong></li></ul><h4 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h4><p>模拟信号中：当输入信号频率高或低到一定程度，使得系统的输出功率成为输入功率的一般（-3dB）时，最高频率和最低频率之间的差值，单位为 <strong>赫兹（HZ）</strong><br>数字设备中：表示单位时间内从网络中某一点到另一点所能通过的 ‘最高数据率’&#x2F;单位时间内通过链路的数量，常用来表示网络的通信线路所能传输数据的能力 单位为 <strong>比特每秒（bps）</strong></p><h2 id="奈氏准则和香农定理"><a href="#奈氏准则和香农定理" class="headerlink" title="奈氏准则和香农定理"></a>奈氏准则和香农定理</h2><h3 id="奈氏准则-（奈奎斯特定理）"><a href="#奈氏准则-（奈奎斯特定理）" class="headerlink" title="奈氏准则 （奈奎斯特定理）"></a>奈氏准则 （<em>奈奎斯特定理</em>）</h3><p>在理想低通条件下，为了避免码间串扰，极限码元传输速率为 <strong>2W Baud</strong> W时信道带宽 <em>单位Hz</em><br>理想低通信道下的极限数据传输率为 $2W \log_2 V (b&#x2F;s)$<br>其中 W是带宽（Hz） V是码元的离散点评数目（几种码元）</p><blockquote><p>在任何信道中，<strong>码元传输的速率是有上限的</strong>。 若传输速率超过上限，就会出现严重的码间串扰问题，使接收端对码元的完全正确识别称为不可能<br>信道 <strong>频带越宽</strong> <em>即能通过的信号高频分量越多</em> 就可以用更高的速率进行码元的有效传输<br>奈氏准则给出了码元传输速率的限制，但并没有对信息传输速率给出限制<br>由于码元的传输速率受奈氏准则制约，所以要提高数据传输速率，就必须使每个码元能携带更多比特的信息量 <em>这就需要采用多元制的调制方法</em></p></blockquote><h3 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h3><p>在带宽受限且有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值<br>信道的极限数据传输速率为 $W\log_2(1+S&#x2F;N)$ $(b&#x2F;s)$<br>其中， W为带宽 $S&#x2F;N$为信噪比 即信号平均功率&#x2F;噪声平均功率，用dB做度量单位 <strong>信噪比（dB）&#x3D;$10\lg(S&#x2F;N)$</strong></p><blockquote><p>信道的带宽或信噪比越大 极限传输速率就越高<br>只要信息传输速率低于极限传输速率，就一定能找到某种方法实现差错传输<br>该定理得出的为极限速率，但实际信道能达到的速率远低于它</p></blockquote>]]></content>
    
    
    <summary type="html">计算机网络物理层</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络——概述</title>
    <link href="http://example.com/2023/10/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2023/10/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E2%80%94%E2%80%94%E6%A6%82%E8%BF%B0/</id>
    <published>2023-10-10T05:01:35.000Z</published>
    <updated>2023-10-10T07:44:17.193Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算机网络概念"><a href="#计算机网络概念" class="headerlink" title="计算机网络概念"></a>计算机网络概念</h2><p>计算机网络：是一个将分散的具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现<strong>资源共享</strong>和<strong>信息传递</strong>的系统</p><ul><li>计算机网络是互联的、自治的计算机集合</li><li>互联-通过通信线路互联互通</li><li>自治-无主从关</li></ul><h2 id="计算机网络功能"><a href="#计算机网络功能" class="headerlink" title="计算机网络功能"></a>计算机网络功能</h2><ol><li>数据通信</li><li>资源共享</li><li>分布式处理</li><li>提高可靠性</li><li>负载均衡</li></ol><h2 id="计算机网络工作方式"><a href="#计算机网络工作方式" class="headerlink" title="计算机网络工作方式"></a>计算机网络工作方式</h2><h3 id="边缘部分"><a href="#边缘部分" class="headerlink" title="边缘部分"></a>边缘部分</h3><p>用户直接使用</p><ul><li>C&#x2F;S方式</li><li>P2P方式 <em>peer-to-peer</em></li></ul><h3 id="核心部分"><a href="#核心部分" class="headerlink" title="核心部分"></a>核心部分</h3><p>为边缘部分服务</p><h2 id="计算机网络功能组成"><a href="#计算机网络功能组成" class="headerlink" title="计算机网络功能组成"></a>计算机网络功能组成</h2><h3 id="通信子网"><a href="#通信子网" class="headerlink" title="通信子网"></a>通信子网</h3><p>实现数据通信</p><h3 id="资源子网"><a href="#资源子网" class="headerlink" title="资源子网"></a>资源子网</h3><p>实现资源共享&#x2F;数据处理<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/wangluozucheng.jpg"                      alt="网络组成"                ></p><h2 id="计算机网络分类"><a href="#计算机网络分类" class="headerlink" title="计算机网络分类"></a>计算机网络分类</h2><h3 id="按分布范围分"><a href="#按分布范围分" class="headerlink" title="按分布范围分"></a>按分布范围分</h3><ul><li>广域网WAN <em>使用交换技术</em></li><li>城域网MAN</li><li>局域网LAN <em>使用广播技术</em></li><li>个人区域网PAN</li></ul><h3 id="按使用者分"><a href="#按使用者分" class="headerlink" title="按使用者分"></a>按使用者分</h3><ul><li>公用网</li><li>专用网</li></ul><h3 id="按交换技术分"><a href="#按交换技术分" class="headerlink" title="按交换技术分"></a>按交换技术分</h3><ul><li>电路交换</li><li>报文交换</li><li>分组交换</li></ul><h3 id="按照拓扑结构分"><a href="#按照拓扑结构分" class="headerlink" title="按照拓扑结构分"></a>按照拓扑结构分</h3><ul><li>总线型</li><li>星型</li><li>环形</li><li>网状型</li></ul><h3 id="按传输技术分"><a href="#按传输技术分" class="headerlink" title="按传输技术分"></a>按传输技术分</h3><ul><li>广播式网络</li><li>点对点网络</li></ul><h2 id="计算机网络性能指标"><a href="#计算机网络性能指标" class="headerlink" title="计算机网络性能指标"></a>计算机网络性能指标</h2><h3 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h3><p>数据率或称数据传输率或称比特率<br>不同单位之间的倍率是10</p><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p>单位时间内从网络中的某一点到另一点所能通过的最高数据率 单位为 <em>比特每秒</em><br>网络设备所支持的 <strong>最高速度</strong><br>若链路带宽为2Mb&#x2F;s 则主机在1us内可向链路发2bit数据</p><blockquote><p>在链路中的移动速度是不变的 改变的是数据注入速度</p></blockquote><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><p>在单位时间内通过某个网络（信道、接口）的数据量<br>吞吐量受网络带宽或网络的额定速率的限制</p><h3 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h3><p>数据从网络或链路的一段传送到另一端所需的时间，也叫延迟或迟延</p><ul><li>发送时延：从发送分组的第一个比特算起，到该分组的最后一个比特发送完毕的时间 <code>数据长度/信道带宽（发送速率）</code></li><li>传播时延：取决于电磁波的传播速度和链路长度 <code>信道长度/电磁波在信道上的传播速率</code></li><li>排队时延：等待输出&#x2F;输入链路可用</li><li>处理时延：检错 找出口</li></ul><h3 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h3><p><code>传播时延*带宽</code><br>又称为<strong>以比特位单位的链路长度</strong> 即<em>某段链路现在又多少比特</em></p><h3 id="往返时延RTT"><a href="#往返时延RTT" class="headerlink" title="往返时延RTT"></a>往返时延RTT</h3><p>发送方发送数据开始，到发送方受到接收方的确认总共经历的时延</p><blockquote><p>RTT越大，在受到确认之前，可以发送的数据越多<br>RTT包括 <em>往返传播时延（传输时延*2）</em>、<em>末端处理时间（基本忽略不计）</em></p></blockquote><h3 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h3><ul><li>信道利用率：<code>有数据通过的时间/（有/无）数据通过时间</code></li><li>网络利用率：<code>信号利用率加权平均值</code><blockquote><p>当网络利用率越高时，有更多的数据被发送和接收，这就意味着更多的数据需要在同一时间内在网络上传输。因此，在网络上的传输过程中可能会出现拥塞，这会导致数据在网络中的传输速度变慢，增加了时延。</p></blockquote></li></ul><h2 id="计算机网络分类结构"><a href="#计算机网络分类结构" class="headerlink" title="计算机网络分类结构"></a>计算机网络分类结构</h2><ul><li>法定标准 7层OSI参考模型</li><li>事实标准 4层TCP&#x2F;IP模型</li></ul><h3 id="ISO-x2F-OSI参考模型"><a href="#ISO-x2F-OSI参考模型" class="headerlink" title="ISO&#x2F;OSI参考模型"></a>ISO&#x2F;OSI参考模型</h3><blockquote><p>国际标准化组织ISO于1984年提出的开放系统互连OSI参考模型</p></blockquote><p>从底至顶分别为 物理层 数据链路层 网络层 传输层 会话层 表示层 应用层<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/tongxin.jpg"                      alt="通信过程"                ><br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/tongxin2.jpg"                      alt="通信过程"                ></p><h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h4><p>所有能和用户交互产生网络流量的程序 </p><ul><li>文件传输</li><li>电子邮件</li><li>万维网</li></ul><h4 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h4><p>处理在两个通信系统中交换信息的表示方式</p><ul><li>进行数据格式变换</li><li>对数据进行加密和解密</li><li>数据压缩和恢复</li></ul><h4 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a>会话层</h4><p>向表示层实体&#x2F;用户进程提供建立连接并在连接数有序地传输数据，即会话、建立同步(SYN)</p><ul><li>建立管理终止会话</li><li>使用校验点可使会话在通信失效时从校验点&#x2F;同步点继续恢复通信，实现数据同步</li></ul><h4 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h4><p>负责主机中两个进程的通信即端到端的通信，传输单位为报文段或用户数据报</p><ul><li>可靠传输、不可靠传输</li><li>差错控制 </li><li>流量控制 </li><li>复用分用</li></ul><h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p>把分组从源端传到目的端，为分组交换网上的不同主机提供通信服务，传输单位是数据报</p><ul><li>路由控制：选择最佳路径</li><li>流量控制</li><li>差错控制</li><li>拥塞控制</li></ul><h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p>把网络层传下来的数据组装成帧，传输单位为帧</p><ul><li>成帧：定义帧的开始和结束</li><li>差错控制：帧错、位错</li><li>流量控制</li><li>访问（接入）控制：控制对信道的访问</li></ul><h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><p>在物理媒体上实现比特流的透明传输，传输单位是比特</p><ul><li>定义接口特性</li><li>定义传输模式：单工、半双工、双工</li><li>定义传输速率</li><li>比特同步</li><li>比特编码</li></ul><h3 id="TCP-x2F-IP参考模型"><a href="#TCP-x2F-IP参考模型" class="headerlink" title="TCP&#x2F;IP参考模型"></a>TCP&#x2F;IP参考模型</h3><p>从底至顶分别为 网络接口层 网际层 传输层 应用层<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/tcpip.jpg"                      alt="tcpip"                ></p><h4 id="OSI和TCP-x2F-IP参考模型的相同点"><a href="#OSI和TCP-x2F-IP参考模型的相同点" class="headerlink" title="OSI和TCP&#x2F;IP参考模型的相同点"></a>OSI和TCP&#x2F;IP参考模型的相同点</h4><ul><li>分层</li><li>基于独立的协议栈概念</li><li>可以实现异构网络互联</li></ul><h4 id="OSI和TCP-x2F-IP参考模型的不同点"><a href="#OSI和TCP-x2F-IP参考模型的不同点" class="headerlink" title="OSI和TCP&#x2F;IP参考模型的不同点"></a>OSI和TCP&#x2F;IP参考模型的不同点</h4><ul><li>OSI定义三点：服务、协议、接口</li><li>OSI先出现，即参考模型先于协议发明而TCP&#x2F;IP先有协议</li><li>TCP&#x2F;IP设计之初就考虑异构网互联问题，将IP作为重要层次</li><li><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/diff1.jpg"                                     ></li></ul><h3 id="五层参考模型"><a href="#五层参考模型" class="headerlink" title="五层参考模型"></a>五层参考模型</h3><p>从下而上分别为 物理层 数据链路层 网络层 传输层 应用层<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/net/wuceng.jpg"                                     ></p><ul><li>应用层：支持各种网络应用</li><li>传输层：进程-进程的数据传输</li><li>网络层：源主机到目的主机的数据分组路由与转发</li><li>数据链路层：把网络层传下来的数据报组装成帧</li><li>物理层：比特传输</li></ul>]]></content>
    
    
    <summary type="html">计算机网络概述</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Acfly-UWB</title>
    <link href="http://example.com/2023/08/24/Acfly-UWB/"/>
    <id>http://example.com/2023/08/24/Acfly-UWB/</id>
    <published>2023-08-24T10:33:57.000Z</published>
    <updated>2023-10-04T06:43:21.668Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 Nooploop 的 LinkTrack 定位系统为 Acfly飞控提供定位<br><a class="link"   href="https://www.nooploop.com/download/" >官方资料 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>本文包含本人在2023电赛中调试的辛酸泪</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>我们使用的是4基站+1标签+1控制台的方案<br>参考的是<a class="link"   href="https://ftp.nooploop.com/software/products/uwb/doc/LinkTrack_User_Manual_V2.3_zh.pdf" >官方用户手册 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>中第13-14页的内容</p><blockquote><ol><li>按顺序0-3的id分别配置4个anchor</li><li>配置tag标签（飞控端） 通信协议选择tag_frame0</li><li>配置console控制台</li></ol></blockquote><h2 id="摆放及上电方向"><a href="#摆放及上电方向" class="headerlink" title="摆放及上电方向"></a>摆放及上电方向</h2><blockquote><p>由于飞控的数据适配性，基站摆放位置和飞机上电位置需要受到限制<br>（可能之后随着设备的更新会减轻这方面带来的影响，但是按我们目前的测试结果来看，还是非常建议按照已经测试好的方向进行初始化）</p></blockquote><p>如下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/uwb/init.jpg"                      alt="飞控位置"                ></p><h2 id="飞控通信协议设置"><a href="#飞控通信协议设置" class="headerlink" title="飞控通信协议设置"></a>飞控通信协议设置</h2><h3 id="tag端通信协议"><a href="#tag端通信协议" class="headerlink" title="tag端通信协议"></a>tag端通信协议</h3><blockquote><p>具体通信协议可以参考<a class="link"   href="https://ftp.nooploop.com/software/products/uwb/doc/NLink_V1.4.pdf" >官方参考通信协议 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>在此处对飞控段使用的协议即 Tag 端作说明 即</p></blockquote><p>tag端通信协议（接收）如下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/uwb/xieyi.png"                      alt="tag通信协议"                ><br>可知飞控可接收到数据有位置、姿态、精度等一系列数据</p><h3 id="官方驱动代码"><a href="#官方驱动代码" class="headerlink" title="官方驱动代码"></a>官方驱动代码</h3><p>以下给出acfly官方发布的驱动代码</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;drv_UWB_LinkTrack.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Commulink.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Basic.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SensorsBackend.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MeasurementSystem.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DriverInfo</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> param;</span><br><span class="line">Port port;</span><br><span class="line"><span class="type">uint32_t</span> sensor_key;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> id;</span><br><span class="line"><span class="type">uint8_t</span> role;</span><br><span class="line"><span class="type">int</span> pos_x:<span class="number">24</span>;<span class="type">int</span> pos_y:<span class="number">24</span>;<span class="type">int</span> pos_z:<span class="number">24</span>;</span><br><span class="line"><span class="type">int</span> vel_x:<span class="number">24</span>;<span class="type">int</span> vel_y:<span class="number">24</span>;<span class="type">int</span> vel_z:<span class="number">24</span>;</span><br><span class="line"><span class="type">int</span> dis_0:<span class="number">24</span>;<span class="type">int</span> dis_1:<span class="number">24</span>;<span class="type">int</span> dis_2:<span class="number">24</span>;<span class="type">int</span> dis_3:<span class="number">24</span>;<span class="type">int</span> dis_4:<span class="number">24</span>;<span class="type">int</span> dis_5:<span class="number">24</span>;<span class="type">int</span> dis_6:<span class="number">24</span>;<span class="type">int</span> dis_7:<span class="number">24</span>;</span><br><span class="line"><span class="type">float</span> imuGyro[<span class="number">3</span>];</span><br><span class="line"><span class="type">float</span> imuAcc[<span class="number">3</span>];</span><br><span class="line"><span class="type">uint8_t</span> reserved1[<span class="number">12</span>];</span><br><span class="line"><span class="type">int16_t</span> angle[<span class="number">3</span>];</span><br><span class="line"><span class="type">float</span> q[<span class="number">4</span>];</span><br><span class="line"><span class="type">uint8_t</span> reserved2[<span class="number">4</span>];</span><br><span class="line"><span class="type">uint32_t</span> localTime;</span><br><span class="line"><span class="type">uint32_t</span> systemTime;</span><br><span class="line"><span class="type">uint8_t</span> reserved3[<span class="number">1</span>];</span><br><span class="line"><span class="type">uint8_t</span> eop[<span class="number">3</span>]; <span class="comment">// 估计位置的精度</span></span><br><span class="line"><span class="type">uint16_t</span> voltage;</span><br><span class="line"><span class="type">uint8_t</span> reserved4[<span class="number">5</span>];</span><br><span class="line">&#125;__PACKED _Uwb;</span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> packet_ID[<span class="number">2</span>] = &#123; <span class="number">0x55</span> , <span class="number">0x01</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">OpticalFlow_Server</span><span class="params">(<span class="type">void</span>* pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DriverInfo driver_info = *(DriverInfo*)pvParameters;</span><br><span class="line"><span class="built_in">delete</span> (DriverInfo*)pvParameters;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*状态机*/</span></span><br><span class="line">_Uwb  Uwb;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> rc_counter = <span class="number">0</span>;</span><br><span class="line"><span class="type">signed</span> <span class="type">char</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*状态机*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//等待初始化完成</span></span><br><span class="line"><span class="keyword">while</span>( <span class="built_in">get_Altitude_MSStatus</span>() != MS_Ready )</span><br><span class="line"><span class="built_in">os_delay</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册传感器</span></span><br><span class="line"><span class="type">double</span> angleOffset = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>( driver_info.param&gt;<span class="number">360</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//记录初始偏航</span></span><br><span class="line">Quaternion quat;</span><br><span class="line"><span class="built_in">get_Attitude_quat</span>(&amp;quat);</span><br><span class="line">angleOffset = quat.<span class="built_in">getYaw</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">angleOffset = <span class="built_in">degree2rad</span>((<span class="type">double</span>)driver_info.param);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> sensor_key = <span class="built_in">PositionSlamSensorRegister</span>( default_uwb_sensor_index , \</span><br><span class="line">                                                    <span class="string">&quot;UWB_LinkTrack&quot;</span> ,\</span><br><span class="line">                                                    Position_Sensor_Type_RelativePositioning , \</span><br><span class="line">                                                    Position_Sensor_DataType_s_xy , \</span><br><span class="line">                                                    Position_Sensor_frame_SLAM , \</span><br><span class="line">                                                    <span class="number">0.1</span>, angleOffset, <span class="number">100</span> );</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> lastP = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> pUCCounter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> rdata;</span><br><span class="line"><span class="keyword">if</span>( driver_info.port.<span class="built_in">read</span>( &amp;rdata, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0.5</span> ) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( rc_counter &lt; <span class="built_in">sizeof</span>(packet_ID) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//接收包头</span></span><br><span class="line"><span class="keyword">if</span>( rdata != packet_ID[ rc_counter ] )</span><br><span class="line">&#123;</span><br><span class="line">rc_counter = <span class="number">0</span>;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">++rc_counter;</span><br><span class="line">sum += rdata;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( rc_counter &lt; <span class="built_in">sizeof</span>(packet_ID) + <span class="built_in">sizeof</span>(_Uwb) )</span><br><span class="line">&#123;<span class="comment">//接收数据</span></span><br><span class="line">( (<span class="type">unsigned</span> <span class="type">char</span>*)&amp;Uwb )[ rc_counter - <span class="built_in">sizeof</span>(packet_ID) ] = rdata;</span><br><span class="line">sum += rdata;</span><br><span class="line">++rc_counter;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="comment">//校验</span></span><br><span class="line"><span class="keyword">if</span>( sum == rdata )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( Uwb.eop[<span class="number">0</span>]&gt;<span class="number">200</span> || Uwb.eop[<span class="number">1</span>]&gt;<span class="number">200</span> ) <span class="comment">// x y 精度大于2cm就失能</span></span><br><span class="line"><span class="built_in">PositionSensorSetInavailable</span>(default_uwb_sensor_index,driver_info.sensor_key);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">vector3&lt;<span class="type">double</span>&gt; pos, vel;</span><br><span class="line">pos.x = Uwb.pos_x*<span class="number">0.1</span>;</span><br><span class="line">pos.y = Uwb.pos_y*<span class="number">0.1</span>;</span><br><span class="line">pos.z = Uwb.pos_z * <span class="number">0.1</span>;</span><br><span class="line">vel.x = Uwb.vel_x*<span class="number">0.01</span>;</span><br><span class="line">vel.y = Uwb.vel_y*<span class="number">0.01</span>;</span><br><span class="line">vel.z = Uwb.vel_z * <span class="number">0.01</span>;</span><br><span class="line"><span class="keyword">if</span>( Uwb.eop[<span class="number">2</span>] &gt; <span class="number">200</span> )</span><br><span class="line"><span class="built_in">PositionSensorChangeDataType</span>( default_uwb_sensor_index,sensor_key, Position_Sensor_DataType_s_xy );</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">PositionSensorChangeDataType</span>( default_uwb_sensor_index,sensor_key, Position_Sensor_DataType_s_xyz );</span><br><span class="line"><span class="type">double</span> eop_xy = <span class="built_in">sqrtf</span>( Uwb.eop[<span class="number">0</span>]*Uwb.eop[<span class="number">0</span>] + Uwb.eop[<span class="number">1</span>]*Uwb.eop[<span class="number">1</span>] );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( Uwb.dis_0 != lastP )</span><br><span class="line">&#123;</span><br><span class="line">lastP = Uwb.dis_0;</span><br><span class="line">pUCCounter = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( pUCCounter &lt; <span class="number">255</span> )</span><br><span class="line">++pUCCounter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( pUCCounter&gt;<span class="number">100</span> )</span><br><span class="line"><span class="built_in">PositionSensorSetInavailable</span>( default_uwb_sensor_index,sensor_key );</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">PositionSensorUpdatePosition</span>( default_uwb_sensor_index,sensor_key, pos, <span class="literal">true</span>, <span class="number">-1</span>, eop_xy&lt;<span class="number">100</span>?<span class="number">100</span>:eop_xy, Uwb.eop[<span class="number">2</span>] );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rc_counter = <span class="number">0</span>;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">UWB_LinkTrack_DriverInit</span><span class="params">( Port port, <span class="type">uint32_t</span> param )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//波特率115200</span></span><br><span class="line">port.<span class="built_in">SetBaudRate</span>( <span class="number">460800</span>, <span class="number">2</span>, <span class="number">2</span> );</span><br><span class="line"><span class="comment">//注册传感器</span></span><br><span class="line">DriverInfo* driver_info = <span class="keyword">new</span> DriverInfo;</span><br><span class="line">driver_info-&gt;param = param;</span><br><span class="line">driver_info-&gt;port = port;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">xTaskCreate</span>( OpticalFlow_Server, <span class="string">&quot;OptFlowGL9306&quot;</span>, <span class="number">1024</span>, (<span class="type">void</span>*)driver_info, SysPriority_ExtSensor, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_drv_UWB_LinkTrack</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">PortFunc_Register</span>( <span class="number">41</span>, UWB_LinkTrack_DriverInit );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="值得一提"><a href="#值得一提" class="headerlink" title="值得一提"></a>值得一提</h3><p>在以上驱动代码中，值得一提的是</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// z 精度大于2cm就不使用z轴数据</span></span><br><span class="line"><span class="keyword">if</span>( Uwb.eop[<span class="number">2</span>] &gt; <span class="number">200</span> ) </span><br><span class="line">    <span class="built_in">PositionSensorChangeDataType</span>( default_uwb_sensor_index,sensor_key, Position_Sensor_DataType_s_xy );</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">PositionSensorChangeDataType</span>( default_uwb_sensor_index,sensor_key, Position_Sensor_DataType_s_xyz );</span><br></pre></td></tr></table></figure></div><p>及</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( Uwb.eop[<span class="number">0</span>]&gt;<span class="number">200</span> || Uwb.eop[<span class="number">1</span>]&gt;<span class="number">200</span> ) <span class="comment">// x y 精度大于2cm就失能</span></span><br><span class="line">    <span class="built_in">PositionSensorSetInavailable</span>(default_uwb_sensor_index,driver_info.sensor_key);</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>驱动内容为 超出2cm的精度许可范围，就将传感器失能<br><strong>UWB官方给出的数据是，x y 的精度在 10cm 之内 z 精度在 30cm 以内</strong></p></blockquote><ul><li>关于z轴数据<br>这样一来其实可以反应我们看到的现象，首先是在只使用uwb作为外接传感器时，飞机完全定不住高（因为z精度完全无法满足2cm的要求），但是可能由于飞控中气压计等设备的存在，飞控有高度数据，室内定位可用，所以能够允许起飞，但在天上的高度数据，完全由飞控而来，所以现象是，没有定高可言。。。</li></ul><h2 id="注意事项及传感器使用建议"><a href="#注意事项及传感器使用建议" class="headerlink" title="注意事项及传感器使用建议"></a>注意事项及传感器使用建议</h2><ol><li>使用时发起自动标定的设备需要在线，比如我们使用控制台发起一键标定，则在使用时控制台必须要在线，否则数据会不可用</li><li>由于uwb的z轴精度较低，建议加上tfmini等作为定高传感器，通过测试，有uwb加上tfmini，定位效果较好</li></ol><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><ul><li>通过这段时间的测试，我们发现至少在电赛赛制的背景下，用uwb可能会出现某些限制，比如场地不一定能够容纳摆放下基站，并且无法在换场地后进行标定，可能受到干扰等</li><li>对于电赛（赛场不允许携带笔记本及pc，上位机只支持x86，我们手上已有的板载电脑皆为arm，无法在现场进行标定）无法在换场地后进行标定的情况，可能考虑自行写接口，使用单片机或板载电脑进行标定，能够很大程度减少对位置场地的限制，我们尝试按照通信协议写了一份一键<a class="link"   href="https://github.com/CGC12123/LinkTrack-Uwb-OneclickCalibration-STM32" >自动标定的程序 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，但还未在实际场地中进行测试。</li></ul>]]></content>
    
    
    <summary type="html">使用基于UWB的LinkTrack高精度定位系统，为Acfly飞控提供定位</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="无人机" scheme="http://example.com/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    <category term="UWB" scheme="http://example.com/tags/UWB/"/>
    
  </entry>
  
  <entry>
    <title>Powershell配置及工具</title>
    <link href="http://example.com/2023/08/17/Powershell%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%BE%8E%E5%8C%96/"/>
    <id>http://example.com/2023/08/17/Powershell%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%BE%8E%E5%8C%96/</id>
    <published>2023-08-17T10:50:25.000Z</published>
    <updated>2023-08-17T14:18:06.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Powershell中的配置及工具"><a href="#Powershell中的配置及工具" class="headerlink" title="Powershell中的配置及工具"></a>Powershell中的配置及工具</h1><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>可以使用如下命令创建Powershell的自启动配置文件</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">New-Item -ItemType file -Path $PROFILE  -Force</span><br></pre></td></tr></table></figure></div><p>此后，可使用</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">PROFILE</span></span><br></pre></td></tr></table></figure></div><p>查看该配置文件的位置 如我的是</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; $PROFILE</span><br><span class="line">&gt; C:\Users\CGC\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></figure></div><blockquote><p>我的理解是 <code>PROFILE</code> 性质和 linux下的 <code>.bashrc</code> 差不多，会在开启终端时自己执行，依次可以实现很多需要自启动的功能</p></blockquote><!-- # Powershell美化> 基于 Windows terminal## Windows terminalWindows terminal是一个终端应用程序，相对于古老的cmd大黑框和power shell的大蓝框，它是一款更新更强大的终端应用程序，继承了多种命令行shell，同时也提供了更多个性化定制空间## Windows terminal的setting.json进入终端后在上方打开设置，在设置的左下角有一个 `打开JSON文件`，此为我们用来配置各个功能的文件，打开该json文件，进行相关配置\以下配置主要是对美观上的配置，位于 `"profiles"` 中，可使用 `ctrl + f` 寻找 `"profiles"`，然后找到其中的 `defaults` ，打开其中的大括号，往里面进行代码的填充<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;profiles&quot;</span><span class="punctuation">:</span> </span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            </span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></div><h3 id="亚克力效果"><a href="#亚克力效果" class="headerlink" title="亚克力效果"></a>亚克力效果</h3><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;useAcrylic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure></div><h3 id="不透明度设置"><a href="#不透明度设置" class="headerlink" title="不透明度设置"></a>不透明度设置</h3><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例如设置为百分之四十</span></span><br><span class="line"><span class="attr">&quot;opacity&quot;</span><span class="punctuation">:</span> <span class="number">40</span></span><br></pre></td></tr></table></figure></div><h3 id="自定义背景图片"><a href="#自定义背景图片" class="headerlink" title="自定义背景图片"></a>自定义背景图片</h3><p><code>json &quot;background&quot;: &quot;img.jpg&quot; </code> –&gt;</p>]]></content>
    
    
    <summary type="html">一些Windows Powershell中的配置工具</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Powershell" scheme="http://example.com/tags/Powershell/"/>
    
    <category term="Windows" scheme="http://example.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>操作系统——进程管理</title>
    <link href="http://example.com/2023/08/12/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    <id>http://example.com/2023/08/12/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</id>
    <published>2023-08-12T06:59:51.000Z</published>
    <updated>2023-08-16T10:26:33.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进程的概念、组成、特征"><a href="#进程的概念、组成、特征" class="headerlink" title="进程的概念、组成、特征"></a>进程的概念、组成、特征</h1><h2 id="进程的概念"><a href="#进程的概念" class="headerlink" title="进程的概念"></a>进程的概念</h2><h3 id="从程序入手"><a href="#从程序入手" class="headerlink" title="从程序入手"></a>从程序入手</h3><p>程序为静态的，存放在磁盘里的可执行文件，一系列的指令集合</p><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><p>动态的，程序的一次执行过程<br>引入进程实体的概念后，进程定义为：进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位<br><font color = red>PCB是进程存在的唯一标志</font></p><h2 id="进程的组成"><a href="#进程的组成" class="headerlink" title="进程的组成"></a>进程的组成</h2><h3 id="PID"><a href="#PID" class="headerlink" title="PID"></a>PID</h3><p>当进程被创建时，操作系统会为该进程分配一个唯一的、不重复的ID——PID（Process ID）即进程ID</p><h3 id="PCB"><a href="#PCB" class="headerlink" title="PCB"></a>PCB</h3><p>操作系统所记录的PID，进程所属用户ID（UID），给进程分配的资源，进程运行情况等等，均被保存在一个数据结构<font color = red>PCB</font>（Process Control Block）中，即<font color = red>进程控制块</font></p><blockquote><p>操作系统需要对各个并发运行的进程进行管理，但凡管理时需要的信息，都会被放在PCB中</p></blockquote><h3 id="进程实体"><a href="#进程实体" class="headerlink" title="进程实体"></a>进程实体</h3><p>一个进程实体（进程映像）由PCB、程序段、数据段组成。<br>进程是动态的，进程实体是静态的<br>进程实体反应了进程在某一时刻的状态</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/jincheng_zucheng.jpg"                      alt="进程的组成"                ></p><h2 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h2><h3 id="动态性"><a href="#动态性" class="headerlink" title="动态性"></a>动态性</h3><p>进程是程序的一次执行过程，是动态产生、变化、消亡的</p><h3 id="并发性"><a href="#并发性" class="headerlink" title="并发性"></a>并发性</h3><p>内存中有多个进程实体，各进程可并发执行</p><h3 id="独立性"><a href="#独立性" class="headerlink" title="独立性"></a>独立性</h3><p>进程是能独立运行、独立获得资源、独立接收调度的基本单位</p><h3 id="异步性"><a href="#异步性" class="headerlink" title="异步性"></a>异步性</h3><p>各进程各自独立、不可预知的速度向前推进</p><h3 id="结构性"><a href="#结构性" class="headerlink" title="结构性"></a>结构性</h3><p>每个进程对应配置一个PCB，结构上看，进程由程序段、数据段、PCB组成</p><h1 id="进程的状态和状态的转换"><a href="#进程的状态和状态的转换" class="headerlink" title="进程的状态和状态的转换"></a>进程的状态和状态的转换</h1><h2 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h2><h3 id="创建态（新建态）"><a href="#创建态（新建态）" class="headerlink" title="创建态（新建态）"></a>创建态（新建态）</h3><p>进程正在被创建时，状态为“创建态”，操作系统会为进程分配资源、初始化PCB</p><h3 id="就绪态"><a href="#就绪态" class="headerlink" title="就绪态"></a>就绪态</h3><p>进程创建完成后，进入“就绪态”，该进程已经具备运行条件，但由于没有空闲cpu，暂时无法运行</p><h3 id="运行态"><a href="#运行态" class="headerlink" title="运行态"></a>运行态</h3><p>进程在cpu上运行，cpu正在执行对应的指令序列</p><h3 id="阻塞态（等待态）"><a href="#阻塞态（等待态）" class="headerlink" title="阻塞态（等待态）"></a>阻塞态（等待态）</h3><p>进程运行过程中，可能会请求等待某个事件的发生（如等待系统资源分配），在事件发生前，进程无法继续往下运行，此时操作系统会让进程下cpu，并让他进入“阻塞态”</p><h3 id="终止态（结束态）"><a href="#终止态（结束态）" class="headerlink" title="终止态（结束态）"></a>终止态（结束态）</h3><p>进程执行exit系统调用，请求操作系统终止该进程，此时该进程进入“终止态”，操作系统让该进程下cpu并回收内存空间等资源，最后回收该进程的PCB<br>当终止进程工作完成后该进程彻底消失</p><h2 id="进程状态的转换"><a href="#进程状态的转换" class="headerlink" title="进程状态的转换"></a>进程状态的转换</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/jincheng_zhuanhuan.jpg"                                     ></p><h2 id="进程的组织"><a href="#进程的组织" class="headerlink" title="进程的组织"></a>进程的组织</h2><h3 id="链接方式"><a href="#链接方式" class="headerlink" title="链接方式"></a>链接方式</h3><p>使用指针将各个状态的PCB进行组织，如有执行指针指向当前处于运行态的进程，就绪队列指针指向处于就绪态的进程</p><h3 id="索引方式"><a href="#索引方式" class="headerlink" title="索引方式"></a>索引方式</h3><p>操作系统给各个状态的进程建立索引表，操作系统持有指向各个索引表的指针</p><blockquote><p>大部分操作系统采用链接方式</p></blockquote><h1 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h1><p>进程控制的主要功能是对系统中的所有进程实施有效的管理，实现进程状态的转化</p><h2 id="原语"><a href="#原语" class="headerlink" title="原语"></a>原语</h2><p>原语的执行具有原子性，执行过程不允许被中断<br>可以使用“关中断指令”和“开中断指令”两个特权指令实现原子性</p><blockquote><p>执行关中断指令后就不在检查中断信号，指导执行开中断指令之后才恢复检查</p></blockquote><h1 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h1><p>进程间通信（Inter-Process Communication， IPC）是指两个进程之间产生数据交互</p><h2 id="共享存储"><a href="#共享存储" class="headerlink" title="共享存储"></a>共享存储</h2><h3 id="基于储存区的共享"><a href="#基于储存区的共享" class="headerlink" title="基于储存区的共享"></a>基于储存区的共享</h3><p>使用共享存储区，使其中的数据可以被多个进程进行读写，数据形式、存放位置都由通信进程控制，而不是操作系统。<br>这种共享方式速度很快，为高级通信方式</p><blockquote><p>为避免出错，各个进程对共享空间的访问应该是互斥的<br>各个进程可以使用操作系统内核提供的同步互斥工具如P、V操作</p></blockquote><h3 id="基于数据结构的共享"><a href="#基于数据结构的共享" class="headerlink" title="基于数据结构的共享"></a>基于数据结构的共享</h3><p>例如在共享空间内申请长度为10的数组，而后储存在该数组中的数据会被受到这个固定长度和类型的数组的限制<br>该方式速度慢，限制多，为低级通信方式</p><h2 id="信息传递"><a href="#信息传递" class="headerlink" title="信息传递"></a>信息传递</h2><p>数据交换以格式化的信息为单位，进程通过操作系统提供的“发送&#x2F;接收消息”两个原语进行数据交换</p><h3 id="直接通信方式"><a href="#直接通信方式" class="headerlink" title="直接通信方式"></a>直接通信方式</h3><p>消息发送进程要指明接收进程的ID</p><h3 id="间接通信方式"><a href="#间接通信方式" class="headerlink" title="间接通信方式"></a>间接通信方式</h3><p>通过“信箱”作为中间实体间接地通信，因此又称“信箱通信方式”</p><h2 id="管道通信"><a href="#管道通信" class="headerlink" title="管道通信"></a>管道通信</h2><p>“管道”是一个特殊的共享文件，又名pipe文件。其实就是在内存中开辟一个大小固定的内存缓冲区（FIFO），对于数据进出有严格要求，本质上是一个循环队列</p><blockquote><p>注意事项<br>1、管道只能采用半双工通信，某一时间段内只能实现单向的传输，如果要实现双向同时通信，则需要设置两个管道<br>2、各进程要互斥地访问管道（由操作系统实现）<br>3、当管道写满的时候，写进程将阻塞，指导都进程将管道中的数据取走<br>4、当管道为空时，读进程将阻塞，指导写进程往管道中写入数据<br>5、管道中的数据一旦被读出，就彻底消失，因此当多个进程读同一个管道时可能会错乱</p><blockquote><ul><li>解决方案1：一个管道允许多个写进程，一个读进程</li><li>解决方案2：允许多个写、读进程，但系统会让各个读进程轮流从管道中读数据（Linux方案）</li></ul></blockquote></blockquote><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><p>线程是一个基本的CPU执行单元，也是程序执行流的最小单位<br>不仅进程之间可以并发，线程之间也可以缤纷噶，从而进一步提高了系统的并发度</p><blockquote><p>引入线程后，进程只作为除了CPU之外的系统资源分配单元</p></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/xiancheng_diff.jpg"                      alt="引入线程带来的变化"                ></p><h2 id="线程的属性"><a href="#线程的属性" class="headerlink" title="线程的属性"></a>线程的属性</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/xiancheng_shuxing.jpg"                      alt="线程的属性"                ></p><h1 id="线程的实现方式和多线程模型"><a href="#线程的实现方式和多线程模型" class="headerlink" title="线程的实现方式和多线程模型"></a>线程的实现方式和多线程模型</h1><h2 id="线程的实现方式"><a href="#线程的实现方式" class="headerlink" title="线程的实现方式"></a>线程的实现方式</h2><h3 id="用户级线程"><a href="#用户级线程" class="headerlink" title="用户级线程"></a>用户级线程</h3><p>使用线程库</p><blockquote><p>切换线程在用户态下进行<br>操作系统无法意识到用户级线程的存在</p></blockquote><h4 id="用户级线程优点"><a href="#用户级线程优点" class="headerlink" title="用户级线程优点"></a>用户级线程优点</h4><p>线程切换在用户空间即可完成，不需要切换到核心态，线程管理的系统开销小，效率高</p><h4 id="用户级线程缺点"><a href="#用户级线程缺点" class="headerlink" title="用户级线程缺点"></a>用户级线程缺点</h4><p>如果其中一个线程被阻塞后，整个进程都会被阻塞，并发度不高<br>多个线程不可以在多个核心上运行</p><h3 id="内核级线程"><a href="#内核级线程" class="headerlink" title="内核级线程"></a>内核级线程</h3><p>由操作系统完成，由内核支持</p><h4 id="内核级线程优点"><a href="#内核级线程优点" class="headerlink" title="内核级线程优点"></a>内核级线程优点</h4><p>当一个线程被阻塞后，别的线程还可以继续执行，并发能力强，多线程可在多核处理机上并发执行</p><h4 id="内核级线程缺点"><a href="#内核级线程缺点" class="headerlink" title="内核级线程缺点"></a>内核级线程缺点</h4><p>一个用户进程会占用多个内核级线程，线程切换由操作系统内核完成，需要切换到核心态，因此线程管理成本高，开销大</p><h2 id="多线程模型"><a href="#多线程模型" class="headerlink" title="多线程模型"></a>多线程模型</h2><blockquote><p>集合用户级线程和内核级线程</p></blockquote><p>根据用户级线程和内核级线程的映射关系，可以划分为几种多线程模型</p><h3 id="一对一模型"><a href="#一对一模型" class="headerlink" title="一对一模型"></a>一对一模型</h3><p>一个用户级线程映射到一个内核级线程</p><h4 id="一对一模型优点"><a href="#一对一模型优点" class="headerlink" title="一对一模型优点"></a>一对一模型优点</h4><p>并发能力强，多线程可在多核处理机上并发执行</p><h4 id="一对一模型缺点"><a href="#一对一模型缺点" class="headerlink" title="一对一模型缺点"></a>一对一模型缺点</h4><p>线程管理成本高，开销大</p><h3 id="多对一模型"><a href="#多对一模型" class="headerlink" title="多对一模型"></a>多对一模型</h3><p>多个用户级线程映射到一个内核级线程，且一个进程只分配一个内核级线程</p><h4 id="多对一模型优点"><a href="#多对一模型优点" class="headerlink" title="多对一模型优点"></a>多对一模型优点</h4><p>用户级线程的切换在用户空间即可完成，不需要切换到到核心态，系统开销小，效率高</p><h4 id="多对一模型缺点"><a href="#多对一模型缺点" class="headerlink" title="多对一模型缺点"></a>多对一模型缺点</h4><p>当一个用户级线程被阻塞后，整个进程都会被阻塞，并发度不高</p><p><strong>操作系统只能感知内核级线程，因此只有内核级线程才是处理机分配的单位</strong></p><h3 id="多对多模型"><a href="#多对多模型" class="headerlink" title="多对多模型"></a>多对多模型</h3><p>n个用户及线程映射到m个内核级线程 <em>(n &gt;&#x3D; m)</em> 每个用户对应m个内核级线程</p><h4 id="多对多模型优点"><a href="#多对多模型优点" class="headerlink" title="多对多模型优点"></a>多对多模型优点</h4><p>克服了多对一模型并发度波高的缺点，又克服了一对一模型中一个用户进程占用太多内核级线程开销太大的缺点</p><h1 id="线程的状态与转换"><a href="#线程的状态与转换" class="headerlink" title="线程的状态与转换"></a>线程的状态与转换</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/xiancheng_zhuanhuan.jpg"                                     ></p><h2 id="线程的组织与控制"><a href="#线程的组织与控制" class="headerlink" title="线程的组织与控制"></a>线程的组织与控制</h2><p>TCB 线程控制块<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/TCB.jpg"                                     ></p>]]></content>
    
    
    <summary type="html">操作系统之进程管理</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="操作系统" scheme="http://example.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统——操作系统概述</title>
    <link href="http://example.com/2023/08/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2023/08/10/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
    <published>2023-08-10T13:47:19.000Z</published>
    <updated>2023-08-11T14:09:02.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统的基本概念"><a href="#操作系统的基本概念" class="headerlink" title="操作系统的基本概念"></a>操作系统的基本概念</h1><p>操作系统是指控制和管理整个计算机系统的硬件与软件资源，合理地组织、调度计算机的工作和资源的分配，进而为用户和其他软件提供方便接口与环境的程序集合。<br>操作系统是计算机系统中最基本的软件系统</p><h1 id="操作系统的特征"><a href="#操作系统的特征" class="headerlink" title="操作系统的特征"></a>操作系统的特征</h1><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>指两个或多个事件再同一时间间隔内发生。<br>这些事件宏观上是同时发生的，但微观上是交替发生的</p><h3 id="易混淆概念"><a href="#易混淆概念" class="headerlink" title="易混淆概念"></a>易混淆概念</h3><p><strong>并行</strong> 指两个或多个事件再同一时刻同时发生</p><h3 id="操作系统的并发性"><a href="#操作系统的并发性" class="headerlink" title="操作系统的并发性"></a>操作系统的并发性</h3><p>计算机系统中“同时”运行着多个程序，这些程序宏观上是同时运行着的，而微观上看是交替运行的</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p><font color = red>单核cpu</font>同一时刻只能执行<font color = red>一个程序</font>，各个程序只能<font color = red>并发</font>执行<br><font color = red>多核cpu</font>可以同时执行<font color = red>多个程序</font>多个程序可以<font color = red>并行</font>执行</p><blockquote><p>如 intel 第八代 i3 为四核cpu，意味着可以并行执行四个程序，如果有四个以上的程序需要同时运行，那么并发性依然是必不可少的</p></blockquote><h2 id="共享"><a href="#共享" class="headerlink" title="共享"></a>共享</h2><p>共享即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用</p><h3 id="两种资源共享方式"><a href="#两种资源共享方式" class="headerlink" title="两种资源共享方式"></a>两种资源共享方式</h3><h4 id="互斥共享"><a href="#互斥共享" class="headerlink" title="互斥共享"></a>互斥共享</h4><p>一个时间段内只允许一个进程访问该资源</p><h4 id="同时共享"><a href="#同时共享" class="headerlink" title="同时共享"></a>同时共享</h4><p>允许一个时间段内由多个进程“同时”对它们进行访问</p><blockquote><p>所谓“同时”往往是宏观上的，而在微观上这些进程可能是交替对该资源进行访问，即分时共享</p></blockquote><h3 id="并发和共享的关系"><a href="#并发和共享的关系" class="headerlink" title="并发和共享的关系"></a>并发和共享的关系</h3><p>如果失去并发性，则系统中只有一个程序运行，共享性失去存在意义<br>如果失去共享性，则两个进程无法同时访问同一资源（如无法同时访问硬盘资源无法实现同时发送完文件）也就无法并发<br><strong>并发性和共享性互为存在条件</strong></p><h2 id="虚拟"><a href="#虚拟" class="headerlink" title="虚拟"></a>虚拟</h2><p>指把物理上的实体变为若干个逻辑上的对应物<br>物理实体是实际存在的，而逻辑上对应物是用户感受到的</p><h3 id="虚拟技术中的“时分复用技术”"><a href="#虚拟技术中的“时分复用技术”" class="headerlink" title="虚拟技术中的“时分复用技术”"></a>虚拟技术中的“时分复用技术”</h3><p>微观上处理机在各个微小的时间段内交替为各个进程服务</p><blockquote><p>如果失去了并发性，则一个时间段内只需运行一道程序，那么就失去了虚拟性的意义。<br>没有并发性就谈不上虚拟性</p></blockquote><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><p>在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进</p><blockquote><p>如果失去了并发性，即系统只能串行运行各个程序，那么每个程序的执行会一贯到底。<br><strong>只有系统拥有并发性，才有可能导致异步性</strong></p></blockquote><h1 id="操作系统的发展与分类"><a href="#操作系统的发展与分类" class="headerlink" title="操作系统的发展与分类"></a>操作系统的发展与分类</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/dep_and_cate.jpg"                      alt="操作系统的发展与分类"                ></p><h1 id="操作系统的运行机制"><a href="#操作系统的运行机制" class="headerlink" title="操作系统的运行机制"></a>操作系统的运行机制</h1><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="cpu的两种状态"><a href="#cpu的两种状态" class="headerlink" title="cpu的两种状态"></a>cpu的两种状态</h3><p>cpu上会运行两种程序，一种是操作系统内核程序，一种是应用程序</p><blockquote><p>cpu中有一个寄存器名为<font color = red>程序状态字寄存器(PSW)</font> 其中有一个二进制位 1 为内核态 0 为用户态</p></blockquote><h4 id="内核态"><a href="#内核态" class="headerlink" title="内核态"></a>内核态</h4><p>处于内核态时，说明正在运行内核程序，可以执行特权指令</p><h4 id="用户态"><a href="#用户态" class="headerlink" title="用户态"></a>用户态</h4><p>处于用户态时，说明正在运行应用程序，只能执行非特权指令</p><h4 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h4><p>内核态 &#x3D; 核心态 &#x3D; 管态<br>用户态 &#x3D; 目态</p><h2 id="内核态和用户态的切换"><a href="#内核态和用户态的切换" class="headerlink" title="内核态和用户态的切换"></a>内核态和用户态的切换</h2><p>一个例子</p><blockquote><p>1、刚开机时，cpu为内核态，操作系统内核程序先上cpu运行<br>2、开机完成后，用户可以启动某个应用程序<br>3、操作系统内核程序在合适的时候主动让出cpu（用一条特殊指令把PSW的标志位设置为用户态），让该应用程序在cpu上运行<br>4、应用程序在用户态运行<br>5、此时黑客在应用程序中植入了一条特权指令企图破坏系统<br>6、cpu发现接下去的指令为特权指令但此时处于用户态<br>7、非法事件引发中断信号，立即变为核心态并停止运行当前应用程序，转而处理中断信号的内核程序<br>8、中断使擦欧总系统再次夺回cpu控制权<br>9、操作系统对引发中断的事件进行处理，处理后再把cpu使用权交给其他应用程序</p></blockquote><h2 id="变态"><a href="#变态" class="headerlink" title="变态"></a>变态</h2><h3 id="内核态-gt-用户态"><a href="#内核态-gt-用户态" class="headerlink" title="内核态-&gt;用户态"></a>内核态-&gt;用户态</h3><p>一条PSW特权指令修改寄存器标志位</p><h3 id="用户态-gt-内核态"><a href="#用户态-gt-内核态" class="headerlink" title="用户态-&gt;内核态"></a>用户态-&gt;内核态</h3><p>由中断引起，硬件自动完成</p><h1 id="中断和异常"><a href="#中断和异常" class="headerlink" title="中断和异常"></a>中断和异常</h1><h2 id="中断的作用"><a href="#中断的作用" class="headerlink" title="中断的作用"></a>中断的作用</h2><p>中断是让操作系统内核夺回cpu使用权的唯一途径</p><h2 id="中断的类型"><a href="#中断的类型" class="headerlink" title="中断的类型"></a>中断的类型</h2><h3 id="内中断"><a href="#内中断" class="headerlink" title="内中断"></a>内中断</h3><p>与当前执行的指令有关，中断信号来源于cpu内部，也称异常、例外</p><blockquote><p>1、陷阱、陷入（由陷入指令引发，应用程序故意引发）<br>2、故障（由错误条件引起，可能被内核程序修复，内核程序修复后会将cpu使用权交还给应用程序，使其继续执行）<br>3、终止（由致命错误引起，内核程序一般无法修复，一般直接终止该应用程序）</p></blockquote><blockquote><p>eg1.例如试图在用户态下执行特权指令<br>eg2.执行除法时发现除数为0(指令非法)<br>eg3.应用程序想请求操作系统内核的服务，执行的<font color = red>陷入指令</font></p></blockquote><blockquote><p>陷入指令一位置应用程序主动把cpu控制权还给操作系统内核 并非特殊指令<br>系统调用就是通过陷入指令完成的</p></blockquote><h3 id="外中断"><a href="#外中断" class="headerlink" title="外中断"></a>外中断</h3><blockquote><p>在每个指令周期末尾，cpu都会检查是否有外中断信号需要处理</p></blockquote><p>与当前执行的指令无关,中断信号来源于cpu外部，也称“中断”</p><blockquote><p>1、时钟中断<br>2、io中断 由输入&#x2F;输出设备发来的中断信号</p></blockquote><h2 id="中断机制基本原理"><a href="#中断机制基本原理" class="headerlink" title="中断机制基本原理"></a>中断机制基本原理</h2><p>不同的中断信号需要不同的中断处理程序来处理<br>当cpu检测到中断信号后，会根据中断信号的类型来查询“中断向量表”，依次来找到相应的中断处理程序在内存中的存放位置</p><h1 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h1><p>操作系统提供给应用程序使用的接口，可以理解为一种可供程序调用的特殊函数<br><strong>应用程序可以通过系统调用来请求获得操作系统内核的服务</strong></p><h2 id="什么功能需要用到系统调用"><a href="#什么功能需要用到系统调用" class="headerlink" title="什么功能需要用到系统调用"></a>什么功能需要用到系统调用</h2><p>凡是与共享资源有关的操作，如储存分配、io操作、文件管理等，都必须通过系统调用的方式向操作系统内核提出服务请求，由操作系统内核代为完成，这样可以<font color = red>保证系统的稳定和安全性</font>，防止用户非法操作</p><h2 id="系统调用按功能进行分类"><a href="#系统调用按功能进行分类" class="headerlink" title="系统调用按功能进行分类"></a>系统调用按功能进行分类</h2><h3 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h3><p>完成设备的 请求&#x2F;释放&#x2F;启动 等功能</p><h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h3><p>完成文件的 读&#x2F;写&#x2F;创建&#x2F;删除 等功能</p><h3 id="进程控制"><a href="#进程控制" class="headerlink" title="进程控制"></a>进程控制</h3><p>完成进程的 创建&#x2F;撤销&#x2F;阻塞&#x2F;唤醒 等功能</p><h3 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h3><p>完成进程之间的 消息传递&#x2F;信号传递 等功能</p><h3 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h3><p>完成内存的 分配&#x2F;回收 等功能</p><h2 id="系统调用的过程"><a href="#系统调用的过程" class="headerlink" title="系统调用的过程"></a>系统调用的过程</h2><blockquote><p>1、在用户态下，程序输入传参指令，向寄存器中传入必要寄存器参数<br>2、传入陷入指令，引发内中断，转入响应中断的处理程序（即系统调用的入口程序）<br>3、在内核态下处理系统调用入口程序，根据寄存器中的参数判断用户需要的系统调用服务<br>4、执行完系统调用服务后，cpu转回用户态继续执行剩下的程序</p></blockquote><blockquote><p>注意：<br>1、陷入指令是在用户态执行的，执行陷入指令后立即引发一个内中断，使cpu进入核心态<br>2、发出系统调用请求实在用户态，而对系统调用的相应处理在核心态下进行</p></blockquote><h1 id="操作系统的体系结构"><a href="#操作系统的体系结构" class="headerlink" title="操作系统的体系结构"></a>操作系统的体系结构</h1><h2 id="操作系统内核"><a href="#操作系统内核" class="headerlink" title="操作系统内核"></a>操作系统内核</h2><blockquote><p>内核时操作系统最基本最核心的部分<br>实现操作系统内核功能的那些程序就是内核程序</p></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/os_kernel.jpg"                      alt="操作系统内核"                ></p><blockquote><p>操作系统内核需要运行在内核态<br>操作系统的非内核功能运行在用户态</p></blockquote><h3 id="大内核"><a href="#大内核" class="headerlink" title="大内核"></a>大内核</h3><p>将操作系统的主要功能模块都作为系统内核，运行在核心态</p><blockquote><p>优点：高性能<br>缺点：内核代码庞大，结构混乱，难以维护</p></blockquote><h3 id="微内核"><a href="#微内核" class="headerlink" title="微内核"></a>微内核</h3><p>只把最基本的功能保留在内核</p><blockquote><p>优点：内核功能少，结构清晰，方便维护<br>缺点：需要频繁地在核心态和用户态之间切换，性能低</p></blockquote><blockquote><p><em>典型大内核操作系统：Linux、UNIX</em><br><em>典型微内核操作系统：Windows NT</em></p></blockquote><h2 id="操作系统结构"><a href="#操作系统结构" class="headerlink" title="操作系统结构"></a>操作系统结构</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/os_structure.jpg"                      alt="操作系统结构"                ></p><h3 id="分层结构"><a href="#分层结构" class="headerlink" title="分层结构"></a>分层结构</h3><p>最底层是硬件，最高层是用户接口，每一层可且只可调用更低一层的接口</p><h3 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h3><p>将内核划分为多个模块，各模块之间相互写作</p><h3 id="宏内核（大内核）"><a href="#宏内核（大内核）" class="headerlink" title="宏内核（大内核）"></a>宏内核（大内核）</h3><p>所有系统功能均放在内核中</p><h3 id="微内核-1"><a href="#微内核-1" class="headerlink" title="微内核"></a>微内核</h3><p>只把中断、原语、进程通信等最核心的功能放入内核</p><h3 id="外核"><a href="#外核" class="headerlink" title="外核"></a>外核</h3><p>外核负责为用户进程分配未经抽象的硬件资源且保证其使用安全</p><h1 id="操作系统的引导"><a href="#操作系统的引导" class="headerlink" title="操作系统的引导"></a>操作系统的引导</h1><p>操作系统引导（开机过程）<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/yindao.jpg"                      alt="操作系统引导 开机过程"                ></p><h1 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h1><p>使用虚拟化技术，将一台物理机器虚拟化为多台虚拟机器，每个虚拟机器可以独立运行一个操作系统</p><h2 id="第一类虚拟机管理程序"><a href="#第一类虚拟机管理程序" class="headerlink" title="第一类虚拟机管理程序"></a>第一类虚拟机管理程序</h2><p>直接运行在硬件上</p><h2 id="第二类虚拟机管理程序"><a href="#第二类虚拟机管理程序" class="headerlink" title="第二类虚拟机管理程序"></a>第二类虚拟机管理程序</h2><p>运行在宿主操作系统上</p><h2 id="两类虚拟机管理程序对比"><a href="#两类虚拟机管理程序对比" class="headerlink" title="两类虚拟机管理程序对比"></a>两类虚拟机管理程序对比</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/os/vmm_conpare.jpg"                                     ></p>]]></content>
    
    
    <summary type="html">操作系统概述</summary>
    
    
    
    <category term="学习笔记" scheme="http://example.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="操作系统" scheme="http://example.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>在jetson的conda虚拟环境中安装tensorrt</title>
    <link href="http://example.com/2023/07/21/%E5%9C%A8jetson%E7%9A%84conda%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%AE%89%E8%A3%85tensorrt/"/>
    <id>http://example.com/2023/07/21/%E5%9C%A8jetson%E7%9A%84conda%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E4%B8%AD%E5%AE%89%E8%A3%85tensorrt/</id>
    <published>2023-07-21T06:29:43.000Z</published>
    <updated>2023-08-24T10:55:22.514Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>jetson系列出场的python自带tensorRT<br>由于使用conda的关系，又是会需要在虚拟环境中安装tensorRT</p></blockquote><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><blockquote><p>找到默认python中的tensorrt并在conda虚拟环境中建立软连接</p></blockquote><blockquote><p>以我的环境为例<br>我的系统上的为python3.8 ，其tensorrt位于<code>/usr/lib/python3.8/dist-packages/tensorrt*</code><br>conda虚拟环境中的虚拟环境文件夹为<code>~/archiconda3/envs/py38/lib/python3.8/site-packages</code><br>故我的建立软链接为</p></blockquote><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib/python3.8/dist-packages/tensorrt* ~/archiconda3/envs/py38/lib/python3.8/site-packages</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">在Jetson Orin Nano - Ubuntu20.04 上的conda虚拟环境中安装tensorrt</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Conda" scheme="http://example.com/tags/Conda/"/>
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="TensorRT" scheme="http://example.com/tags/TensorRT/"/>
    
  </entry>
  
  <entry>
    <title>使用TensorRT加速Yolo</title>
    <link href="http://example.com/2023/07/20/%E4%BD%BF%E7%94%A8TensorRT%E5%8A%A0%E9%80%9FYolo/"/>
    <id>http://example.com/2023/07/20/%E4%BD%BF%E7%94%A8TensorRT%E5%8A%A0%E9%80%9FYolo/</id>
    <published>2023-07-20T08:14:12.000Z</published>
    <updated>2023-08-24T10:55:11.642Z</updated>
    
    <content type="html"><![CDATA[<p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/tensorrt/tensorrt.jpg"                      alt="tensorrt"                ></p><blockquote><p>使用TensorRT加速Yolov5模型<br>使用版本为<a class="link"   href="https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v7.0" >TensorRT-Yolov5-v7.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, <a class="link"   href="https://github.com/ultralytics/yolov5/tree/v7.0" >Yolov5 v7.0 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><blockquote><p>以yolov5s.pt为例，进行目标检测</p></blockquote><h2 id="下载工程源码"><a href="#下载工程源码" class="headerlink" title="下载工程源码"></a>下载工程源码</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照版本进行项目克隆 yolo与tensorrt的版本需一致</span></span><br><span class="line">git <span class="built_in">clone</span> -b v7.0 https://github.com/ultralytics/yolov5.git</span><br><span class="line">git <span class="built_in">clone</span> -b yolov5-v7.0 https://github.com/wang-xinyu/tensorrtx.git</span><br></pre></td></tr></table></figure></div><h2 id="获取-wts-文件"><a href="#获取-wts-文件" class="headerlink" title="获取 wts 文件"></a>获取 <code>wts</code> 文件</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 由pt转换</span></span><br><span class="line"><span class="built_in">cd</span> yolov5/</span><br><span class="line">wget https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s.pt</span><br><span class="line"><span class="built_in">cp</span> [PATH-TO-TENSORRTX]/yolov5/gen_wts.py .</span><br><span class="line">python gen_wts.py -w yolov5s.pt -o yolov5s.wts</span><br></pre></td></tr></table></figure></div><blockquote><p>也可以直接从model zoo中下载</p></blockquote><h2 id="编译tensorrt工程"><a href="#编译tensorrt工程" class="headerlink" title="编译tensorrt工程"></a>编译tensorrt工程</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> [PATH-TO-TENSORRTX]/yolov5/</span><br><span class="line"><span class="comment"># 若为自己训练的模型需要在 yololayer.h 中进行响应更改类别数量等</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"><span class="built_in">cp</span> [PATH-TO-ultralytics-yolov5]/yolov5s.wts . </span><br><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure></div><blockquote><p>我在这 <code>make</code> 中出现了报错 <code>/usr/bin/ld: warning: libnvcudla.so, needed by /usr/local/cuda/lib64/libcudla.so.1, not found (try using -rpath or -rpath-link)</code><br>这里我查出来是因为我的这个地址是存在软连接的，而不是实存在的路径，后我在 <code>CMakeLists.txt</code> 中把有关的cuda路换为不存在软连接的路径，问题解决 </p></blockquote><h2 id="转换-wts-为-engine-文件"><a href="#转换-wts-为-engine-文件" class="headerlink" title="转换 wts 为 engine 文件"></a>转换 <code>wts</code> 为 <code>engine</code> 文件</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./yolov5_det -s yolov5s.wts yolov5s.engine s</span><br></pre></td></tr></table></figure></div><blockquote><p>注意两个文件的路径问题</p></blockquote><h2 id="进行预测"><a href="#进行预测" class="headerlink" title="进行预测"></a>进行预测</h2><blockquote><p>在获取 <code>engine</code> 文件后就可以利用其进行预测，使用 <code>engine</code> 进行预测将自动调用tensorrt 如在之前的路径下</p></blockquote><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./yolov5_det -d yolov5.engine ../images</span><br></pre></td></tr></table></figure></div><p>即可对它提供的两张照片_zidane.jpg 和 _bus.jpg进行预测</p><p>也可以只用python进行调用</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要下载python-tensorrt, pycuda, etc.</span></span><br><span class="line">python yolov5_det_trt.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或使用CUDA-python代替pycuda</span></span><br><span class="line">python yolov5_det_trt_cuda_python.py</span><br></pre></td></tr></table></figure></div><h2 id="小捷径"><a href="#小捷径" class="headerlink" title="小捷径"></a>小捷径</h2><p>如果不使用c++进行推理，而只用tensorrt对python项目进行加速，是可以直接在yolo项目中使用 <code>export.py</code> 将 <code>pt</code> 直接转为 <code>engine</code>，程序会直接调用tensorrt的包进行转换，具体使用例子如</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python export.py --include engine --weights yolov5s.pt --device 0 --half</span><br></pre></td></tr></table></figure></div><blockquote><p>其中我指定了几个常用参数<br><code>--include engine</code> 为要转换的目标模型，tensorrt的目标为engine<br><code>--weights yolov5s.pt</code> 为被转换的模型文件，这里我们欲将yolov5s.pt进行转换<br><code>--device 0</code> 为指定设备为cuda: 0，由于tensorrt限制，这里必须使用gpu进行export，可根据gpu设备号修改数字<br><code>--half</code> 表示半精度推理<br>除了以上，还有非常多参数可以根据需求选择，具体可查看yolo项目 <code>export.py</code> 中的参数</p></blockquote><h2 id="TensorRT的使用"><a href="#TensorRT的使用" class="headerlink" title="TensorRT的使用"></a>TensorRT的使用</h2><p>只需要在使用模型推理时，指定模型权重文件为对应的 <code>.engine</code> 即可</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>如分类、分割等与其类似，可以参考<a class="link"   href="https://github.com/wang-xinyu/tensorrtx/tree/yolov5-v7.0/yolov5" >官方介绍 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>进行操作</p></blockquote>]]></content>
    
    
    <summary type="html">使用TensorRT加速Yolov5模型</summary>
    
    
    
    <category term="深度学习模型" scheme="http://example.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="yolo" scheme="http://example.com/tags/yolo/"/>
    
    <category term="人工智能" scheme="http://example.com/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="深度学习" scheme="http://example.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="TensorRT" scheme="http://example.com/tags/TensorRT/"/>
    
  </entry>
  
  <entry>
    <title>rplidarA1-gmapping</title>
    <link href="http://example.com/2023/06/30/rplidarA1-gmapping/"/>
    <id>http://example.com/2023/06/30/rplidarA1-gmapping/</id>
    <published>2023-06-30T07:35:47.000Z</published>
    <updated>2023-08-24T10:54:11.160Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>所参考的大佬教程如下 <br><a class="link"   href="https://blog.csdn.net/qq_43961980/article/details/118113609" >大佬1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a class="link"   href="https://blog.csdn.net/weixin_46781669/article/details/107738966?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242" >大佬2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <a class="link"   href="https://blog.csdn.net/VampireWolf/article/details/90042517" >大佬3 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="前情介绍"><a href="#前情介绍" class="headerlink" title="前情介绍"></a>前情介绍</h2><blockquote><p>任务背景为：要使用思岚A1M8激光雷达实现建图及避障、导航等功能<br>本次为实现建图</p></blockquote><blockquote><p>Gmapping是基于滤波SLAM框架的常用开源SLAM算法，在ROS中使用Gmapping建图需要提供 Odometry(里程计信息)和laser(激光数据)，但是只用一个激光雷达也可以进行Gmapping建图</p><blockquote><p>其实我们是有双目相机T265可以提供姿态信息的，但受限于当前知识水平，暂且使用较为方便的Gmapping算法进行操作</p></blockquote></blockquote><blockquote><p>采用的方法就是使用 laser_scan_matcher 功能包，其为增量激光扫描配准工具。该软件包允许扫描连续的 sensor_msgs &#x2F; LaserScan 消息之间的匹配，并将估计的激光位置发布为 geometry_msgs &#x2F; Pose2D 或 tf 变换。该包可以在没有其他传感器提供的任何测距估计的情况下使用。因此，它可以作为独立的里程计算器估算器。</p></blockquote><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="创建工作空间"><a href="#创建工作空间" class="headerlink" title="创建工作空间"></a>创建工作空间</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据自己习惯创建工作空间</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/rplidar_ws/src &amp;&amp; <span class="built_in">cd</span> ~/rplidar_ws/src</span><br></pre></td></tr></table></figure></div><h3 id="下载所需的功能包"><a href="#下载所需的功能包" class="headerlink" title="下载所需的功能包"></a>下载所需的功能包</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Slamtec/rplidar_ros.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/CCNYRoboticsLab/scan_tools.git</span><br></pre></td></tr></table></figure></div><h3 id="获取gmapping功能包"><a href="#获取gmapping功能包" class="headerlink" title="获取gmapping功能包"></a>获取gmapping功能包</h3><blockquote><p>网址为：<a class="link"   href="https://github.com/CCNYRoboticsLab/scan_tools.git" >https://github.com/CCNYRoboticsLab/scan_tools.git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <br>下载或克隆仓库后将其中的gmapping文件夹复制到工作空间下的src中（比如我的就是<code>~/rplidar_ws/src</code>）</p></blockquote><h3 id="接着下载必要功能包"><a href="#接着下载必要功能包" class="headerlink" title="接着下载必要功能包"></a>接着下载必要功能包</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将melodic替换为自己的ros版本</span></span><br><span class="line">sudo apt-get install ros-melodic-csm</span><br><span class="line">sudo apt-get install ros-melodic-gmapping</span><br></pre></td></tr></table></figure></div><h3 id="编译工作空间"><a href="#编译工作空间" class="headerlink" title="编译工作空间"></a>编译工作空间</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入工作空间</span></span><br><span class="line"><span class="built_in">cd</span> ~/rplidar_ws</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure></div><h3 id="修改启动launch文件"><a href="#修改启动launch文件" class="headerlink" title="修改启动launch文件"></a>修改启动launch文件</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Library/rplidar_ws/src/scan_tools-indigo/laser_scan_matcher/demo</span><br></pre></td></tr></table></figure></div><blockquote><p>这里原先的<code>demo_gmapping.launch</code>文件则为启动launch文件，这里要做的就是修改它以实行自己的设备<br>这里提供我的launch文件</p></blockquote><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Example launch file: uses laser_scan_matcher together with</span></span><br><span class="line"><span class="comment">slam_gmapping </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  #### set up data playback from bag #############################</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;/use_sim_time&quot;</span> <span class="attr">value</span>=<span class="string">&quot;flase&quot;</span>/&gt;</span><span class="comment">&lt;!-- 因为Gmapping 的simulation 时间是True, 改为false  网上查到的--&gt;</span></span><br><span class="line"></span><br><span class="line">  #### rplidar_a2 ################################################</span><br><span class="line">  <span class="comment">&lt;!--激光雷达的启动文件--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;rplidarNode&quot;</span>          <span class="attr">pkg</span>=<span class="string">&quot;rplidar_ros&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;rplidarNode&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_port&quot;</span>         <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/ttyUSB0&quot;</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_baudrate&quot;</span>     <span class="attr">type</span>=<span class="string">&quot;int&quot;</span>    <span class="attr">value</span>=<span class="string">&quot;115200&quot;</span>/&gt;</span> <span class="comment">&lt;!-- A1波特率 --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;frame_id&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;laser&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;inverted&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;angle_compensate&quot;</span>    <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_mode&quot;</span>           <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Sensitivity&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  #### publish an example base_link -&gt; laser transform ###########</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;base_link_to_laser&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">args</span>=<span class="string">&quot;0.0 0.0 0.0 0.0 0.0 0.0 /base_link /laser 40&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  #### start rviz ################################################</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">type</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rviz&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">args</span>=<span class="string">&quot;-d $(find laser_scan_matcher)/demo/demo_gmapping.rviz&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  #### start the laser scan_matcher ##############################</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;laser_scan_matcher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;laser_scan_matcher_node&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">&quot;laser_scan_matcher_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;fixed_frame&quot;</span> <span class="attr">value</span> = <span class="string">&quot;odom&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;max_iterations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;base_frame&quot;</span> <span class="attr">value</span> = <span class="string">&quot;base_link&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;use_odom&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;publy_pose&quot;</span> <span class="attr">value</span> = <span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;publy_tf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  #### start gmapping ############################################</span><br><span class="line"><span class="comment">&lt;!--前三个param必须设置修改，要不然tf_tree不完整--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;gmapping&quot;</span> <span class="attr">type</span>=<span class="string">&quot;slam_gmapping&quot;</span> <span class="attr">name</span>=<span class="string">&quot;slam_gmapping&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;base_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/base_link&quot;</span>/&gt;</span> <span class="comment">&lt;!--***机器人的坐标系--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;odom_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/odom&quot;</span> /&gt;</span> <span class="comment">&lt;!--***世界坐标系--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/map&quot;</span> /&gt;</span> <span class="comment">&lt;!--***地图坐标系--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_udpate_interval&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;maxUrange&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;sigma&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;kernelSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lstep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;astep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.15&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;iterations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lsigma&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ogain&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lskip&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;srr&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;srt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;stt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;linearUpdate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;angularUpdate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;temporalUpdate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.4&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;resampleThreshold&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;particles&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;xmin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;-5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ymin&quot;</span> <span class="attr">value</span>=<span class="string">&quot;-5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;xmax&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ymax&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.0&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;delta&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.02&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;llsamplerange&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.01&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;llsamplestep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lasamplerange&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;lasamplestep&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>其中 重点修改的为</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;rplidarNode&quot;</span>          <span class="attr">pkg</span>=<span class="string">&quot;rplidar_ros&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;rplidarNode&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_port&quot;</span>         <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/dev/ttyUSB0&quot;</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;serial_baudrate&quot;</span>     <span class="attr">type</span>=<span class="string">&quot;int&quot;</span>    <span class="attr">value</span>=<span class="string">&quot;115200&quot;</span>/&gt;</span> <span class="comment">&lt;!-- A1波特率 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;frame_id&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;laser&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;inverted&quot;</span>            <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;angle_compensate&quot;</span>    <span class="attr">type</span>=<span class="string">&quot;bool&quot;</span>   <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_mode&quot;</span>           <span class="attr">type</span>=<span class="string">&quot;string&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Sensitivity&quot;</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>第一行的<code>rplidarNode</code>及<code>rplidar_ros</code>需要按照自己的激光雷达启动节点而定<br>第三行的波特率数值需要根据雷达而定 如我的A1M8为115200</p></blockquote><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><blockquote><p>以下需要在同一终端中进行</p></blockquote><h3 id="刷新环境变量"><a href="#刷新环境变量" class="headerlink" title="刷新环境变量"></a>刷新环境变量</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/rplidar_ws/devel/setup.bash</span><br></pre></td></tr></table></figure></div><h3 id="给串口权限"><a href="#给串口权限" class="headerlink" title="给串口权限"></a>给串口权限</h3><p>可以使用</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /dev/*</span><br></pre></td></tr></table></figure></div><p>进行查询，如我的是<code>ttyUSB0</code><br>则输入</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure></div><h3 id="运行launch文件"><a href="#运行launch文件" class="headerlink" title="运行launch文件"></a>运行launch文件</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch  laser_scan_matcher demo_gmapping.launch</span><br></pre></td></tr></table></figure></div><blockquote><p>其中<code>demo_gmapping.launch</code>可以根据自己修改的launch文件而修改</p></blockquote>]]></content>
    
    
    <summary type="html">基于Jetson平台，使用思岚A1激光雷达运行gmapping进行建图</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
    <category term="rplidarA1" scheme="http://example.com/tags/rplidarA1/"/>
    
    <category term="Slam" scheme="http://example.com/tags/Slam/"/>
    
    <category term="Gmapping" scheme="http://example.com/tags/Gmapping/"/>
    
  </entry>
  
  <entry>
    <title>Acfly-Mavros</title>
    <link href="http://example.com/2023/06/28/Acfly-Mavros/"/>
    <id>http://example.com/2023/06/28/Acfly-Mavros/</id>
    <published>2023-06-28T02:37:24.000Z</published>
    <updated>2023-10-09T07:55:42.118Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此为为Jetson配置Intel T265，以此为 Acfly-A9飞控提供定位<br>官方参考教程：<a class="link"   href="https://github.com/IntelRealSense/realsense-ros" >realsense-ros <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>     <a class="link"   href="https://github.com/CGC12123/acfly-mavros" >acfly-mavros <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h2 id="ROS-Wrapper"><a href="#ROS-Wrapper" class="headerlink" title="ROS Wrapper"></a>ROS Wrapper</h2><blockquote><p>T265使用所需的packages</p></blockquote><h3 id="安装-ROS"><a href="#安装-ROS" class="headerlink" title="安装 ROS"></a>安装 ROS</h3><blockquote><p>Install <a class="link"   href="http://wiki.ros.org/kinetic/Installation/Ubuntu" >ROS Kinetic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 16.04, <a class="link"   href="http://wiki.ros.org/melodic/Installation/Ubuntu" >ROS Melodic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 18.04, <a class="link"   href="http://wiki.ros.org/noetic/Installation/Ubuntu" >ROS Noetic <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> on Ubuntu 20.04.<br><a class="link"   href="http://www.autolabor.com.cn/book/ROSTutorials/chapter1/12-roskai-fa-gong-ju-an-zhuang/124-an-zhuang-ros.html" >可参考autolabor的安装教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h3 id="安装realsense2-camera"><a href="#安装realsense2-camera" class="headerlink" title="安装realsense2_camera"></a>安装realsense2_camera</h3><p>realsense2_camera 可作为 ROS 发行版的 debian 软件包使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-$ROS_DISTRO-realsense2-camera</span><br></pre></td></tr></table></figure></div><h2 id="安装mavros"><a href="#安装mavros" class="headerlink" title="安装mavros"></a>安装mavros</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-catkin-tools python-rosinstall-generator -y</span><br><span class="line"># 如果用的ROS版本是Noetic则使用</span><br><span class="line"># sudo apt install python3-catkin-tools python3-rosinstall-generator python3-osrf-pycommon -y</span><br><span class="line"></span><br><span class="line"># 需要替换你的ROS版本，且以下指令需要在同一个终端执行</span><br><span class="line">source /opt/ros/$&#123;你的ROS版本&#125;/setup.bash</span><br><span class="line"></span><br><span class="line"># 因为acfly增加了自定义mavlink信息，若之前有通过二进制安装过mavros则需要卸载，没有则跳过</span><br><span class="line">sudo apt purge ros-$&#123;ROS_DISTRO&#125;-mavlink ros-$&#123;ROS_DISTRO&#125;-mavros</span><br><span class="line"></span><br><span class="line"># 构建ROS工作空间，可以自行修改路径</span><br><span class="line">mkdir -p ~/acfly_ws/src &amp;&amp; cd ~/acfly_ws</span><br><span class="line">catkin init</span><br><span class="line"></span><br><span class="line"># 下载mavlink和acfly-mavros</span><br><span class="line">cd src</span><br><span class="line">git clone -b release/$&#123;ROS_DISTRO&#125;/mavlink/2022.1.5-1 https://gitee.com/LauZanMo/mavlink</span><br><span class="line">git clone -b acfly-develop https://gitee.com/LauZanMo/acfly-mavros</span><br><span class="line"></span><br><span class="line"># 安装依赖，如果rosdep update没执行则需要执行成功才能继续</span><br><span class="line">cd .. &amp;&amp; rosdep install --from-paths src --ignore-src -y</span><br><span class="line"></span><br><span class="line"># 安装GeographicLib:</span><br><span class="line">./src/acfly-mavros/mavros/scripts/install_geographiclib_datasets.sh</span><br><span class="line"># 注意此处可能会报需要root权限（不会标error）出现后在前方加sudo即可</span><br><span class="line"></span><br><span class="line"># 第一次编译请执行acfly提供的脚本</span><br><span class="line">./src/acfly-mavros/update_custom_msg.sh</span><br><span class="line"># 后续更改mavros源码只需要执行catkin build</span><br><span class="line"></span><br><span class="line"># 每一次开启终端都需要设置环境变量</span><br><span class="line">source devel/setup.bash</span><br></pre></td></tr></table></figure></div><h2 id="安装T265及相关包"><a href="#安装T265及相关包" class="headerlink" title="安装T265及相关包"></a>安装T265及相关包</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/acfly_ws/src</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/thien94/vision_to_mavros.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/IntelRealSense/librealsense.git</span><br><span class="line"><span class="built_in">cd</span> ~/acfly_ws &amp;&amp; catkin build</span><br></pre></td></tr></table></figure></div><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 第一个终端</span><br><span class="line"># 打开t265</span><br><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br><span class="line"></span><br><span class="line"># 第二个终端</span><br><span class="line"># 添加权限</span><br><span class="line">sudo chmod 777 /dev/ttyAMA0</span><br><span class="line">roslaunch mavros acfly.launch fcu_url:=/dev/ttyUSB0:57600</span><br><span class="line"></span><br><span class="line"># 第三个终端</span><br><span class="line"># 此处需要先source前一步安装mavros工作空间中的setup.bash</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch vision_to_mavros t265_tf_to_mavros.launch</span><br></pre></td></tr></table></figure></div><p>或者单独写一个launch文件 <code>start_all.launch</code></p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find realsense2_camera)/launch/rs_t265.launch&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find mavros)/launch/acfly.launch&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find vision_to_mavros)/launch/t265_tf_to_mavros.launch&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>将文件放在新的ros包 <code>atart_all</code> 中 执行</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch atart_all start_all.launch</span><br></pre></td></tr></table></figure></div><h2 id="其他-使用指南"><a href="#其他-使用指南" class="headerlink" title="其他 使用指南"></a>其他 使用指南</h2><blockquote><p>acfly-mavros 作者提供了使用指南及二次开发指南<br><a class="link"   href="https://github.com/LauZanMo/acfly-mavros/blob/acfly-develop/acfly-mavros%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.md" >使用指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a class="link"   href="https://github.com/LauZanMo/acfly-mavros/blob/acfly-develop/acfly-mavros%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97.md" >二次开发指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote>]]></content>
    
    
    <summary type="html">基于Jetson平台，搭建Mavros，并配置T265为Acfly飞控提供定位</summary>
    
    
    
    <category term="无人机" scheme="http://example.com/categories/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    
    <category term="无人机" scheme="http://example.com/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
    <category term="双目相机" scheme="http://example.com/tags/%E5%8F%8C%E7%9B%AE%E7%9B%B8%E6%9C%BA/"/>
    
    <category term="T265" scheme="http://example.com/tags/T265/"/>
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
  </entry>
  
  <entry>
    <title>vnc远程连接jetson</title>
    <link href="http://example.com/2023/05/10/vnc%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5jetson/"/>
    <id>http://example.com/2023/05/10/vnc%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5jetson/</id>
    <published>2023-05-10T13:55:24.000Z</published>
    <updated>2023-05-10T14:16:52.615Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>事件背景为使用 <code>windows</code> 端的 <code>vnc viewer</code> 远程连接 <code>jetson orin nano</code></p></blockquote><h1 id="在nano端安装-vncserver"><a href="#在nano端安装-vncserver" class="headerlink" title="在nano端安装 vncserver"></a>在<code>nano端</code>安装 <code>vncserver</code></h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vncserver</span><br></pre></td></tr></table></figure></div><h1 id="开启vncserver"><a href="#开启vncserver" class="headerlink" title="开启vncserver"></a>开启vncserver</h1><p>在<code>nano</code>终端使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver</span><br></pre></td></tr></table></figure></div><p>或</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -geometry 1366x768 :1 </span><br><span class="line"># geometry设置vnc屏幕的大小，1为端口</span><br></pre></td></tr></table></figure></div><p>按照要求设置好密码后，会出现如下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/nano/server%20start.jpg"                                     ></p><blockquote><p>图示为在端口1开启</p></blockquote><p>使用</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -i vnc</span><br></pre></td></tr></table></figure></div><p>即可查询在使用vnc的进程</p><h1 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h1><p>打开 <code>windows</code> 端的 <code>vnc</code>，在上方输入 <code>ip:端口号</code> ，如<code>192.168.1.1:1</code></p><h1 id="出现的问题一"><a href="#出现的问题一" class="headerlink" title="出现的问题一"></a>出现的问题一</h1><h2 id="报错如下"><a href="#报错如下" class="headerlink" title="报错如下"></a>报错如下</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The connection was refused by the computer</span><br></pre></td></tr></table></figure></div><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><blockquote><p>原因为nano端的vncserver没开，在终端输入</p></blockquote><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver</span><br></pre></td></tr></table></figure></div><p>或</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -geometry 1366x768 :1 </span><br><span class="line"># geometry设置vnc屏幕的大小，1为端口</span><br></pre></td></tr></table></figure></div><p>重启 <code>windows</code> 的 <code>vnc</code> 即可</p><h1 id="出现问题二"><a href="#出现问题二" class="headerlink" title="出现问题二"></a>出现问题二</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>屏幕显示灰色并且鼠标是×型符号 下方出现<code>unencrypted connection</code></p><h2 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h2><h3 id="关闭端口"><a href="#关闭端口" class="headerlink" title="关闭端口"></a>关闭端口</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vncserver -kill :1</span><br><span class="line"># kill 端口为1的进程，注意:1前面要加空格</span><br></pre></td></tr></table></figure></div><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开配置文件</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/.vnc/xstartup</span><br><span class="line"># 打开配置文件</span><br></pre></td></tr></table></figure></div><p>修改配置文件为</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># Uncomment the following two lines for normal desktop:</span><br><span class="line"># unset SESSION_MANAGER</span><br><span class="line"># exec /etc/X11/xinit/xinitrc</span><br><span class="line"></span><br><span class="line">[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup</span><br><span class="line">[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources</span><br><span class="line">xsetroot -solid grey</span><br><span class="line">vncconfig -iconic &amp;</span><br><span class="line">x-terminal-emulator -geometry 80x24+10+10 -ls -title &quot;$VNCDESKTOP Desktop&quot; &amp;</span><br><span class="line">x-window-manager &amp;</span><br><span class="line"></span><br><span class="line">#gnome-terminal &amp;</span><br><span class="line"></span><br><span class="line">sesion-manager &amp; xfdesktop &amp; xfce4-panel &amp;</span><br><span class="line">xfce4-menu-plugin &amp;</span><br><span class="line">xfsettingsd &amp;</span><br><span class="line">xfconfd &amp;</span><br><span class="line">xfwm4 &amp;</span><br></pre></td></tr></table></figure></div><p>之后再打开vnc即可解决</p>]]></content>
    
    
    <summary type="html">使用VNC远程连接JetsonOrin Nano</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Jetson Orin Nano" scheme="http://example.com/tags/Jetson-Orin-Nano/"/>
    
    <category term="VNC" scheme="http://example.com/tags/VNC/"/>
    
    <category term="远程连接" scheme="http://example.com/tags/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu自启动脚本</title>
    <link href="http://example.com/2023/05/08/Ubuntu%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/"/>
    <id>http://example.com/2023/05/08/Ubuntu%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/</id>
    <published>2023-05-08T10:16:30.000Z</published>
    <updated>2023-07-24T02:56:51.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="任务背景"><a href="#任务背景" class="headerlink" title="任务背景"></a>任务背景</h1><p>任务背景为在Jetson Orin Nano上使用t265时，需要同时按序开启并执行三个不同终端<br>如下</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">添加权限</span><br><span class="line">sudo chmod 777 /dev/ttyAMA0</span><br><span class="line">roslaunch mavros acfly.launch fcu_url:=/dev/ttyUSB0:57600</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开t265文件夹，打开终端</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roslaunch vision_to_mavros t265_tf_to_mavros.launch</span><br></pre></td></tr></table></figure></div><h1 id="脚本的写法"><a href="#脚本的写法" class="headerlink" title="脚本的写法"></a>脚本的写法</h1><p>使用</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sh1 = <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_1.sh&quot;</span></span><br><span class="line">subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh1, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line"><span class="comment"># sh1为需要在该终端执行的命令</span></span><br></pre></td></tr></table></figure></div><p>其中sh1为事先写好的bash脚本，例如</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line">roslaunch realsense2_camera rs_t265.launch</span><br></pre></td></tr></table></figure></div><p>若有若干命令需要在同一终端中执行，则为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sh2s = [<span class="string">&quot;echo 123456 | sudo -S chmod +x /home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sudo chmod 777 /dev/ttyUSB0&quot;</span>, </span><br><span class="line">        <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>]</span><br><span class="line">sh2 = <span class="string">&quot;bash -c &#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;; &quot;</span>.join(sh2s))</span><br><span class="line">subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh2, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br></pre></td></tr></table></figure></div><blockquote><p>需要注意的是：<br>在一个终端中执行的需要放在同一个中，不能使用 <code>os.system</code> ，使用  <code>os.system</code> 则会回到最初始的终端中执行<br><code>subprocess.Popen</code> 创建的终端，若终端执行结束或出现报错，则该终端会被杀死消失，可使用 <code>--hold</code> 使其保持开启</p></blockquote><p>所以我的最终启动脚本为</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">T265_Start</span>():</span><br><span class="line">    sh1 = <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_1.sh&quot;</span></span><br><span class="line">    sh2s = [<span class="string">&quot;echo 123456 | sudo -S chmod +x /home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>,</span><br><span class="line">            <span class="string">&quot;sudo chmod 777 /dev/ttyUSB0&quot;</span>, </span><br><span class="line">            <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_2.sh&quot;</span>]</span><br><span class="line">    sh2 = <span class="string">&quot;bash -c &#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;; &quot;</span>.join(sh2s))</span><br><span class="line">    sh3 = <span class="string">&quot;/home/c/Library/Cv_for_Orinnano/utils/bash/T265_Start_3.sh&quot;</span></span><br><span class="line"></span><br><span class="line">    subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh1, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh2, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    subprocess.Popen([<span class="string">&#x27;gnome-terminal&#x27;</span>, <span class="string">&#x27;--&#x27;</span>, <span class="string">&#x27;bash&#x27;</span>, <span class="string">&#x27;-c&#x27;</span>, sh3, <span class="string">&#x27;--hold&#x27;</span>], </span><br><span class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure></div><h1 id="自启动的设置"><a href="#自启动的设置" class="headerlink" title="自启动的设置"></a>自启动的设置</h1>]]></content>
    
    
    <summary type="html">在Jetson Orin Nano - Ubuntu20.04中设置开启开机自启动，且该脚本适用于开启多终端任务场景</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Jetson" scheme="http://example.com/tags/Jetson/"/>
    
  </entry>
  
  <entry>
    <title>git的安装配置</title>
    <link href="http://example.com/2023/04/10/git%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/04/10/git%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</id>
    <published>2023-04-10T13:10:28.000Z</published>
    <updated>2023-04-10T13:49:41.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>可在官方网站上下载，网站：<a class="link"   href="https://git-scm.com//" >https://git-scm.com/\ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>也可在国内镜像源下载，网站：<a class="link"   href="http://npm.taobao.org/mirrors/git-for-windows" >http://npm.taobao.org/mirrors/git-for-windows <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure></div><h1 id="github账号的注册"><a href="#github账号的注册" class="headerlink" title="github账号的注册"></a>github账号的注册</h1><p>进入github，注册账号，网站：<a class="link"   href="https://github.com/" >https://github.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><blockquote><p>在此处要注意记住你注册时的用户名和邮箱</p></blockquote><h1 id="git的配置"><a href="#git的配置" class="headerlink" title="git的配置"></a>git的配置</h1><h2 id="找到git命令行输入处"><a href="#找到git命令行输入处" class="headerlink" title="找到git命令行输入处"></a>找到git命令行输入处</h2><h3 id="方法1-Windows"><a href="#方法1-Windows" class="headerlink" title="方法1-Windows"></a>方法1-Windows</h3><p>在文件夹中右键，点击 <code>git bash</code> ，没有也没关系，很可能会没有</p><h3 id="方法2-Windows"><a href="#方法2-Windows" class="headerlink" title="方法2-Windows"></a>方法2-Windows</h3><p>按 <code>win+r</code> 后输入 <code>cmd</code> （在默认路径下呼出）<br>或 在你的目标文件夹下点击上面的框，输入 <code>cmd</code> 然后回车可以在当前路径下呼出 <code>cmd</code> </p><h3 id="方法3-Ubuntu"><a href="#方法3-Ubuntu" class="headerlink" title="方法3-Ubuntu"></a>方法3-Ubuntu</h3><p>直接在终端中输入 <code>git</code> 命令即可</p><h2 id="配置用户名"><a href="#配置用户名" class="headerlink" title="配置用户名"></a>配置用户名</h2><p>在命令行中输入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;username&quot;</span><br></pre></td></tr></table></figure></div><blockquote><p>此处 <code>username</code> 是自己的用户名</p></blockquote><h2 id="配置邮箱"><a href="#配置邮箱" class="headerlink" title="配置邮箱"></a>配置邮箱</h2><p>在命令行中输入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;username@email.com&quot;</span><br></pre></td></tr></table></figure></div><blockquote><p>此处 <code>username@email.com</code> 是自己的邮箱</p></blockquote><h2 id="验证配置"><a href="#验证配置" class="headerlink" title="验证配置"></a>验证配置</h2><p>在命令行中输入</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list </span><br></pre></td></tr></table></figure></div><blockquote><p>输出内容可以检查你的配置信息是否争取，如有误可以回到前面的配置步骤进行更改</p></blockquote><p>至此，git下载及配置完成</p><h1 id="git常用命令的学习"><a href="#git常用命令的学习" class="headerlink" title="git常用命令的学习"></a>git常用命令的学习</h1><p>推荐一个教程网站：<a class="link"   href="https://learngitbranching.js.org/?locale=zh_CN" >https://learngitbranching.js.org/?locale=zh_CN <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>]]></content>
    
    
    <summary type="html">git的安装配置及github账号的注册</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>启动virtualbox虚拟机发生错误警告</title>
    <link href="http://example.com/2023/04/10/%E5%90%AF%E5%8A%A8virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E8%AD%A6%E5%91%8A/"/>
    <id>http://example.com/2023/04/10/%E5%90%AF%E5%8A%A8virtualbox%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF%E8%AD%A6%E5%91%8A/</id>
    <published>2023-04-10T11:40:40.000Z</published>
    <updated>2023-04-16T11:17:36.557Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>部分问题解决参考自 <a class="link"   href="https://blog.csdn.net/m0_53688587/article/details/125074012" >https://blog.csdn.net/m0_53688587/article/details/125074012 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>启动virtualbox虚拟机显示Attempted to kill the idle task错误 如下<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/ubuntu/problem.jpg"                                     ></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>这个问题我出现过两次</p><h2 id="第一次"><a href="#第一次" class="headerlink" title="第一次"></a>第一次</h2><p>第一次出现这个问题是在刚装 <code>WSL2</code> 后的一段时间，突然的改变让我意识到可能是 <code>WSL2</code> 的安装出了问题</p><p>排除 <code>WSL2</code> 或虚拟机本身问题后<br>查了很多问题 最后发现<br>大部分问题原因出在 <code>hyper-v</code> 的设置上<br>只需启动或关闭 <code>hyper-v</code> 服务即可解决问题</p><blockquote><p>在“控制面板”中，打开“程序和功能” <br>选择“启用或关闭 Windows 功能” <br>展开 Hyper-V ，展开 Hyper-V 平台 ，然后清除“Hyper-V 虚拟机监控程序” 复选框。</p></blockquote><h2 id="第二次"><a href="#第二次" class="headerlink" title="第二次"></a>第二次</h2><p>当我第二次发现这个问题时，距离上次使用虚拟机已经过去和很长时间了，于是我按照第一次的经验，熟练的进行操作<br>耶？竟然不管用<br>于是，我有又开始疯狂查，最后，发现似乎是分配到cpu和内存资源不够<br>解决的操作如下</p><blockquote><p>在 <code>virtualbox</code> 界面下，进入设置，找到系统设置中的处理器分配，把处理器数量加到2及以上，为了放心，我还在下方的显示窗口中将显存分配提高到32以上，至此，问题解决。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/../images/ubuntu/sulution1.jpg"                                     ></p></blockquote><blockquote><p>虽然感觉可能问题的解决是在我先前关闭 <code>hyper-v</code> 有关，但增加处理器数和显存分配大小确实解决了我的问题<br> 如果只进行了一般的操作，问题还是没解决，可用参考我的两次经历来回试试看</p></blockquote>]]></content>
    
    
    <summary type="html">启动virtualbox虚拟机显示Attempted to kill the idle task错误</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ubuntu20.04" scheme="http://example.com/tags/Ubuntu20-04/"/>
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Ubuntu22.04" scheme="http://example.com/tags/Ubuntu22-04/"/>
    
    <category term="虚拟机" scheme="http://example.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="virtualbox" scheme="http://example.com/tags/virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22.04换源</title>
    <link href="http://example.com/2023/04/09/Ubuntu22.04%E6%8D%A2%E6%BA%90/"/>
    <id>http://example.com/2023/04/09/Ubuntu22.04%E6%8D%A2%E6%BA%90/</id>
    <published>2023-04-09T08:27:31.000Z</published>
    <updated>2023-04-10T11:41:42.189Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>此为由20.04直接copy而来 未经验证</p></blockquote><h1 id="备份环境变量文件"><a href="#备份环境变量文件" class="headerlink" title="备份环境变量文件"></a>备份环境变量文件</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure></div><blockquote><p>sources.list 即储存环境变量的文件</p></blockquote><h1 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></div><blockquote><p>进入文件后按<code>i</code>或<code>insert</code>启动输入模式 删除原有内容</p></blockquote><blockquote><p>可在进入输入模式前在航首按<code>dd</code>删除当前行 或<code>dG</code>删除光标以后所有内容</p></blockquote><p>删除内容后使用新源进行替换</p><p><strong>阿里源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>清华源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>中科大源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>网易163源</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></div><p><strong>还源完成后</strong></p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></div><p>让计算机根据源进行更新</p>]]></content>
    
    
    <summary type="html">Ubuntu22.04更换国内源，提高速度</summary>
    
    
    
    
    <category term="Ubuntu" scheme="http://example.com/tags/Ubuntu/"/>
    
    <category term="Ubuntu22.04" scheme="http://example.com/tags/Ubuntu22-04/"/>
    
  </entry>
  
  <entry>
    <title>在树莓派上安装Ros</title>
    <link href="http://example.com/2023/04/09/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E5%AE%89%E8%A3%85Ros/"/>
    <id>http://example.com/2023/04/09/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E5%AE%89%E8%A3%85Ros/</id>
    <published>2023-04-09T07:05:31.000Z</published>
    <updated>2023-07-09T09:36:26.562Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考自<a class="link"   href="https://blog.csdn.net/Kevin555666888/article/details/107207719" >https://blog.csdn.net/Kevin555666888/article/details/107207719 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p></blockquote><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><blockquote><p>若源可用或源没问题可不换</p></blockquote><h2 id="更换源信息"><a href="#更换源信息" class="headerlink" title="更换源信息"></a>更换源信息</h2><blockquote><p>以下为中科大源</p></blockquote><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c &#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span><br></pre></td></tr></table></figure></div><h2 id="设置key"><a href="#设置key" class="headerlink" title="设置key"></a>设置key</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu.com:80&#x27; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br></pre></td></tr></table></figure></div><h2 id="进行更新"><a href="#进行更新" class="headerlink" title="进行更新"></a>进行更新</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></div><h1 id="安装ROS"><a href="#安装ROS" class="headerlink" title="安装ROS"></a>安装ROS</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-melodic-desktop-full</span><br></pre></td></tr></table></figure></div><blockquote><p>若在此处报错可能是源出了问题 可不断使用<code>sudo apt-get update</code> 和 <code>sudo apt-get upgrade</code>进行更新或更换网络</p></blockquote><h1 id="安装ROS依赖"><a href="#安装ROS依赖" class="headerlink" title="安装ROS依赖"></a>安装ROS依赖</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br></pre></td></tr></table></figure></div><blockquote><p>若显示rosdep不是内部命令 则</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosdep update</span><br></pre></td></tr></table></figure></div></blockquote><hr><p>我在安装此处的时候出现的比较诡异的报错</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR: cannot download default sources list from:</span><br><span class="line">https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/sources.list.d/20-default.list</span><br><span class="line">Website may be down.</span><br></pre></td></tr></table></figure></div><p>看过别人的解决(来自<a class="link"   href="https://mp.weixin.qq.com/s/VGs8oWdhHH6XsHcx21lN4Q)/" >https://mp.weixin.qq.com/s/VGs8oWdhHH6XsHcx21lN4Q)\ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>方法如下<br>安装</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install rosdepc</span><br></pre></td></tr></table></figure></div><p>若没有显示pip则可尝试</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip </span><br></pre></td></tr></table></figure></div><p>如果还是没有 则</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip </span><br><span class="line">sudo pip install rosdepc</span><br></pre></td></tr></table></figure></div><p>在这之后再次运行 应该可用解决</p><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rosdepc init</span><br><span class="line">rosdepc update</span><br></pre></td></tr></table></figure></div><blockquote><p>和前面的差别是<code>rosdep</code>换成了<code>rosdepc</code><br>是一个国内大佬做的</p><p>至此 完美解决问题</p></blockquote><h1 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></div><h1 id="安装便利工具"><a href="#安装便利工具" class="headerlink" title="安装便利工具"></a>安装便利工具</h1><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br></pre></td></tr></table></figure></div><h1 id="验证安装——运行实例"><a href="#验证安装——运行实例" class="headerlink" title="验证安装——运行实例"></a>验证安装——运行实例</h1><blockquote><p>打开第一个终端 输入：<code>roscore</code><br>打开第二个终端 输入：<code>rosrun turtlesim turtlesim_node</code><br>此时会打开一个有一个乌龟的窗口<br>打开第三个终端 输入：<code>rosrun turtlesim turtle_teleop_key</code><br>选择第三个终端 然后按键盘上的方向键就可以控制小乌龟运动了。</p></blockquote><blockquote><p>如果此时乌龟动起来了 表明安装成功</p></blockquote>]]></content>
    
    
    <summary type="html">在树莓派上进行Ros安装</summary>
    
    
    
    <category term="环境配置及相关工具" scheme="http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Ros" scheme="http://example.com/tags/Ros/"/>
    
    <category term="树莓派" scheme="http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
</feed>
